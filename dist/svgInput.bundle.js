!function(t){var e={};function s(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,s),i.l=!0,i.exports}s.m=t,s.c=e,s.d=function(t,e,r){s.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:r})},s.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},s.t=function(t,e){if(1&e&&(t=s(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var r=Object.create(null);if(s.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var i in t)s.d(r,i,function(e){return t[e]}.bind(null,i));return r},s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,"a",e),e},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},s.p="",s(s.s=12)}([function(t,e,s){(function(s){var r,i,n;i=[],void 0===(n="function"==typeof(r=function(){"use strict";function e(t,e,s){var r=new XMLHttpRequest;r.open("GET",t),r.responseType="blob",r.onload=function(){o(r.response,e,s)},r.onerror=function(){console.error("could not download file")},r.send()}function r(t){var e=new XMLHttpRequest;return e.open("HEAD",t,!1),e.send(),200<=e.status&&299>=e.status}function i(t){try{t.dispatchEvent(new MouseEvent("click"))}catch(s){var e=document.createEvent("MouseEvents");e.initMouseEvent("click",!0,!0,window,0,0,0,80,20,!1,!1,!1,!1,0,null),t.dispatchEvent(e)}}var n="object"==typeof window&&window.window===window?window:"object"==typeof self&&self.self===self?self:"object"==typeof s&&s.global===s?s:void 0,o=n.saveAs||"object"!=typeof window||window!==n?function(){}:"download"in HTMLAnchorElement.prototype?function(t,s,o){var a=n.URL||n.webkitURL,h=document.createElement("a");s=s||t.name||"download",h.download=s,h.rel="noopener","string"==typeof t?(h.href=t,h.origin===location.origin?i(h):r(h.href)?e(t,s,o):i(h,h.target="_blank")):(h.href=a.createObjectURL(t),setTimeout((function(){a.revokeObjectURL(h.href)}),4e4),setTimeout((function(){i(h)}),0))}:"msSaveOrOpenBlob"in navigator?function(t,s,n){if(s=s||t.name||"download","string"!=typeof t)navigator.msSaveOrOpenBlob(function(t,e){return void 0===e?e={autoBom:!1}:"object"!=typeof e&&(console.warn("Depricated: Expected third argument to be a object"),e={autoBom:!e}),e.autoBom&&/^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(t.type)?new Blob(["\ufeff",t],{type:t.type}):t}(t,n),s);else if(r(t))e(t,s,n);else{var o=document.createElement("a");o.href=t,o.target="_blank",setTimeout((function(){i(o)}))}}:function(t,s,r,i){if((i=i||open("","_blank"))&&(i.document.title=i.document.body.innerText="downloading..."),"string"==typeof t)return e(t,s,r);var o="application/octet-stream"===t.type,a=/constructor/i.test(n.HTMLElement)||n.safari,h=/CriOS\/[\d]+/.test(navigator.userAgent);if((h||o&&a)&&"object"==typeof FileReader){var l=new FileReader;l.onloadend=function(){var t=l.result;t=h?t:t.replace(/^data:[^;]*;/,"data:attachment/file;"),i?i.location.href=t:location=t,i=null},l.readAsDataURL(t)}else{var c=n.URL||n.webkitURL,u=c.createObjectURL(t);i?i.location=u:location.href=u,i=null,setTimeout((function(){c.revokeObjectURL(u)}),4e4)}};n.saveAs=o.saveAs=o,t.exports=o})?r.apply(e,i):r)||(t.exports=n)}).call(this,s(2))},function(t,e,s){"use strict";s.d(e,"a",(function(){return U}));var r={CircleDiameter:5,InitialClusterType:"Random",WalkerSource:"Random",MaxWalkers:5e3,EdgeMargin:0,PruneOldWalkers:!1,MaxAge:30,ReplenishWalkers:!1,PruneDistantWalkers:!1,MaxWanderDistance:20,VaryDiameterByDistance:!1,VaryDiameterRandomly:!1,ShowClusters:!0,ShowWalkers:!0,ShowShapes:!0,BiasTowards:"",BiasForce:1,UsePerWalkerBias:!0,UseFrame:!0,FrameSize:900,CaptureLines:!0,RenderMode:"Shapes",UseStroke:!1,UseColors:!1,BackgroundColor:{h:230,s:20,b:40},WalkerColor:{h:200,s:30,b:44},ClusterColor:{h:30,s:70,b:80},ShapeColor:{h:100,s:50,b:80},LineColor:{h:10,s:70,b:100},FrameColor:{h:0,s:100,b:100}};const i=[];class n{constructor(){this._bvh_parent=null,this._bvh_branch=!0,this._bvh_left=null,this._bvh_right=null,this._bvh_sort=0,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}static getBranch(){return i.length?i.pop():new n}static releaseBranch(t){i.push(t)}static sortBranches(t,e){return t.sort>e.sort?-1:1}}class o{constructor(){this._hierarchy=null,this._bodies=[],this._dirty_branches=[]}insert(t,e=!1){if(!e){const e=t._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");t._bvh=this,this._bodies.push(t)}const s=t._polygon,r=t.x,i=t.y;s&&(t._dirty_coords||t.x!==t._x||t.y!==t._y||t.angle!==t._angle||t.scale_x!==t._scale_x||t.scale_y!==t._scale_y)&&t._calculateCoords();const o=t._bvh_padding,a=s?0:t.radius*t.scale,h=(s?t._min_x:r-a)-o,l=(s?t._min_y:i-a)-o,c=(s?t._max_x:r+a)+o,u=(s?t._max_y:i+a)+o;t._bvh_min_x=h,t._bvh_min_y=l,t._bvh_max_x=c,t._bvh_max_y=u;let p=this._hierarchy,_=0;if(p)for(;;){if(!p._bvh_branch){const e=p._bvh_parent,s=p._bvh_min_x,r=p._bvh_min_y,i=p._bvh_max_x,o=p._bvh_max_y,a=p._bvh_parent=t._bvh_parent=n.getBranch();a._bvh_parent=e,a._bvh_left=p,a._bvh_right=t,a._bvh_sort=_++,a._bvh_min_x=h<s?h:s,a._bvh_min_y=l<r?l:r,a._bvh_max_x=c>i?c:i,a._bvh_max_y=u>o?u:o,e?e._bvh_left===p?e._bvh_left=a:e._bvh_right=a:this._hierarchy=a;break}{const t=p._bvh_left,e=t._bvh_min_y,s=t._bvh_max_x,r=t._bvh_max_y,i=h<t._bvh_min_x?h:t._bvh_min_x,n=l<e?l:e,o=c>s?c:s,a=u>r?u:r,d=(o-i)*(a-n)-(s-t._bvh_min_x)*(r-e),y=p._bvh_right,m=y._bvh_min_x,f=y._bvh_min_y,g=y._bvh_max_x,v=y._bvh_max_y,x=h<m?h:m,b=l<f?l:f,w=c>g?c:g,O=u>v?u:v,T=(w-x)*(O-b)-(g-m)*(v-f);p._bvh_sort=_++,p._bvh_min_x=i<x?i:x,p._bvh_min_y=n<b?n:b,p._bvh_max_x=o>w?o:w,p._bvh_max_y=a>O?a:O,p=d<=T?t:y}}else this._hierarchy=t}remove(t,e=!1){if(!e){const e=t._bvh;if(e&&e!==this)throw new Error("Body belongs to another collision system");t._bvh=null,this._bodies.splice(this._bodies.indexOf(t),1)}if(this._hierarchy===t)return void(this._hierarchy=null);const s=t._bvh_parent,r=s._bvh_parent,i=s._bvh_left,o=i===t?s._bvh_right:i;if(o._bvh_parent=r,o._bvh_branch&&(o._bvh_sort=s._bvh_sort),r){r._bvh_left===s?r._bvh_left=o:r._bvh_right=o;let t=r;for(;t;){const e=t._bvh_left,s=e._bvh_min_x,r=e._bvh_min_y,i=e._bvh_max_x,n=e._bvh_max_y,o=t._bvh_right,a=o._bvh_min_x,h=o._bvh_min_y,l=o._bvh_max_x,c=o._bvh_max_y;t._bvh_min_x=s<a?s:a,t._bvh_min_y=r<h?r:h,t._bvh_max_x=i>l?i:l,t._bvh_max_y=n>c?n:c,t=t._bvh_parent}}else this._hierarchy=o;n.releaseBranch(s)}update(){const t=this._bodies,e=t.length;for(let s=0;s<e;++s){const e=t[s];let r=!1;if(r||e.padding===e._bvh_padding||(e._bvh_padding=e.padding,r=!0),!r){const t=e._polygon;t&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords();const s=e.x,i=e.y,n=t?0:e.radius*e.scale,o=t?e._min_x:s-n,a=t?e._min_y:i-n,h=t?e._max_x:s+n,l=t?e._max_y:i+n;r=o<e._bvh_min_x||a<e._bvh_min_y||h>e._bvh_max_x||l>e._bvh_max_y}r&&(this.remove(e,!0),this.insert(e,!0))}}potentials(t){const e=[],s=t._bvh_min_x,r=t._bvh_min_y,i=t._bvh_max_x,n=t._bvh_max_y;let o=this._hierarchy,a=!0;if(!o||!o._bvh_branch)return e;for(;o;){if(a){a=!1;let t=o._bvh_branch?o._bvh_left:null;for(;t&&t._bvh_max_x>=s&&t._bvh_max_y>=r&&t._bvh_min_x<=i&&t._bvh_min_y<=n;)o=t,t=o._bvh_branch?o._bvh_left:null}const h=o._bvh_branch,l=h?o._bvh_right:null;if(l&&l._bvh_max_x>s&&l._bvh_max_y>r&&l._bvh_min_x<i&&l._bvh_min_y<n)o=l,a=!0;else{h||o===t||e.push(o);let s=o._bvh_parent;if(!s)break;for(;s&&s._bvh_right===o;)o=s,s=o._bvh_parent;o=s}}return e}draw(t){const e=this._bodies,s=e.length;for(let r=0;r<s;++r)e[r].draw(t)}drawBVH(t){let e=this._hierarchy,s=!0;for(;e;){if(s){s=!1;let t=e._bvh_branch?e._bvh_left:null;for(;t;)e=t,t=e._bvh_branch?e._bvh_left:null}const r=e._bvh_branch,i=e._bvh_min_x,n=e._bvh_min_y,o=e._bvh_max_x,a=e._bvh_max_y,h=r?e._bvh_right:null;if(t.moveTo(i,n),t.lineTo(o,n),t.lineTo(o,a),t.lineTo(i,a),t.lineTo(i,n),h)e=h,s=!0;else{let t=e._bvh_parent;if(!t)break;for(;t&&t._bvh_right===e;)e=t,t=e._bvh_parent;e=t}}}}class a{constructor(){this.collision=!1,this.a=null,this.b=null,this.a_in_b=!1,this.a_in_b=!1,this.overlap=0,this.overlap_x=0,this.overlap_y=0}}function h(t,e,s=null,r=!0){const i=t._polygon,n=e._polygon;let o=!1;return s&&(s.a=t,s.b=e,s.a_in_b=!0,s.b_in_a=!0,s.overlap=null,s.overlap_x=0,s.overlap_y=0),i&&(t._dirty_coords||t.x!==t._x||t.y!==t._y||t.angle!==t._angle||t.scale_x!==t._scale_x||t.scale_y!==t._scale_y)&&t._calculateCoords(),n&&(e._dirty_coords||e.x!==e._x||e.y!==e._y||e.angle!==e._angle||e.scale_x!==e._scale_x||e.scale_y!==e._scale_y)&&e._calculateCoords(),r&&!function(t,e){const s=t._polygon,r=s?0:t.x,i=s?0:t.y,n=s?0:t.radius*t.scale,o=s?t._min_x:r-n,a=s?t._min_y:i-n,h=s?t._max_x:r+n,l=s?t._max_y:i+n,c=e._polygon,u=c?0:e.x,p=c?0:e.y,_=c?0:e.radius*e.scale,d=c?e._min_x:u-_,y=c?e._min_y:p-_,m=c?e._max_x:u+_,f=c?e._max_y:p+_;return o<m&&a<f&&h>d&&l>y}(t,e)||(i&&t._dirty_normals&&t._calculateNormals(),n&&e._dirty_normals&&e._calculateNormals(),o=i&&n?function(t,e,s=null){const r=t._coords.length,i=e._coords.length;if(2===r&&2===i){const r=t._coords,i=e._coords;return s&&(s.overlap=0),r[0]===i[0]&&r[1]===i[1]}const n=t._coords,o=e._coords,a=t._normals,h=e._normals;if(r>2)for(let t=0,e=1;t<r;t+=2,e+=2)if(c(n,o,a[t],a[e],s))return!1;if(i>2)for(let t=0,e=1;t<i;t+=2,e+=2)if(c(n,o,h[t],h[e],s))return!1;return!0}(t,e,s):i?l(t,e,s,!1):n?l(e,t,s,!0):function(t,e,s=null){const r=t.radius*t.scale,i=e.radius*e.scale,n=e.x-t.x,o=e.y-t.y,a=r+i,h=n*n+o*o;if(h>a*a)return!1;if(s){const t=Math.sqrt(h);s.a_in_b=r<=i&&t<=i-r,s.b_in_a=i<=r&&t<=r-i,s.overlap=a-t,s.overlap_x=n/t,s.overlap_y=o/t}return!0}(t,e,s)),s&&(s.collision=o),o}function l(t,e,s=null,r=!1){const i=t._coords,n=t._edges,o=t._normals,a=e.x,h=e.y,l=e.radius*e.scale,c=2*l,u=l*l,p=i.length;let _=!0,d=!0,y=null,m=0,f=0;if(2===p){const t=a-i[0],e=h-i[1],r=t*t+e*e;if(r>u)return!1;if(s){const s=Math.sqrt(r);y=l-s,m=t/s,f=e/s,d=!1}}else for(let t=0,e=1;t<p;t+=2,e+=2){const r=a-i[t],g=h-i[e],v=n[t],x=n[e],b=r*v+g*x,w=b<0?-1:b>v*v+x*x?1:0;let O=!1,T=0,C=0,k=0;if(s&&_&&r*r+g*g>u&&(_=!1),w){const e=-1===w,o=e?0===t?p-2:t-2:t===p-2?0:t+2,c=o+1,_=a-i[o],y=h-i[c],m=n[o],f=n[c],v=_*m+y*f;if((v<0?-1:v>m*m+f*f?1:0)===-w){const t=e?r:_,i=e?g:y,n=t*t+i*i;if(n>u)return!1;if(s){const e=Math.sqrt(n);O=!0,T=l-e,C=t/e,k=i/e,d=!1}}}else{const i=o[t],n=o[e],a=r*i+g*n,h=a<0?-a:a;if(a>0&&h>l)return!1;s&&(O=!0,T=l-a,C=i,k=n,(d&&a>=0||T<c)&&(d=!1))}O&&(null===y||y>T)&&(y=T,m=C,f=k)}return s&&(s.a_in_b=r?d:_,s.b_in_a=r?_:d,s.overlap=y,s.overlap_x=r?-m:m,s.overlap_y=r?-f:f),!0}function c(t,e,s,r,i=null){const n=t.length,o=e.length;if(!n||!o)return!0;let a=null,h=null,l=null,c=null;for(let e=0,i=1;e<n;e+=2,i+=2){const n=t[e]*s+t[i]*r;(null===a||a>n)&&(a=n),(null===h||h<n)&&(h=n)}for(let t=0,i=1;t<o;t+=2,i+=2){const n=e[t]*s+e[i]*r;(null===l||l>n)&&(l=n),(null===c||c<n)&&(c=n)}if(a>c||h<l)return!0;if(i){let t=0;if(a<l)if(i.a_in_b=!1,h<c)t=h-l,i.b_in_a=!1;else{const e=h-l,s=c-a;t=e<s?e:-s}else if(i.b_in_a=!1,h>c)t=a-c,i.a_in_b=!1;else{const e=h-l,s=c-a;t=e<s?e:-s}const e=i.overlap,n=t<0?-t:t;if(null===e||e>n){const e=t<0?-1:1;i.overlap=n,i.overlap_x=s*e,i.overlap_y=r*e}}return!1}class u{constructor(t=0,e=0,s=0){this.x=t,this.y=e,this.padding=s,this._circle=!1,this._polygon=!1,this._point=!1,this._bvh=null,this._bvh_parent=null,this._bvh_branch=!1,this._bvh_padding=s,this._bvh_min_x=0,this._bvh_min_y=0,this._bvh_max_x=0,this._bvh_max_y=0}collides(t,e=null,s=!0){return h(this,t,e,s)}potentials(){const t=this._bvh;if(null===t)throw new Error("Body does not belong to a collision system");return t.potentials(this)}remove(){const t=this._bvh;t&&t.remove(this,!1)}createResult(){return new a}static createResult(){return new a}}class p extends u{constructor(t=0,e=0,s=0,r=1,i=0){super(t,e,i),this.radius=s,this.scale=r}draw(t){const e=this.x,s=this.y,r=this.radius*this.scale;t.moveTo(e+r,s),t.arc(e,s,r,0,2*Math.PI)}}class _ extends u{constructor(t=0,e=0,s=[],r=0,i=1,n=1,o=0){super(t,e,o),this.angle=r,this.scale_x=i,this.scale_y=n,this._polygon=!0,this._x=t,this._y=e,this._angle=r,this._scale_x=i,this._scale_y=n,this._min_x=0,this._min_y=0,this._max_x=0,this._max_y=0,this._points=null,this._coords=null,this._edges=null,this._normals=null,this._dirty_coords=!0,this._dirty_normals=!0,_.prototype.setPoints.call(this,s)}draw(t){(this._dirty_coords||this.x!==this._x||this.y!==this._y||this.angle!==this._angle||this.scale_x!==this._scale_x||this.scale_y!==this._scale_y)&&this._calculateCoords();const e=this._coords;if(2===e.length)t.moveTo(e[0],e[1]),t.arc(e[0],e[1],1,0,2*Math.PI);else{t.moveTo(e[0],e[1]);for(let s=2;s<e.length;s+=2)t.lineTo(e[s],e[s+1]);e.length>4&&t.lineTo(e[0],e[1])}}setPoints(t){const e=t.length;this._points=new Float64Array(2*e),this._coords=new Float64Array(2*e),this._edges=new Float64Array(2*e),this._normals=new Float64Array(2*e);const s=this._points;for(let r=0,i=0,n=1;r<e;++r,i+=2,n+=2){const e=t[r];s[i]=e[0],s[n]=e[1]}this._dirty_coords=!0}_calculateCoords(){const t=this.x,e=this.y,s=this.angle,r=this.scale_x,i=this.scale_y,n=this._points,o=this._coords,a=n.length;let h,l,c,u;for(let p=0,_=1;p<a;p+=2,_+=2){let a=n[p]*r,d=n[_]*i;if(s){const t=Math.cos(s),e=Math.sin(s),r=a;a=r*t-d*e,d=r*e+d*t}a+=t,d+=e,o[p]=a,o[_]=d,0===p?(h=l=a,c=u=d):(a<h?h=a:a>l&&(l=a),d<c?c=d:d>u&&(u=d))}this._x=t,this._y=e,this._angle=s,this._scale_x=r,this._scale_y=i,this._min_x=h,this._min_y=c,this._max_x=l,this._max_y=u,this._dirty_coords=!1,this._dirty_normals=!0}_calculateNormals(){const t=this._coords,e=this._edges,s=this._normals,r=t.length;for(let i=0,n=1;i<r;i+=2,n+=2){const o=i+2<r?i+2:0,a=t[o]-t[i],h=t[o+1]-t[n],l=a||h?Math.sqrt(a*a+h*h):0;e[i]=a,e[n]=h,s[i]=l?h/l:0,s[n]=l?-a/l:0}this._dirty_normals=!1}}class d extends _{constructor(t=0,e=0,s=0){super(t,e,[[0,0]],0,1,1,s),this._point=!0}}d.prototype.setPoints=void 0;class y{constructor(){this._bvh=new o}createCircle(t=0,e=0,s=0,r=1,i=0){const n=new p(t,e,s,r,i);return this._bvh.insert(n),n}createPolygon(t=0,e=0,s=[[0,0]],r=0,i=1,n=1,o=0){const a=new _(t,e,s,r,i,n,o);return this._bvh.insert(a),a}createPoint(t=0,e=0,s=0){const r=new d(t,e,s);return this._bvh.insert(r),r}createResult(){return new a}static createResult(){return new a}insert(...t){for(const e of t)this._bvh.insert(e,!1);return this}remove(...t){for(const e of t)this._bvh.remove(e,!1);return this}update(){return this._bvh.update(),this}draw(t){return this._bvh.draw(t)}drawBVH(t){return this._bvh.drawBVH(t)}potentials(t){return this._bvh.potentials(t)}collides(t,e,s=null,r=!0){return h(t,e,s,r)}}var m=Object.assign||function(t){for(var e=1;e<arguments.length;e++){var s=arguments[e];for(var r in s)Object.prototype.hasOwnProperty.call(s,r)&&(t[r]=s[r])}return t};var f=function(t){var e=t.type,s=function(t,e){var s={};for(var r in t)e.indexOf(r)>=0||Object.prototype.hasOwnProperty.call(t,r)&&(s[r]=t[r]);return s}(t,["type"]);switch(e){case"circle":return g(s);case"ellipse":return v(s);case"line":return x(s);case"path":return k(s);case"polygon":return M(s);case"polyline":return E(s);case"rect":return S(s);case"g":return F(s);default:throw new Error("Not a valid shape type")}},g=function(t){var e=t.cx,s=t.cy,r=t.r;return[{x:e,y:s-r,moveTo:!0},{x:e,y:s+r,curve:{type:"arc",rx:r,ry:r,sweepFlag:1}},{x:e,y:s-r,curve:{type:"arc",rx:r,ry:r,sweepFlag:1}}]},v=function(t){var e=t.cx,s=t.cy,r=t.rx,i=t.ry;return[{x:e,y:s-i,moveTo:!0},{x:e,y:s+i,curve:{type:"arc",rx:r,ry:i,sweepFlag:1}},{x:e,y:s-i,curve:{type:"arc",rx:r,ry:i,sweepFlag:1}}]},x=function(t){var e=t.x1,s=t.x2;return[{x:e,y:t.y1,moveTo:!0},{x:s,y:t.y2}]},b=/[MmLlHhVvCcSsQqTtAaZz]/g,w={A:7,C:6,H:1,L:2,M:2,Q:4,S:4,T:2,V:1,Z:0},O=["a","c","h","l","m","q","s","t","v"],T=function(t){return-1!==O.indexOf(t)},C=["xAxisRotation","largeArcFlag","sweepFlag"],k=function(t){for(var e=t.d,s=function(t){return t.match(b)}(e),r=function(t){return t.split(b).map((function(t){return t.replace(/[0-9]+-/g,(function(t){return t.slice(0,-1)+" -"}))})).map((function(t){return t.replace(/\.[0-9]+/g,(function(t){return t+" "}))})).map((function(t){return t.trim()})).filter((function(t){return t.length>0})).map((function(t){return t.split(/[ ,]+/).map(parseFloat).filter((function(t){return!isNaN(t)}))}))}(e),i=[],n=void 0,o=0,a=s.length;o<a;o++){var h=s[o],l=h.toUpperCase(),c=w[l],u=T(h);if(c>0)for(var p=r.shift(),_=p.length/c,d=0;d<_;d++){var y=i[i.length-1]||{x:0,y:0};switch(l){case"M":var m=(u?y.x:0)+p.shift(),f=(u?y.y:0)+p.shift();0===d?(n={x:m,y:f},i.push({x:m,y:f,moveTo:!0})):i.push({x:m,y:f});break;case"L":i.push({x:(u?y.x:0)+p.shift(),y:(u?y.y:0)+p.shift()});break;case"H":i.push({x:(u?y.x:0)+p.shift(),y:y.y});break;case"V":i.push({x:y.x,y:(u?y.y:0)+p.shift()});break;case"A":i.push({curve:{type:"arc",rx:p.shift(),ry:p.shift(),xAxisRotation:p.shift(),largeArcFlag:p.shift(),sweepFlag:p.shift()},x:(u?y.x:0)+p.shift(),y:(u?y.y:0)+p.shift()});var g=!0,v=!1,x=void 0;try{for(var O,k=C[Symbol.iterator]();!(g=(O=k.next()).done);g=!0){var M=O.value;0===i[i.length-1].curve[M]&&delete i[i.length-1].curve[M]}}catch(t){v=!0,x=t}finally{try{!g&&k.return&&k.return()}finally{if(v)throw x}}break;case"C":i.push({curve:{type:"cubic",x1:(u?y.x:0)+p.shift(),y1:(u?y.y:0)+p.shift(),x2:(u?y.x:0)+p.shift(),y2:(u?y.y:0)+p.shift()},x:(u?y.x:0)+p.shift(),y:(u?y.y:0)+p.shift()});break;case"S":var E=(u?y.x:0)+p.shift(),A=(u?y.y:0)+p.shift(),S=(u?y.x:0)+p.shift(),N=(u?y.y:0)+p.shift(),R={},F=void 0,H=void 0;y.curve&&"cubic"===y.curve.type?(R.x=Math.abs(y.x-y.curve.x2),R.y=Math.abs(y.y-y.curve.y2),F=y.x<y.curve.x2?y.x-R.x:y.x+R.x,H=y.y<y.curve.y2?y.y-R.y:y.y+R.y):(R.x=Math.abs(S-E),R.y=Math.abs(N-A),F=y.x,H=y.y),i.push({curve:{type:"cubic",x1:F,y1:H,x2:E,y2:A},x:S,y:N});break;case"Q":i.push({curve:{type:"quadratic",x1:(u?y.x:0)+p.shift(),y1:(u?y.y:0)+p.shift()},x:(u?y.x:0)+p.shift(),y:(u?y.y:0)+p.shift()});break;case"T":var L=(u?y.x:0)+p.shift(),D=(u?y.y:0)+p.shift(),I=void 0,U=void 0;if(y.curve&&"quadratic"===y.curve.type){var W={x:Math.abs(y.x-y.curve.x1),y:Math.abs(y.y-y.curve.y1)};I=y.x<y.curve.x1?y.x-W.x:y.x+W.x,U=y.y<y.curve.y1?y.y-W.y:y.y+W.y}else I=y.x,U=y.y;i.push({curve:{type:"quadratic",x1:I,y1:U},x:L,y:D})}}else{var P=i[i.length-1]||{x:0,y:0};P.x===n.x&&P.y===n.y||i.push({x:n.x,y:n.y})}}return i},M=function(t){var e=t.points;return A({closed:!0,points:e})},E=function(t){var e=t.points;return A({closed:!1,points:e})},A=function(t){var e=t.closed,s=t.points.split(/[\s,]+/).map((function(t){return parseFloat(t)})).reduce((function(t,e,s){return s%2==0?t.push({x:e}):t[(s-1)/2].y=e,t}),[]);return e&&s.push(m({},s[0])),s[0].moveTo=!0,s},S=function(t){var e=t.height,s=t.rx,r=t.ry,i=t.width,n=t.x,o=t.y;return s||r?R({height:e,rx:s||r,ry:r||s,width:i,x:n,y:o}):N({height:e,width:i,x:n,y:o})},N=function(t){var e=t.height,s=t.width,r=t.x,i=t.y;return[{x:r,y:i,moveTo:!0},{x:r+s,y:i},{x:r+s,y:i+e},{x:r,y:i+e},{x:r,y:i}]},R=function(t){var e=t.height,s=t.rx,r=t.ry,i=t.width,n=t.x,o=t.y,a={type:"arc",rx:s,ry:r,sweepFlag:1};return[{x:n+s,y:o,moveTo:!0},{x:n+i-s,y:o},{x:n+i,y:o+r,curve:a},{x:n+i,y:o+e-r},{x:n+i-s,y:o+e,curve:a},{x:n+s,y:o+e},{x:n,y:o+e-r,curve:a},{x:n,y:o+r},{x:n+s,y:o,curve:a}]},F=function(t){return t.shapes.map((function(t){return f(t)}))},H=f,L=function(t){var e="",s=0,r=void 0,i=!0,n=!1,o=void 0;try{for(var a,h=t[Symbol.iterator]();!(i=(a=h.next()).done);i=!0){var l=a.value,c=l.curve,u=void 0!==c&&c,p=l.moveTo,_=l.x,d=l.y,y=0===s||p,m=s===t.length-1||t[s+1].moveTo,f=0===s?null:t[s-1];if(y)r=l,m||(e+="M"+_+","+d);else if(u){switch(u.type){case"arc":var g=l.curve,v=g.largeArcFlag,x=void 0===v?0:v,b=g.rx,w=g.ry,O=g.sweepFlag,T=void 0===O?0:O,C=g.xAxisRotation;e+="A"+b+","+w+","+(void 0===C?0:C)+","+x+","+T+","+_+","+d;break;case"cubic":var k=l.curve;e+="C"+k.x1+","+k.y1+","+k.x2+","+k.y2+","+_+","+d;break;case"quadratic":var M=l.curve;e+="Q"+M.x1+","+M.y1+","+_+","+d}m&&_===r.x&&d===r.y&&(e+="Z")}else m&&_===r.x&&d===r.y?e+="Z":_!==f.x&&d!==f.y?e+="L"+_+","+d:_!==f.x?e+="H"+_:d!==f.y&&(e+="V"+d);s++}}catch(t){n=!0,o=t}finally{try{!i&&h.return&&h.return()}finally{if(n)throw o}}return e},D=function(t){var e=Array.isArray(t),s=e?Array.isArray(t[0]):"g"===t.type,r=e?t:s?t.shapes.map((function(t){return H(t)})):H(t);return s?r.map((function(t){return L(t)})):L(r)},I=("function"==typeof Symbol&&Symbol.iterator,s(0));class U{constructor(t,e){this.p5=t,this.settings=Object.assign({},r,e),this.paused=!1,this.showWalkers=this.settings.ShowWalkers,this.showClusters=this.settings.ShowClusters,this.showShapes=this.settings.ShowShapes,this.useFrame=this.settings.UseFrame,this.renderMode=this.settings.RenderMode,this.numWalkers=0,this.customMovementFunction=void 0,this.edgeMargin=this.settings.EdgeMargin,this.edges={},this.frame={},"number"==typeof this.settings.FrameSize?(this.frame.left=window.innerWidth/2-this.settings.FrameSize/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize/2):"object"==typeof this.settings.FrameSize&&(this.frame.left=window.innerWidth/2-this.settings.FrameSize[0]/2,this.frame.right=window.innerWidth/2+this.settings.FrameSize[0]/2,this.frame.top=window.innerHeight/2-this.settings.FrameSize[1]/2,this.frame.bottom=window.innerHeight/2+this.settings.FrameSize[1]/2),this.resetEdges(),this.maxDistance=this.p5.dist(this.edges.left,this.edges.top,window.innerWidth/2,window.innerHeight/2),this.system=new y,this.bodies=[],this.shapes=[],this.lines=[]}iterate(){this.paused||(this.settings.ReplenishWalkers&&this.numWalkers<this.settings.MaxWalkers&&this.createDefaultWalkers(this.settings.MaxWalkers-this.numWalkers,this.settings.ReplenishmentSource),this.moveWalkers(),this.system.update(),this.handleCollisions(),this.pruneWalkers())}draw(){if(this.settings.UseColors?this.p5.background(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.background(255),this.showShapes)for(let t of this.shapes){this.settings.UseColors?(this.p5.fill(this.getColorStringFromObject(this.settings.ShapeColor)),this.p5.stroke(this.getColorStringFromObject(this.settings.ShapeColor))):(this.p5.noFill(),this.p5.stroke(100)),this.p5.beginShape();for(let e=0;e<t._coords.length;e+=2)this.p5.vertex(t._coords[e],t._coords[e+1]);this.p5.endShape()}if("Lines"==this.renderMode){if(this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.LineColor)):this.p5.stroke(75),this.lines.length>0)for(let t of this.lines)this.p5.line(t.p1.x,t.p1.y,t.p2.x,t.p2.y)}else for(let t of this.bodies)if(t._point)this.p5.noFill(),t.stuck&&this.showClusters?(this.p5.noStroke(),this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(200),this.p5.ellipse(t.x,t.y,5)):!t.stuck&&this.showWalkers?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.stroke(0):this.p5.noStroke(),this.p5.point(t.x,t.y);else if(t._circle)this.settings.UseStroke?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.stroke(255):this.p5.noStroke(),t.stuck&&this.showClusters?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(120):!t.stuck&&this.showWalkers?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.fill(230):this.p5.noFill(),this.p5.ellipse(t.x,t.y,2*t.radius);else if(t._polygon){this.settings.UseStroke?this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.BackgroundColor)):this.p5.stroke(255):this.p5.noStroke(),t.stuck&&this.showClusters?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.ClusterColor)):this.p5.fill(120):!t.stuck&&this.showWalkers?this.settings.UseColors?this.p5.fill(this.getColorStringFromObject(this.settings.WalkerColor)):this.p5.fill(230):this.p5.noFill(),this.p5.beginShape();for(let e=0;e<t._coords.length-1;e+=2)this.p5.vertex(t._coords[e],t._coords[e+1]);this.p5.endShape()}this.useFrame&&this.drawFrame()}drawFrame(){this.p5.noFill(),this.settings.UseColors?this.p5.stroke(this.getColorStringFromObject(this.settings.FrameColor)):this.p5.stroke(0),"number"==typeof this.settings.FrameSize?this.p5.rect(window.innerWidth/2-this.settings.FrameSize/2-1,window.innerHeight/2-this.settings.FrameSize/2-1,this.settings.FrameSize+2,this.settings.FrameSize+2):"object"==typeof this.settings.FrameSize&&this.p5.rect(window.innerWidth/2-this.settings.FrameSize[0]/2-1,window.innerHeight/2-this.settings.FrameSize[1]/2-1,this.settings.FrameSize[0]+2,this.settings.FrameSize[1]+2)}resetEdges(){this.edges.left=this.useFrame?this.frame.left:0,this.edges.right=this.useFrame?this.frame.right:window.innerWidth,this.edges.top=this.useFrame?this.frame.top:0,this.edges.bottom=this.useFrame?this.frame.bottom:window.innerHeight}moveWalkers(){if(this.bodies.length>0)for(let t of this.bodies)if(!t.stuck){let e,s=this.p5.random(-1,1),r=this.p5.random(-1,1);if(this.settings.UsePerWalkerBias&&t.hasOwnProperty("BiasTowards"))e=this.getDeltasTowards(t.x,t.y,t.BiasTowards.x,t.BiasTowards.y),s+=e.x,r+=e.y;else switch(this.settings.BiasTowards){case"Top":r-=this.settings.BiasForce;break;case"Bottom":r+=this.settings.BiasForce;break;case"Left":s-=this.settings.BiasForce;break;case"Right":s+=this.settings.BiasForce;break;case"Center":e=this.getDeltasTowards(t.x,t.y,window.innerWidth/2,window.innerHeight/2),s+=e.x,r+=e.y;break;case"Edges":e=this.getDeltasTowards(t.x,t.y,window.innerWidth/2,window.innerHeight/2),s-=e.x,r-=e.y;break;case"Equator":t.y<window.innerHeight/2?r+=this.settings.BiasForce:r-=this.settings.BiasForce;break;case"Meridian":t.x<window.innerWidth/2?s+=this.settings.BiasForce:s-=this.settings.BiasForce}if(null!=typeof this.customMovementFunction&&this.customMovementFunction instanceof Function){let e=this.customMovementFunction(t);s+=e.dx,r+=e.dy}t._point&&(s=Math.round(s),r=Math.round(r)),t.x+=s,t.y+=r,t.age++}}getDeltasTowards(t,e,s,r){let i=Math.atan2(r-e,s-t);return{x:Math.cos(i)*this.settings.BiasForce,y:Math.sin(i)*this.settings.BiasForce}}handleCollisions(){for(let t of this.shapes){const e=t.potentials();for(let s of e)t.collides(s)&&(s.stuck=!0,this.numWalkers--)}for(let t of this.bodies){if(t.stuck)continue;const e=t.potentials();for(let s of e)t._point?s.stuck&&(t.stuck=!0,this.numWalkers--):s.stuck&&t.collides(s)&&(t.stuck=!0,this.numWalkers--,this.settings.CaptureLines&&this.lines.push({p1:{x:t.x,y:t.y},p2:{x:s.x,y:s.y}}))}}pruneWalkers(){if(this.settings.PruneOldWalkers||this.settings.PruneDistantWalkers)for(let[t,e]of this.bodies.entries())!e.stuck&&(this.settings.PruneOldWalkers&&e.age>this.settings.MaxAge||this.settings.PruneDistantWalkers&&this.p5.dist(e.x,e.y,e.originalX,e.originalY)>this.settings.MaxWanderDistance)&&(e.remove(),this.bodies.splice(t,1),this.numWalkers--)}createParticle(t){if(void 0===t||"object"!=typeof t)return;let e;if(t.hasOwnProperty("type"))switch(t.type){case"Point":e=this.system.createPoint(Math.round(t.x),Math.round(t.y)),e._point=!0;break;case"Circle":default:e=this.system.createCircle(t.x,t.y,t.diameter/2),e._circle=!0;break;case"Polygon":e=this.system.createPolygon(t.x,t.y,t.polygon,t.hasOwnProperty("rotation")?this.p5.radians(t.rotation):0),e._polygon=!0}else{const s=t.hasOwnProperty("diameter")?t.diameter:this.settings.CircleDiameter;e=this.system.createCircle(t.x,t.y,s/2),e._circle=!0}e.stuck=!!t.hasOwnProperty("stuck")&&t.stuck,e.age=0,t.hasOwnProperty("BiasTowards")&&(e.BiasTowards=t.BiasTowards),e.originalX=e.x,e.originalY=e.y,this.bodies.push(e)}createWalker(t){this.createParticle(t),this.numWalkers++}createDefaultWalkers(t=this.settings.MaxWalkers,e=this.settings.WalkerSource){for(let s=0;s<t;s++){let t={};switch(e){case"Edges":switch(Math.round(this.p5.random(1,4))){case 1:t.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),t.y=this.p5.random(this.edges.top,this.edges.top+this.edgeMargin);break;case 3:t.x=this.p5.random(this.edges.left+this.edgeMargin,this.edges.right-this.edgeMargin),t.y=this.p5.random(this.edges.bottom-this.edgeMargin,this.edges.bottom);break;case 4:t.x=this.p5.random(this.edges.left,this.edges.left+this.edgeMargin),t.y=this.p5.random(this.edges.top,this.edges.bottom);break;case 2:t.x=this.p5.random(this.edges.right-this.edgeMargin,this.edges.right),t.y=this.p5.random(this.edges.top,this.edges.bottom)}break;case"Circle":let e;switch(typeof this.settings.FrameSize){case"number":e=this.settings.FrameSize/2;break;case"object":e=this.settings.FrameSize[0]>this.settings.FrameSize[1]?this.settings.FrameSize[1]/2:this.settings.FrameSize[0]/2}let s=this.p5.random(5,e),r=this.p5.random(360),i=this.settings.hasOwnProperty("CircleCenter")?this.settings.CircleCenter:{x:window.innerWidth/2,y:window.innerHeight/2};t.x=i.x+s*Math.cos(r*Math.PI/180),t.y=i.y+s*Math.sin(r*Math.PI/180);break;case"Random":t.x=this.p5.random(this.edges.left,this.edges.right),t.y=this.p5.random(this.edges.top,this.edges.bottom);break;case"Center":t.x=window.innerWidth/2,t.y=window.innerHeight/2;break;case"Offscreen":if(t.x=this.p5.random(this.edges.left-200,this.edges.right+200),t.y=this.p5.random(this.edges.top-200,this.edges.bottom+200),t.x>this.edges.left&&t.x<this.edges.right&&t.y>this.edges.top&&t.y<this.edges.bottom)continue}if(this.settings.VaryDiameterByDistance){let e=this.p5.dist(t.x,t.y,window.innerWidth/2,window.innerHeight/2);t.diameter=this.p5.map(e,0,this.maxDistance,this.settings.CircleDiameterRange[0],this.settings.CircleDiameterRange[1])}else this.settings.VaryDiameterRandomly&&(t.diameter=this.p5.random(this.settings.CircleDiameterRange[0],this.settings.CircleDiameterRange[1]));this.createWalker(t)}}createDefaultClusters(t=this.settings.InitialClusterType){let e=[];switch(t){case"Point":e.push({x:window.innerWidth/2,y:window.innerHeight/2,diameter:this.settings.CircleDiameter});break;case"Ring":let t=100,s=20;for(let r=0;r<s;r++)e.push({x:window.innerWidth/2+t*Math.cos(360/s*r*Math.PI/180),y:window.innerHeight/2+t*Math.sin(360/s*r*Math.PI/180),diameter:this.settings.CircleDiameter});break;case"Random":for(let t=0;t<100;t++)e.push({x:this.p5.random(this.edges.left,this.edges.right),y:this.p5.random(this.edges.top,this.edges.bottom),diameter:this.settings.CircleDiameter});break;case"Wall":switch(this.settings.BiasTowards){case"Top":e=this.createHorizontalClusterWall(this.edges.top);break;case"Bottom":e=this.createHorizontalClusterWall(this.edges.bottom);break;case"Left":e=this.createVerticalClusterWall(this.edges.left);break;case"Right":e=this.createVerticalClusterWall(this.edges.right);break;case"Edges":e=e.concat(this.createHorizontalClusterWall(this.edges.top)),e=e.concat(this.createHorizontalClusterWall(this.edges.bottom)),e=e.concat(this.createVerticalClusterWall(this.edges.left)),e=e.concat(this.createVerticalClusterWall(this.edges.right));break;case"Equator":e=e.concat(this.createHorizontalClusterWall(window.innerHeight/2));break;case"Meridian":e=e.concat(this.createVerticalClusterWall(window.innerWidth/2))}}this.createClusterFromParams(e)}createHorizontalClusterWall(t){let e=[],s=this.useFrame?this.edges.right-this.edges.left:window.innerWidth;for(let r=0;r<=s/this.settings.CircleDiameter;r++)e.push({x:this.edges.left+r*this.settings.CircleDiameter,y:t,diameter:this.settings.CircleDiameter});return e}createVerticalClusterWall(t){let e=[],s=this.useFrame?this.edges.bottom-this.edges.top:window.innerHeight;for(let r=0;r<=s/this.settings.CircleDiameter;r++)e.push({x:t,y:this.edges.top+r*this.settings.CircleDiameter,diameter:this.settings.CircleDiameter});return e}createClusterFromParams(t){if(t.length>0)for(let e of t)e.stuck=!0,this.createParticle(e)}createShapesFromPaths(t){if(t.hasOwnProperty("points")||0!=t.length)for(let e of t)if(e.solid){let t=this.system.createPolygon(e.x,e.y,e.points);t.solid=e.solid,t.closed=e.closed,this.shapes.push(t)}else for(let t=1;t<e.points.length;t++){let s=this.system.createPolygon(e.x,e.y,[[e.points[t-1][0],e.points[t-1][1]],[e.points[t][0],e.points[t][1]]]);s.solid=!1,s.closed=!1,this.shapes.push(s)}else console.error("Unable to create shapes. Paths must have an array of points [[x,y],...]")}removeAll(){for(let t of this.bodies)this.system.remove(t);for(let t of this.shapes)this.system.remove(t);this.bodies=[],this.shapes=[],this.lines=[],this.numWalkers=0}togglePause(){this.paused=!this.paused}toggleShowWalkers(){this.showWalkers=!this.showWalkers}toggleShowClusters(){this.showClusters=!this.showClusters}toggleShowShapes(){this.showShapes=!this.showShapes}toggleUseFrame(){this.useFrame=!this.useFrame,this.resetEdges()}toggleLineRenderingMode(){"Lines"!=this.renderMode?this.settings.CaptureLines?this.renderMode="Lines":console.error("Line rendering mode only allowed when CaptureLines is set."):this.renderMode="Shapes"}pause(){this.paused=!0}unpause(){this.paused=!1}getColorStringFromObject(t){let e="hsla("+t.h+", "+t.s+"%, "+t.b+"%, ";return t.hasOwnProperty("a")?e+=t.a+")":e+="1.0)",e}export(){let t=document.createElement("svg");switch(t.setAttribute("xmlns","http://www.w3.org/2000/svg"),t.setAttribute("xmlns:xlink","http://www.w3.org/1999/xlink"),t.setAttribute("width",window.innerWidth),t.setAttribute("height",window.innerHeight),t.setAttribute("viewBox","0 0 "+window.innerWidth+" "+window.innerHeight),this.renderMode){case"Shapes":default:for(let e of this.bodies)(e.stuck||this.showWalkers)&&(e._circle?t.appendChild(this.createCircleElFromBody(e)):t.appendChild(this.createPathElFromPoints(this.getPointsFromCoords(e._coords))));break;case"Lines":if(this.lines.length>0)for(let e of this.lines){let s=[];s.push({x:e.p1.x,y:e.p1.y}),s.push({x:e.p2.x,y:e.p2.y}),t.appendChild(this.createPathElFromPoints(s))}}if(this.shapes.length>0)for(let e of this.shapes)t.appendChild(this.createPathElFromPoints(this.getPointsFromCoords(e._coords)));let e=document.implementation.createDocumentType("svg","-//W3C//DTD SVG 1.1//EN","http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"),s=document.implementation.createDocument("http://www.w3.org/2000/svg","svg",e);s.replaceChild(t,s.documentElement);let r=(new XMLSerializer).serializeToString(s),i=new Blob([r.replace(/></g,">\n\r<")]);Object(I.saveAs)(i,"dla-"+Date.now()+".svg")}getPointsFromCoords(t){let e=[];for(let s=0;s<t.length-1;s+=2)e.push({x:t[s],y:t[s+1]});return e}createPathElFromPoints(t){let e="";for(let[s,r]of t.entries())e+=r.x+","+r.y,s<t.length-1&&(e+=" ");let s=D({type:"polyline",points:e}),r=document.createElement("path");return r.setAttribute("d",s),r.setAttribute("style","fill: none; stroke: black; stroke-width: 1"),r}createCircleElFromBody(t){let e=document.createElement("circle");return e.setAttribute("cx",t.x),e.setAttribute("cy",t.y),e.setAttribute("r",t.radius),e}}},function(t,e){var s;s=function(){return this}();try{s=s||new Function("return this")()}catch(t){"object"==typeof window&&(s=window)}t.exports=s},function(t,e,s){"use strict";s.d(e,"a",(function(){return k}));var r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(t,e){t.__proto__=e}||function(t,e){for(var s in e)e.hasOwnProperty(s)&&(t[s]=e[s])};function i(t,e){function s(){this.constructor=t}r(t,e),t.prototype=null===e?Object.create(e):(s.prototype=e.prototype,new s)}function n(t,e){var s=t[0],r=t[1];return[s*Math.cos(e)-r*Math.sin(e),s*Math.sin(e)+r*Math.cos(e)]}function o(){for(var t=[],e=0;e<arguments.length;e++)t[e]=arguments[e];for(var s=0;s<t.length;s++)if("number"!=typeof t[s])throw new Error("assertNumbers arguments["+s+"] is not a number. "+typeof t[s]+" == typeof "+t[s]);return!0}var a=Math.PI;function h(t,e,s){t.lArcFlag=0===t.lArcFlag?0:1,t.sweepFlag=0===t.sweepFlag?0:1;var r=t.rX,i=t.rY,o=t.x,h=t.y;r=Math.abs(t.rX),i=Math.abs(t.rY);var l=n([(e-o)/2,(s-h)/2],-t.xRot/180*a),c=l[0],u=l[1],p=Math.pow(c,2)/Math.pow(r,2)+Math.pow(u,2)/Math.pow(i,2);1<p&&(r*=Math.sqrt(p),i*=Math.sqrt(p)),t.rX=r,t.rY=i;var _=Math.pow(r,2)*Math.pow(u,2)+Math.pow(i,2)*Math.pow(c,2),d=(t.lArcFlag!==t.sweepFlag?1:-1)*Math.sqrt(Math.max(0,(Math.pow(r,2)*Math.pow(i,2)-_)/_)),y=r*u/i*d,m=-i*c/r*d,f=n([y,m],t.xRot/180*a);t.cX=f[0]+(e+o)/2,t.cY=f[1]+(s+h)/2,t.phi1=Math.atan2((u-m)/i,(c-y)/r),t.phi2=Math.atan2((-u-m)/i,(-c-y)/r),0===t.sweepFlag&&t.phi2>t.phi1&&(t.phi2-=2*a),1===t.sweepFlag&&t.phi2<t.phi1&&(t.phi2+=2*a),t.phi1*=180/a,t.phi2*=180/a}function l(t,e,s){o(t,e,s);var r=t*t+e*e-s*s;if(0>r)return[];if(0===r)return[[t*s/(t*t+e*e),e*s/(t*t+e*e)]];var i=Math.sqrt(r);return[[(t*s+e*i)/(t*t+e*e),(e*s-t*i)/(t*t+e*e)],[(t*s-e*i)/(t*t+e*e),(e*s+t*i)/(t*t+e*e)]]}var c,u=Math.PI/180;function p(t,e,s){return(1-s)*t+s*e}function _(t,e,s,r){return t+Math.cos(r/180*a)*e+Math.sin(r/180*a)*s}function d(t,e,s,r){var i=e-t,n=s-e,o=3*i+3*(r-s)-6*n,a=6*(n-i),h=3*i;return Math.abs(o)<1e-6?[-h/a]:function(t,e,s){void 0===s&&(s=1e-6);var r=t*t/4-e;if(r<-s)return[];if(r<=s)return[-t/2];var i=Math.sqrt(r);return[-t/2-i,-t/2+i]}(a/o,h/o,1e-6)}function y(t,e,s,r,i){var n=1-i;return t*(n*n*n)+e*(3*n*n*i)+s*(3*n*i*i)+r*(i*i*i)}!function(t){function e(){return i((function(t,e,s){return t.relative&&(void 0!==t.x1&&(t.x1+=e),void 0!==t.y1&&(t.y1+=s),void 0!==t.x2&&(t.x2+=e),void 0!==t.y2&&(t.y2+=s),void 0!==t.x&&(t.x+=e),void 0!==t.y&&(t.y+=s),t.relative=!1),t}))}function s(){var t=NaN,e=NaN,s=NaN,r=NaN;return i((function(i,n,o){return i.type&w.SMOOTH_CURVE_TO&&(i.type=w.CURVE_TO,t=isNaN(t)?n:t,e=isNaN(e)?o:e,i.x1=i.relative?n-t:2*n-t,i.y1=i.relative?o-e:2*o-e),i.type&w.CURVE_TO?(t=i.relative?n+i.x2:i.x2,e=i.relative?o+i.y2:i.y2):(t=NaN,e=NaN),i.type&w.SMOOTH_QUAD_TO&&(i.type=w.QUAD_TO,s=isNaN(s)?n:s,r=isNaN(r)?o:r,i.x1=i.relative?n-s:2*n-s,i.y1=i.relative?o-r:2*o-r),i.type&w.QUAD_TO?(s=i.relative?n+i.x1:i.x1,r=i.relative?o+i.y1:i.y1):(s=NaN,r=NaN),i}))}function r(){var t=NaN,e=NaN;return i((function(s,r,i){if(s.type&w.SMOOTH_QUAD_TO&&(s.type=w.QUAD_TO,t=isNaN(t)?r:t,e=isNaN(e)?i:e,s.x1=s.relative?r-t:2*r-t,s.y1=s.relative?i-e:2*i-e),s.type&w.QUAD_TO){t=s.relative?r+s.x1:s.x1,e=s.relative?i+s.y1:s.y1;var n=s.x1,o=s.y1;s.type=w.CURVE_TO,s.x1=((s.relative?0:r)+2*n)/3,s.y1=((s.relative?0:i)+2*o)/3,s.x2=(s.x+2*n)/3,s.y2=(s.y+2*o)/3}else t=NaN,e=NaN;return s}))}function i(t){var e=0,s=0,r=NaN,i=NaN;return function(n){if(isNaN(r)&&!(n.type&w.MOVE_TO))throw new Error("path must start with moveto");var o=t(n,e,s,r,i);return n.type&w.CLOSE_PATH&&(e=r,s=i),void 0!==n.x&&(e=n.relative?e+n.x:n.x),void 0!==n.y&&(s=n.relative?s+n.y:n.y),n.type&w.MOVE_TO&&(r=e,i=s),o}}function a(t,e,s,r,n,a){return o(t,e,s,r,n,a),i((function(i,o,h,l){var c=i.x1,u=i.x2,p=i.relative&&!isNaN(l),_=void 0!==i.x?i.x:p?0:o,d=void 0!==i.y?i.y:p?0:h;function y(t){return t*t}i.type&w.HORIZ_LINE_TO&&0!==e&&(i.type=w.LINE_TO,i.y=i.relative?0:h),i.type&w.VERT_LINE_TO&&0!==s&&(i.type=w.LINE_TO,i.x=i.relative?0:o),void 0!==i.x&&(i.x=i.x*t+d*s+(p?0:n)),void 0!==i.y&&(i.y=_*e+i.y*r+(p?0:a)),void 0!==i.x1&&(i.x1=i.x1*t+i.y1*s+(p?0:n)),void 0!==i.y1&&(i.y1=c*e+i.y1*r+(p?0:a)),void 0!==i.x2&&(i.x2=i.x2*t+i.y2*s+(p?0:n)),void 0!==i.y2&&(i.y2=u*e+i.y2*r+(p?0:a));var m=t*r-e*s;if(void 0!==i.xRot&&(1!==t||0!==e||0!==s||1!==r))if(0===m)delete i.rX,delete i.rY,delete i.xRot,delete i.lArcFlag,delete i.sweepFlag,i.type=w.LINE_TO;else{var f=i.xRot*Math.PI/180,g=Math.sin(f),v=Math.cos(f),x=1/y(i.rX),b=1/y(i.rY),O=y(v)*x+y(g)*b,T=2*g*v*(x-b),C=y(g)*x+y(v)*b,k=O*r*r-T*e*r+C*e*e,M=T*(t*r+e*s)-2*(O*s*r+C*t*e),E=O*s*s-T*t*s+C*t*t,A=(Math.atan2(M,k-E)+Math.PI)%Math.PI/2,S=Math.sin(A),N=Math.cos(A);i.rX=Math.abs(m)/Math.sqrt(k*y(N)+M*S*N+E*y(S)),i.rY=Math.abs(m)/Math.sqrt(k*y(S)-M*S*N+E*y(N)),i.xRot=180*A/Math.PI}return void 0!==i.sweepFlag&&0>m&&(i.sweepFlag=+!i.sweepFlag),i}))}t.ROUND=function(t){function e(e){return Math.round(e*t)/t}return void 0===t&&(t=1e13),o(t),function(t){return void 0!==t.x1&&(t.x1=e(t.x1)),void 0!==t.y1&&(t.y1=e(t.y1)),void 0!==t.x2&&(t.x2=e(t.x2)),void 0!==t.y2&&(t.y2=e(t.y2)),void 0!==t.x&&(t.x=e(t.x)),void 0!==t.y&&(t.y=e(t.y)),t}},t.TO_ABS=e,t.TO_REL=function(){return i((function(t,e,s){return t.relative||(void 0!==t.x1&&(t.x1-=e),void 0!==t.y1&&(t.y1-=s),void 0!==t.x2&&(t.x2-=e),void 0!==t.y2&&(t.y2-=s),void 0!==t.x&&(t.x-=e),void 0!==t.y&&(t.y-=s),t.relative=!0),t}))},t.NORMALIZE_HVZ=function(t,e,s){return void 0===t&&(t=!0),void 0===e&&(e=!0),void 0===s&&(s=!0),i((function(r,i,n,o,a){if(isNaN(o)&&!(r.type&w.MOVE_TO))throw new Error("path must start with moveto");return e&&r.type&w.HORIZ_LINE_TO&&(r.type=w.LINE_TO,r.y=r.relative?0:n),s&&r.type&w.VERT_LINE_TO&&(r.type=w.LINE_TO,r.x=r.relative?0:i),t&&r.type&w.CLOSE_PATH&&(r.type=w.LINE_TO,r.x=r.relative?o-i:o,r.y=r.relative?a-n:a),r.type&w.ARC&&(0===r.rX||0===r.rY)&&(r.type=w.LINE_TO,delete r.rX,delete r.rY,delete r.xRot,delete r.lArcFlag,delete r.sweepFlag),r}))},t.NORMALIZE_ST=s,t.QT_TO_C=r,t.INFO=i,t.SANITIZE=function(t){void 0===t&&(t=0),o(t);var e=NaN,s=NaN,r=NaN,n=NaN;return i((function(i,o,a,h,l){var c=Math.abs,u=!1,p=0,_=0;if(i.type&w.SMOOTH_CURVE_TO&&(p=isNaN(e)?0:o-e,_=isNaN(s)?0:a-s),i.type&(w.CURVE_TO|w.SMOOTH_CURVE_TO)?(e=i.relative?o+i.x2:i.x2,s=i.relative?a+i.y2:i.y2):(e=NaN,s=NaN),i.type&w.SMOOTH_QUAD_TO?(r=isNaN(r)?o:2*o-r,n=isNaN(n)?a:2*a-n):i.type&w.QUAD_TO?(r=i.relative?o+i.x1:i.x1,n=i.relative?a+i.y1:i.y2):(r=NaN,n=NaN),i.type&w.LINE_COMMANDS||i.type&w.ARC&&(0===i.rX||0===i.rY||!i.lArcFlag)||i.type&w.CURVE_TO||i.type&w.SMOOTH_CURVE_TO||i.type&w.QUAD_TO||i.type&w.SMOOTH_QUAD_TO){var d=void 0===i.x?0:i.relative?i.x:i.x-o,y=void 0===i.y?0:i.relative?i.y:i.y-a;p=isNaN(r)?void 0===i.x1?p:i.relative?i.x:i.x1-o:r-o,_=isNaN(n)?void 0===i.y1?_:i.relative?i.y:i.y1-a:n-a;var m=void 0===i.x2?0:i.relative?i.x:i.x2-o,f=void 0===i.y2?0:i.relative?i.y:i.y2-a;c(d)<=t&&c(y)<=t&&c(p)<=t&&c(_)<=t&&c(m)<=t&&c(f)<=t&&(u=!0)}return i.type&w.CLOSE_PATH&&c(o-h)<=t&&c(a-l)<=t&&(u=!0),u?[]:i}))},t.MATRIX=a,t.ROTATE=function(t,e,s){void 0===e&&(e=0),void 0===s&&(s=0),o(t,e,s);var r=Math.sin(t),i=Math.cos(t);return a(i,r,-r,i,e-e*i+s*r,s-e*r-s*i)},t.TRANSLATE=function(t,e){return void 0===e&&(e=0),o(t,e),a(1,0,0,1,t,e)},t.SCALE=function(t,e){return void 0===e&&(e=t),o(t,e),a(t,0,0,e,0,0)},t.SKEW_X=function(t){return o(t),a(1,0,Math.atan(t),1,0,0)},t.SKEW_Y=function(t){return o(t),a(1,Math.atan(t),0,1,0,0)},t.X_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),o(t),a(-1,0,0,1,t,0)},t.Y_AXIS_SYMMETRY=function(t){return void 0===t&&(t=0),o(t),a(1,0,0,-1,0,t)},t.A_TO_C=function(){return i((function(t,e,s){return w.ARC===t.type?function(t,e,s){var r,i,o,a;t.cX||h(t,e,s);for(var l=Math.min(t.phi1,t.phi2),c=Math.max(t.phi1,t.phi2)-l,_=Math.ceil(c/90),d=new Array(_),y=e,m=s,f=0;f<_;f++){var g=p(t.phi1,t.phi2,f/_),v=p(t.phi1,t.phi2,(f+1)/_),x=v-g,b=4/3*Math.tan(x*u/4),O=[Math.cos(g*u)-b*Math.sin(g*u),Math.sin(g*u)+b*Math.cos(g*u)],T=O[0],C=O[1],k=[Math.cos(v*u),Math.sin(v*u)],M=k[0],E=k[1],A=[M+b*Math.sin(v*u),E-b*Math.cos(v*u)],S=A[0],N=A[1];d[f]={relative:t.relative,type:w.CURVE_TO};var R=function(e,s){var r=n([e*t.rX,s*t.rY],t.xRot),i=r[0],o=r[1];return[t.cX+i,t.cY+o]};r=R(T,C),d[f].x1=r[0],d[f].y1=r[1],i=R(S,N),d[f].x2=i[0],d[f].y2=i[1],o=R(M,E),d[f].x=o[0],d[f].y=o[1],t.relative&&(d[f].x1-=y,d[f].y1-=m,d[f].x2-=y,d[f].y2-=m,d[f].x-=y,d[f].y-=m),y=(a=[d[f].x,d[f].y])[0],m=a[1]}return d}(t,t.relative?0:e,t.relative?0:s):t}))},t.ANNOTATE_ARCS=function(){return i((function(t,e,s){return t.relative&&(e=0,s=0),w.ARC===t.type&&h(t,e,s),t}))},t.CLONE=function(){return function(t){var e={};for(var s in t)e[s]=t[s];return e}},t.CALCULATE_BOUNDS=function(){var t=e(),n=r(),o=s(),a=i((function(e,s,r){var i=o(n(t(function(t){var e={};for(var s in t)e[s]=t[s];return e}(e))));function c(t){t>a.maxX&&(a.maxX=t),t<a.minX&&(a.minX=t)}function u(t){t>a.maxY&&(a.maxY=t),t<a.minY&&(a.minY=t)}if(i.type&w.DRAWING_COMMANDS&&(c(s),u(r)),i.type&w.HORIZ_LINE_TO&&c(i.x),i.type&w.VERT_LINE_TO&&u(i.y),i.type&w.LINE_TO&&(c(i.x),u(i.y)),i.type&w.CURVE_TO){c(i.x),u(i.y);for(var p=0,m=d(s,i.x1,i.x2,i.x);p<m.length;p++)0<(F=m[p])&&1>F&&c(y(s,i.x1,i.x2,i.x,F));for(var f=0,g=d(r,i.y1,i.y2,i.y);f<g.length;f++)0<(F=g[f])&&1>F&&u(y(r,i.y1,i.y2,i.y,F))}if(i.type&w.ARC){c(i.x),u(i.y),h(i,s,r);for(var v=i.xRot/180*Math.PI,x=Math.cos(v)*i.rX,b=Math.sin(v)*i.rX,O=-Math.sin(v)*i.rY,T=Math.cos(v)*i.rY,C=i.phi1<i.phi2?[i.phi1,i.phi2]:-180>i.phi2?[i.phi2+360,i.phi1+360]:[i.phi2,i.phi1],k=C[0],M=C[1],E=function(t){var e=t[0],s=t[1],r=180*Math.atan2(s,e)/Math.PI;return r<k?r+360:r},A=0,S=l(O,-x,0).map(E);A<S.length;A++)(F=S[A])>k&&F<M&&c(_(i.cX,x,O,F));for(var N=0,R=l(T,-b,0).map(E);N<R.length;N++){var F;(F=R[N])>k&&F<M&&u(_(i.cY,b,T,F))}}return e}));return a.minX=1/0,a.maxX=-1/0,a.minY=1/0,a.maxY=-1/0,a}}(c||(c={}));var m,f,g=function(){function t(){}return t.prototype.round=function(t){return this.transform(c.ROUND(t))},t.prototype.toAbs=function(){return this.transform(c.TO_ABS())},t.prototype.toRel=function(){return this.transform(c.TO_REL())},t.prototype.normalizeHVZ=function(t,e,s){return this.transform(c.NORMALIZE_HVZ(t,e,s))},t.prototype.normalizeST=function(){return this.transform(c.NORMALIZE_ST())},t.prototype.qtToC=function(){return this.transform(c.QT_TO_C())},t.prototype.aToC=function(){return this.transform(c.A_TO_C())},t.prototype.sanitize=function(t){return this.transform(c.SANITIZE(t))},t.prototype.translate=function(t,e){return this.transform(c.TRANSLATE(t,e))},t.prototype.scale=function(t,e){return this.transform(c.SCALE(t,e))},t.prototype.rotate=function(t,e,s){return this.transform(c.ROTATE(t,e,s))},t.prototype.matrix=function(t,e,s,r,i,n){return this.transform(c.MATRIX(t,e,s,r,i,n))},t.prototype.skewX=function(t){return this.transform(c.SKEW_X(t))},t.prototype.skewY=function(t){return this.transform(c.SKEW_Y(t))},t.prototype.xSymmetry=function(t){return this.transform(c.X_AXIS_SYMMETRY(t))},t.prototype.ySymmetry=function(t){return this.transform(c.Y_AXIS_SYMMETRY(t))},t.prototype.annotateArcs=function(){return this.transform(c.ANNOTATE_ARCS())},t}(),v=function(t){return" "===t||"\t"===t||"\r"===t||"\n"===t},x=function(t){return"0".charCodeAt(0)<=t.charCodeAt(0)&&t.charCodeAt(0)<="9".charCodeAt(0)},b=function(t){function e(){var e=t.call(this)||this;return e.curNumber="",e.curCommandType=-1,e.curCommandRelative=!1,e.canParseCommandOrComma=!0,e.curNumberHasExp=!1,e.curNumberHasExpDigits=!1,e.curNumberHasDecimal=!1,e.curArgs=[],e}return i(e,t),e.prototype.finish=function(t){if(void 0===t&&(t=[]),this.parse(" ",t),0!==this.curArgs.length||!this.canParseCommandOrComma)throw new SyntaxError("Unterminated command at the path end.");return t},e.prototype.parse=function(t,e){var s=this;void 0===e&&(e=[]);for(var r=function(t){e.push(t),s.curArgs.length=0,s.canParseCommandOrComma=!0},i=0;i<t.length;i++){var n=t[i];if(x(n))this.curNumber+=n,this.curNumberHasExpDigits=this.curNumberHasExp;else if("e"!==n&&"E"!==n)if("-"!==n&&"+"!==n||!this.curNumberHasExp||this.curNumberHasExpDigits)if("."!==n||this.curNumberHasExp||this.curNumberHasDecimal){if(this.curNumber&&-1!==this.curCommandType){var o=Number(this.curNumber);if(isNaN(o))throw new SyntaxError("Invalid number ending at "+i);if(this.curCommandType===w.ARC)if(0===this.curArgs.length||1===this.curArgs.length){if(0>o)throw new SyntaxError('Expected positive number, got "'+o+'" at index "'+i+'"')}else if((3===this.curArgs.length||4===this.curArgs.length)&&"0"!==this.curNumber&&"1"!==this.curNumber)throw new SyntaxError('Expected a flag, got "'+this.curNumber+'" at index "'+i+'"');this.curArgs.push(o),this.curArgs.length===O[this.curCommandType]&&(w.HORIZ_LINE_TO===this.curCommandType?r({type:w.HORIZ_LINE_TO,relative:this.curCommandRelative,x:o}):w.VERT_LINE_TO===this.curCommandType?r({type:w.VERT_LINE_TO,relative:this.curCommandRelative,y:o}):this.curCommandType===w.MOVE_TO||this.curCommandType===w.LINE_TO||this.curCommandType===w.SMOOTH_QUAD_TO?(r({type:this.curCommandType,relative:this.curCommandRelative,x:this.curArgs[0],y:this.curArgs[1]}),w.MOVE_TO===this.curCommandType&&(this.curCommandType=w.LINE_TO)):this.curCommandType===w.CURVE_TO?r({type:w.CURVE_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x2:this.curArgs[2],y2:this.curArgs[3],x:this.curArgs[4],y:this.curArgs[5]}):this.curCommandType===w.SMOOTH_CURVE_TO?r({type:w.SMOOTH_CURVE_TO,relative:this.curCommandRelative,x2:this.curArgs[0],y2:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===w.QUAD_TO?r({type:w.QUAD_TO,relative:this.curCommandRelative,x1:this.curArgs[0],y1:this.curArgs[1],x:this.curArgs[2],y:this.curArgs[3]}):this.curCommandType===w.ARC&&r({type:w.ARC,relative:this.curCommandRelative,rX:this.curArgs[0],rY:this.curArgs[1],xRot:this.curArgs[2],lArcFlag:this.curArgs[3],sweepFlag:this.curArgs[4],x:this.curArgs[5],y:this.curArgs[6]})),this.curNumber="",this.curNumberHasExpDigits=!1,this.curNumberHasExp=!1,this.curNumberHasDecimal=!1,this.canParseCommandOrComma=!0}if(!v(n))if(","===n&&this.canParseCommandOrComma)this.canParseCommandOrComma=!1;else if("+"!==n&&"-"!==n&&"."!==n){if(0!==this.curArgs.length)throw new SyntaxError("Unterminated command at index "+i+".");if(!this.canParseCommandOrComma)throw new SyntaxError('Unexpected character "'+n+'" at index '+i+". Command cannot follow comma");if(this.canParseCommandOrComma=!1,"z"!==n&&"Z"!==n)if("h"===n||"H"===n)this.curCommandType=w.HORIZ_LINE_TO,this.curCommandRelative="h"===n;else if("v"===n||"V"===n)this.curCommandType=w.VERT_LINE_TO,this.curCommandRelative="v"===n;else if("m"===n||"M"===n)this.curCommandType=w.MOVE_TO,this.curCommandRelative="m"===n;else if("l"===n||"L"===n)this.curCommandType=w.LINE_TO,this.curCommandRelative="l"===n;else if("c"===n||"C"===n)this.curCommandType=w.CURVE_TO,this.curCommandRelative="c"===n;else if("s"===n||"S"===n)this.curCommandType=w.SMOOTH_CURVE_TO,this.curCommandRelative="s"===n;else if("q"===n||"Q"===n)this.curCommandType=w.QUAD_TO,this.curCommandRelative="q"===n;else if("t"===n||"T"===n)this.curCommandType=w.SMOOTH_QUAD_TO,this.curCommandRelative="t"===n;else{if("a"!==n&&"A"!==n)throw new SyntaxError('Unexpected character "'+n+'" at index '+i+".");this.curCommandType=w.ARC,this.curCommandRelative="a"===n}else e.push({type:w.CLOSE_PATH}),this.canParseCommandOrComma=!0,this.curCommandType=-1}else this.curNumber=n,this.curNumberHasDecimal="."===n}else this.curNumber+=n,this.curNumberHasDecimal=!0;else this.curNumber+=n;else this.curNumber+=n,this.curNumberHasExp=!0}return e},e.prototype.transform=function(t){return Object.create(this,{parse:{value:function(e,s){void 0===s&&(s=[]);for(var r=0,i=Object.getPrototypeOf(this).parse.call(this,e);r<i.length;r++){var n=i[r],o=t(n);Array.isArray(o)?s.push.apply(s,o):s.push(o)}return s}}})},e}(g),w=function(t){function e(s){var r=t.call(this)||this;return r.commands="string"==typeof s?e.parse(s):s,r}return i(e,t),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var t=c.CALCULATE_BOUNDS();return this.transform(t),t},e.prototype.transform=function(t){for(var e=[],s=0,r=this.commands;s<r.length;s++){var i=t(r[s]);Array.isArray(i)?e.push.apply(e,i):e.push(i)}return this.commands=e,this},e.encode=function(t){return T(t)},e.parse=function(t){var e=new b,s=[];return e.parse(t,s),e.finish(s),s},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(g),O=((m={})[w.MOVE_TO]=2,m[w.LINE_TO]=2,m[w.HORIZ_LINE_TO]=1,m[w.VERT_LINE_TO]=1,m[w.CLOSE_PATH]=0,m[w.QUAD_TO]=4,m[w.SMOOTH_QUAD_TO]=2,m[w.CURVE_TO]=6,m[w.SMOOTH_CURVE_TO]=4,m[w.ARC]=7,m);function T(t){var e="";Array.isArray(t)||(t=[t]);for(var s=0;s<t.length;s++){var r=t[s];if(r.type===w.CLOSE_PATH)e+="z";else if(r.type===w.HORIZ_LINE_TO)e+=(r.relative?"h":"H")+r.x;else if(r.type===w.VERT_LINE_TO)e+=(r.relative?"v":"V")+r.y;else if(r.type===w.MOVE_TO)e+=(r.relative?"m":"M")+r.x+" "+r.y;else if(r.type===w.LINE_TO)e+=(r.relative?"l":"L")+r.x+" "+r.y;else if(r.type===w.CURVE_TO)e+=(r.relative?"c":"C")+r.x1+" "+r.y1+" "+r.x2+" "+r.y2+" "+r.x+" "+r.y;else if(r.type===w.SMOOTH_CURVE_TO)e+=(r.relative?"s":"S")+r.x2+" "+r.y2+" "+r.x+" "+r.y;else if(r.type===w.QUAD_TO)e+=(r.relative?"q":"Q")+r.x1+" "+r.y1+" "+r.x+" "+r.y;else if(r.type===w.SMOOTH_QUAD_TO)e+=(r.relative?"t":"T")+r.x+" "+r.y;else{if(r.type!==w.ARC)throw new Error('Unexpected command type "'+r.type+'" at index '+s+".");e+=(r.relative?"a":"A")+r.rX+" "+r.rY+" "+r.xRot+" "+ +r.lArcFlag+" "+ +r.sweepFlag+" "+r.x+" "+r.y}}return e}var C=function(t){function e(s){var r=t.call(this)||this;return r.commands="string"==typeof s?e.parse(s):s,r}return i(e,t),e.prototype.encode=function(){return e.encode(this.commands)},e.prototype.getBounds=function(){var t=c.CALCULATE_BOUNDS();return this.transform(t),t},e.prototype.transform=function(t){for(var e=[],s=0,r=this.commands;s<r.length;s++){var i=t(r[s]);Array.isArray(i)?e.push.apply(e,i):e.push(i)}return this.commands=e,this},e.encode=function(t){return T(t)},e.parse=function(t){var e=new b,s=[];return e.parse(t,s),e.finish(s),s},e.CLOSE_PATH=1,e.MOVE_TO=2,e.HORIZ_LINE_TO=4,e.VERT_LINE_TO=8,e.LINE_TO=16,e.CURVE_TO=32,e.SMOOTH_CURVE_TO=64,e.QUAD_TO=128,e.SMOOTH_QUAD_TO=256,e.ARC=512,e.LINE_COMMANDS=e.LINE_TO|e.HORIZ_LINE_TO|e.VERT_LINE_TO,e.DRAWING_COMMANDS=e.HORIZ_LINE_TO|e.VERT_LINE_TO|e.LINE_TO|e.CURVE_TO|e.SMOOTH_CURVE_TO|e.QUAD_TO|e.SMOOTH_QUAD_TO|e.ARC,e}(g);(f={})[C.MOVE_TO]=2,f[C.LINE_TO]=2,f[C.HORIZ_LINE_TO]=1,f[C.VERT_LINE_TO]=1,f[C.CLOSE_PATH]=0,f[C.QUAD_TO]=4,f[C.SMOOTH_QUAD_TO]=2,f[C.CURVE_TO]=6,f[C.SMOOTH_CURVE_TO]=4,f[C.ARC]=7;class k{constructor(){}static loadFromFileContents(t){let e=(new DOMParser).parseFromString(t,"image/svg+xml");return this.load(e)}static load(t){let e=t.querySelectorAll("path"),s={},r=[];s.points=[];for(let t of e){let e=new C(t.getAttribute("d")),i={x:0,y:0};for(let[t,n]of e.commands.entries()){switch(n.type){case C.MOVE_TO:case C.LINE_TO:s.points.push([n.x,n.y]);break;case C.HORIZ_LINE_TO:s.points.push([n.x,i.y]);break;case C.VERT_LINE_TO:s.points.push([i.x,n.y]);break;case C.CLOSE_PATH:s.closed=!0,r.push(s),s={},s.points=[]}if(t==e.commands.length-1&&n.type!=C.CLOSE_PATH){let t=s.points[0],e=s.points[s.points.length-1];Math.hypot(e.x-t.x,e.y-t.y)<.1?s.closed=!0:s.closed=!1,r.push(s),s={},s.points=[]}n.hasOwnProperty("x")&&(i.x=n.x),n.hasOwnProperty("y")&&(i.y=n.y)}}for(let t of r){t.x=t.points[0][0],t.y=t.points[0][1],t.points.push([t.x,t.y]);for(let e of t.points)e[0]-=t.x,e[1]-=t.y}return r}}},,,function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" viewBox="0 0 900 900" version="1.1" id="svg8" sodipodi:docname="dla.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 360.0972,430.72214 356.96812,456.71 347.58087,479.86521 333.41765,498.96906 315.96066,513.06641 300.90813,520.44447 284.47221,525.18747 265.76359,527.75662 243.89295,528.61302 H 209.30835 174.72376 V 430.52451 332.43599 H 210.29649 245.86922 L 268.20099,333.45707 287.23898,336.52027 303.24671,341.32917 316.48767,347.85084 334.60341,362.40932 348.37137,381.31556 357.16575,404.14142 360.0972,430.72214" id="path820"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 307.79212,430.32687 306.01348,412.37583 300.67756,397.25741 291.61969,384.93871 278.41167,375.65026 270.53956,372.4553 262.46982,370.512 252.35794,369.42506 238.09592,369.06274 H 231.706 225.31609 V 430.45864 491.8545 H 231.706 238.09592 L 253.74133,491.45923 264.57783,490.27351 272.91108,487.90199 281.04669,484.21298 293.03602,474.99044 301.33632,463.13284 306.17817,448.27792 307.79212,430.32687" id="path819"></path><path inkscape:connector-curvature="0" id="path821" style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 517.15385,528.61302 H 375.65347 V 332.43599 H 426.24576 V 490.66878 H 517.15385 V 528.61302" sodipodi:nodetypes="ccccccc"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 731.69898,528.61302 H 679.39389 L 665.82358,488.95599 H 593.09708 L 579.52676,528.61302 H 528.53917 L 601.00213,332.43599 H 659.23601 L 731.69898,528.61302" id="path824"></path><path style="font-style:normal;font-variant:normal;font-weight:bold;font-stretch:normal;font-size:medium;line-height:1.25;font-family:sans-serif;-inkscape-font-specification:&#x27;sans-serif Bold&#x27;;letter-spacing:0.81559914px;word-spacing:0px;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-opacity:1;stroke-miterlimit:4;stroke-dasharray:none" d="M 653.57075,452.988 629.46033,382.63306 605.34994,452.988 H 653.57075" id="path823"></path></svg>'},function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" id="svg832" version="1.1" viewBox="0 0 900 900" sodipodi:docname="polygons.svg" inkscape:version="0.92.3 (2405546, 2018-03-11)"><path id="path1377" style="opacity:1;vector-effect:none;fill:none;fill-opacity:1;stroke:#000000;stroke-width:1;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:4;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:1" d="M 637.95718,464.22103 584.33571,382.14098 530.71423,300.06092 486.44216,387.53824 465.30384,429.30364 437.48882,430.45616 403.17529,384.77031 427.64471,365.18499 414.35188,278.03524 332.23363,245.97365 263.40556,301.05921 276.69889,388.20739 358.81822,420.27107 362.71416,417.15172 354.63937,446.02414 264.54156,476.88822 343.8441,529.62956 345.35592,624.85561 420.02002,565.73219 511.05425,593.72124 477.89678,504.44013 500.8419,471.77963 540.06207,469.61781 637.95718,464.22103" inkscape:connector-curvature="0" sodipodi:nodetypes="cccccccccccccccccccccccc"></path></svg>'},function(t,e){t.exports='<svg xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:cc="http://creativecommons.org/ns#" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd" xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape" id="svg832" version="1.1" viewBox="0 0 900 900" sodipodi:docname="superformula.svg" inkscape:version="0.92.2 (5c3e80d, 2017-08-06)"><path style="font-family:none;mix-blend-mode:normal;fill:none;fill-rule:nonzero;stroke:#000000;stroke-width:0.89864457;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-dashoffset:0;stroke-opacity:0.6" d="M 753.92226,448.18905 742.70566,451.3979 691.38526,453.71143 664.03896,455.75759 646.05236,457.65411 632.84626,459.44649 622.50646,461.15986 614.06026,462.81008 606.94966,464.40795 600.82626,465.96128 595.45916,467.47598 590.68786,468.95659 586.39636,470.40679 582.49846,471.82952 578.92856,473.22726 575.63536,474.60205 572.57846,475.95565 569.72496,477.28959 567.04836,478.60514 564.52646,479.90345 562.14106,481.18553 559.87646,482.45226 557.71956,483.70443 555.65896,484.94275 553.68506,486.16786 551.78926,487.38034 549.96426,488.5807 548.20346,489.76942 546.50116,490.94692 544.85246,492.11361 543.25256,493.26984 541.69756,494.41595 540.18386,495.55226 538.70826,496.67904 537.26766,497.79656 535.85936,498.90505 534.48106,500.00476 533.13066,501.09589 531.80576,502.17863 530.50506,503.25317 529.22636,504.31968 527.96846,505.37833 526.72976,506.42927 525.50886,507.47263 524.30476,508.50855 523.11616,509.53716 521.94216,510.55857 520.78156,511.57289 519.63366,512.58023 518.49756,513.5807 517.37246,514.57436 516.25766,515.56133 515.15246,516.54167 514.05606,517.51548 512.96806,518.48283 511.88776,519.44377 510.81486,520.39839 509.74856,521.34676 508.68846,522.28893 507.63426,523.22495 506.58546,524.15488 505.54166,525.07877 504.50236,525.99667 503.46756,526.90863 502.43646,527.8147 501.40906,528.71492 500.38506,529.60933 499.36406,530.49797 498.34586,531.38087 497.33006,532.25807 496.31656,533.12961 495.30506,533.99552 494.29546,534.85582 493.28736,535.71057 492.28076,536.55977 491.27536,537.40347 490.27096,538.24167 489.26736,539.07441 488.26456,539.90172 487.26226,540.72362 486.26036,541.54014 485.25866,542.3513 484.25706,543.1571 483.25546,543.95759 482.25376,544.75277 481.25176,545.54268 480.24926,546.32732 479.24636,547.10673 478.24276,547.8809 477.23856,548.64987 476.23346,549.41365 475.22746,550.17227 474.22056,550.92572 473.21246,551.67404 472.20326,552.41725 471.19286,553.15535 470.18086,553.88837 469.16776,554.61631 468.15296,555.33919 467.13686,556.05704 466.11896,556.76987 465.09946,557.47769 464.07826,558.18052 463.05516,558.87839 462.03016,559.57128 461.00336,560.25924 459.97446,560.94229 458.94366,561.62042 457.91076,562.29366 456.87556,562.96202 455.83836,563.62554 454.79886,564.28422 453.75716,564.93808 452.71296,565.58714 451.66646,566.23143 450.61766,566.87095 449.56616,567.50573 448.51236,568.13579 447.45586,568.76116 446.39686,569.38184 445.33516,569.99787 444.27086,570.60927 443.20386,571.21606 442.13406,571.81827 441.06146,572.41593 439.98596,573.00905 438.90776,573.59767 437.82656,574.18182 436.74236,574.76151 435.65526,575.3368 434.56506,575.9077 433.47186,576.47424 432.37546,577.03646 431.27586,577.5944 430.17316,578.14809 429.06726,578.69756 427.95796,579.24286 426.84556,579.78402 425.72966,580.3211 424.61026,580.85412 423.48746,581.38314 422.36136,581.9082 421.23146,582.42935 420.09806,582.94665 418.96116,583.46015 417.82046,583.96988 416.67596,584.47593 415.52766,584.97834 414.37556,585.47718 413.21966,585.97251 412.05966,586.4644 410.89566,586.95292 409.72756,587.43814 408.55536,587.92015 407.37886,588.39902 406.19816,588.87483 405.01316,589.34767 403.82356,589.81762 402.62946,590.28479 401.43076,590.74927 400.22756,591.21118 399.01946,591.67061 397.80646,592.12768 396.58856,592.58251 395.36566,593.03522 394.13756,593.48594 392.90426,593.93482 391.66546,594.38199 390.42116,594.82761 389.17136,595.27183 387.91566,595.71482 386.65416,596.15676 385.38656,596.59782 384.11286,597.03822 382.83276,597.47813 381.54616,597.9178 380.25286,598.35743 378.95266,598.79727 377.64536,599.23757 376.33086,599.67859 375.00886,600.12062 373.67916,600.56398 372.34146,601.00894 370.99546,601.45588 369.64106,601.90513 368.27776,602.35708 366.90546,602.81212 365.52366,603.27069 364.13216,603.73324 362.73056,604.20026 361.31836,604.67225 359.89526,605.14979 358.46076,605.63346 357.01456,606.1239 355.55586,606.62178 354.0842,607.12785 352.59912,607.64287 351.09992,608.16772 349.58593,608.7033 348.05643,609.25061 346.51063,609.81071 344.94769,610.38478 343.36669,610.97406 341.76663,611.57996 340.14644,612.20395 338.50494,612.84771 336.84084,613.51302 335.15273,614.20188 333.43907,614.91647 331.69815,615.65921 329.92811,616.43279 328.12686,617.24018 326.29209,618.08473 324.42122,618.97016 322.51137,619.90067 320.55932,620.88102 318.56139,621.91658 316.51345,623.0135 314.41075,624.17883 312.24788,625.42069 310.01856,626.74852 307.71552,628.17335 305.33024,629.70816 302.85262,631.3684 300.27069,633.1726 297.56994,635.14321 294.73276,637.30776 291.73733,639.70055 288.55627,642.36484 285.1546,645.35633 281.48667,648.74813 277.49137,652.63879 273.08447,657.1651 268.14536,662.52416 262.49315,669.01363 255.8394,677.11151 247.68406,687.65223 237.04834,702.28078 221.60319,724.94027 193.93942,768.22827 185.55216,776.33775 188.38154,765.01943 212.03817,719.41791 223.93927,694.71228 231.29011,678.1872 236.34097,665.8541 240.02706,656.04285 242.82101,647.90316 244.99253,640.94624 246.70898,634.86659 248.08075,629.46124 249.18418,624.58882 250.07403,620.14715 250.79084,616.06012 251.36534,612.2696 251.82131,608.73025 252.17754,605.40603 252.44905,602.2679 252.64805,599.29211 252.78461,596.45897 252.86702,593.75206 252.90229,591.15751 252.89634,588.66347 252.85419,586.25983 252.78018,583.93779 252.67804,581.68975 252.55101,579.50905 252.40194,577.38981 252.2333,575.32688 252.04731,573.31565 251.84591,571.35202 251.63082,569.43233 251.4036,567.55328 251.16562,565.71191 250.91813,563.90554 250.66226,562.13173 250.39902,560.38827 250.12933,558.67314 249.85402,556.98451 249.57386,555.32068 249.28954,553.6801 249.00171,552.06135 248.71094,550.4631 248.41778,548.88416 248.1227,547.3234 247.82619,545.77976 247.52866,544.25229 247.23049,542.74008 246.93205,541.24232 246.63368,539.75819 246.33569,538.28699 246.03837,536.82802 245.742,535.38065 245.44682,533.94429 245.15308,532.51838 244.861,531.10239 244.57077,529.69582 244.28261,528.2982 243.99669,526.9091 243.71318,525.52811 243.43226,524.15484 243.15406,522.78891 242.87873,521.42998 242.60641,520.07771 242.33723,518.73181 242.07131,517.39195 241.80877,516.05789 241.5497,514.72933 241.29421,513.40605 241.04241,512.08777 240.79437,510.77429 240.55021,509.46538 240.30998,508.16085 240.07377,506.8605 239.84166,505.56412 239.61371,504.27155 239.39,502.98262 239.17059,501.69716 238.95554,500.41502 238.7449,499.13605 238.53874,497.86011 238.3371,496.58705 238.14003,495.31676 237.9476,494.0491 237.75982,492.78396 237.57676,491.52122 237.39845,490.26077 237.22494,489.00251 237.05625,487.74633 236.89244,486.49213 236.73351,485.23982 236.57952,483.98931 236.43049,482.74052 236.28645,481.49336 236.14743,480.24773 236.01345,479.00359 235.88455,477.76083 235.76074,476.5194 235.64203,475.27922 235.52847,474.04021 235.42007,472.80232 235.31684,471.56548 235.2188,470.32962 235.12597,469.09468 235.03836,467.86062 234.95599,466.62736 234.87888,465.39485 234.80703,464.16303 234.74046,462.93185 234.67917,461.70126 234.62319,460.4712 234.5725,459.24163 234.52714,458.01249 234.48709,456.78373 234.45238,455.5553 234.42298,454.32716 234.39894,453.09925 234.38023,451.87153 234.36687,450.64395 234.35884,449.41647 234.35617,448.18904 234.35884,446.96161 234.36687,445.73412 234.38023,444.50654 234.39894,443.27883 234.42298,442.05092 234.45238,440.82278 234.48709,439.59435 234.52714,438.36559 234.5725,437.13645 234.62319,435.90687 234.67917,434.67682 234.74046,433.44623 234.80703,432.21505 234.87888,430.98323 234.95599,429.75072 235.03836,428.51746 235.12597,427.28339 235.2188,426.04845 235.31684,424.8126 235.42007,423.57576 235.52847,422.33787 235.64203,421.09885 235.76074,419.85868 235.88455,418.61725 236.01345,417.37449 236.14743,416.13035 236.28645,414.88472 236.43049,413.63756 236.57952,412.38877 236.73351,411.13826 236.89244,409.88594 237.05625,408.63174 237.22494,407.37557 237.39845,406.1173 237.57676,404.85686 237.75982,403.59412 237.9476,402.32898 238.14003,401.06132 238.3371,399.79102 238.53874,398.51797 238.7449,397.24203 238.95554,395.96306 239.17059,394.68092 239.39,393.39546 239.61371,392.10653 239.84166,390.81396 240.07377,389.51758 240.30998,388.21723 240.55021,386.9127 240.79437,385.60379 241.04241,384.29031 241.29421,382.97203 241.5497,381.64874 241.80877,380.32019 242.07131,378.98612 242.33723,377.64627 242.60641,376.30037 242.87873,374.9481 243.15406,373.58917 243.43226,372.22324 243.71318,370.84997 243.99669,369.46898 244.28261,368.07988 244.57077,366.68226 244.861,365.27569 245.15308,363.8597 245.44682,362.43379 245.742,360.99743 246.03837,359.55006 246.33569,358.09109 246.63368,356.61989 246.93205,355.13576 247.23049,353.63799 247.52866,352.12579 247.82619,350.59832 248.1227,349.05468 248.41778,347.49392 248.71094,345.91497 249.00171,344.31673 249.28954,342.69798 249.57386,341.0574 249.85402,339.39357 250.12933,337.70494 250.39902,335.98981 250.66226,334.24635 250.91813,332.47254 251.16562,330.66616 251.4036,328.8248 251.63082,326.94575 251.84591,325.02606 252.04731,323.06243 252.2333,321.0512 252.40194,318.98826 252.55101,316.86903 252.67804,314.68833 252.78018,312.44029 252.85419,310.11826 252.89634,307.7146 252.90229,305.22057 252.86702,302.62601 252.78461,299.9191 252.64805,297.08597 252.44905,294.11017 252.17754,290.97204 251.82131,287.64783 251.36534,284.10847 250.79084,280.31796 250.07403,276.23093 249.18418,271.78927 248.08075,266.91684 246.70898,261.51148 244.99253,255.43184 242.82101,248.47492 240.02706,240.33523 236.34097,230.52398 231.29011,218.19088 223.93927,201.66581 212.03817,176.96017 188.38154,131.35865 185.55216,120.04033 193.93942,128.14981 221.60319,171.43781 237.04834,194.09729 247.68406,208.72585 255.8394,219.26657 262.49315,227.36444 268.14536,233.85392 273.08447,239.21298 277.49137,243.73928 281.48667,247.62995 285.1546,251.02176 288.55627,254.01323 291.73733,256.67753 294.73276,259.07032 297.56994,261.23487 300.27069,263.20547 302.85262,265.00968 305.33024,266.66992 307.71552,268.20473 310.01856,269.62956 312.24788,270.95739 314.41075,272.19925 316.51345,273.36458 318.56139,274.4615 320.55932,275.49706 322.51137,276.47741 324.42122,277.40792 326.29209,278.29335 328.12686,279.1379 329.92811,279.94529 331.69815,280.71887 333.43907,281.46161 335.15273,282.1762 336.84084,282.86506 338.50494,283.53037 340.14644,284.17413 341.76663,284.79812 343.36669,285.40401 344.94769,285.99331 346.51063,286.56736 348.05643,287.12747 349.58593,287.67477 351.09992,288.21036 352.59912,288.73521 354.0842,289.25023 355.55586,289.7563 357.01456,290.25419 358.46076,290.74462 359.89526,291.22828 361.31836,291.70583 362.73056,292.17782 364.13216,292.64484 365.52366,293.10739 366.90546,293.56596 368.27776,294.021 369.64106,294.47295 370.99546,294.9222 372.34146,295.36913 373.67916,295.81411 375.00886,296.25745 376.33086,296.69948 377.64536,297.14051 378.95266,297.58081 380.25286,298.02065 381.54616,298.46028 382.83276,298.89995 384.11286,299.33987 385.38656,299.78026 386.65416,300.22132 387.91566,300.66326 389.17136,301.10625 390.42116,301.55047 391.66546,301.99609 392.90426,302.44326 394.13756,302.89214 395.36566,303.34286 396.58856,303.79557 397.80646,304.2504 399.01946,304.70747 400.22756,305.1669 401.43076,305.62881 402.62946,306.09329 403.82356,306.56046 405.01316,307.03041 406.19816,307.50325 407.37886,307.97905 408.55536,308.45793 409.72756,308.93994 410.89566,309.42516 412.05966,309.91368 413.21966,310.40557 414.37556,310.9009 415.52766,311.39974 416.67596,311.90215 417.82046,312.4082 418.96116,312.91794 420.09806,313.43143 421.23146,313.94872 422.36136,314.46988 423.48746,314.99494 424.61026,315.52396 425.72966,316.05698 426.84556,316.59405 427.95796,317.13522 429.06726,317.68052 430.17316,318.22999 431.27586,318.78368 432.37546,319.34162 433.47186,319.90384 434.56506,320.47038 435.65526,321.04128 436.74236,321.61657 437.82656,322.19626 438.90776,322.78041 439.98596,323.36903 441.06146,323.96215 442.13406,324.55981 443.20386,325.16201 444.27086,325.7688 445.33516,326.3802 446.39686,326.99624 447.45586,327.61692 448.51236,328.24229 449.56616,328.87235 450.61766,329.50713 451.66646,330.14665 452.71296,330.79094 453.75716,331.44 454.79886,332.09386 455.83836,332.75254 456.87556,333.41606 457.91076,334.08443 458.94366,334.75766 459.97446,335.43579 461.00336,336.11884 462.03016,336.80679 463.05516,337.49969 464.07826,338.19756 465.09946,338.90038 466.11896,339.60821 467.13686,340.32104 468.15296,341.03889 469.16776,341.76177 470.18086,342.48971 471.19286,343.22273 472.20326,343.96083 473.21246,344.70404 474.22056,345.45236 475.22746,346.20582 476.23346,346.96443 477.23856,347.72821 478.24276,348.49718 479.24636,349.27136 480.24926,350.05076 481.25176,350.8354 482.25376,351.62531 483.25546,352.42049 484.25706,353.22098 485.25866,354.02678 486.26036,354.83794 487.26226,355.65446 488.26456,356.47636 489.26736,357.30366 490.27096,358.13641 491.27536,358.97461 492.28076,359.8183 493.28736,360.6675 494.29546,361.52225 495.30506,362.38256 496.31656,363.24847 497.33006,364.12001 498.34586,364.99721 499.36406,365.88011 500.38506,366.76874 501.40906,367.66316 502.43646,368.56337 503.46756,369.46945 504.50236,370.3814 505.54166,371.29931 506.58546,372.2232 507.63426,373.15313 508.68846,374.08915 509.74856,375.03132 510.81486,375.97969 511.88776,376.93431 512.96806,377.89526 514.05606,378.8626 515.15246,379.83641 516.25766,380.81675 517.37246,381.80372 518.49756,382.79738 519.63366,383.79785 520.78156,384.80519 521.94216,385.81951 523.11616,386.84092 524.30476,387.86953 525.50886,388.90544 526.72976,389.94881 527.96846,390.99974 529.22636,392.0584 530.50506,393.12491 531.80576,394.19945 533.13066,395.28219 534.48106,396.37332 535.85936,397.47302 537.26766,398.58152 538.70826,399.69904 540.18386,400.82581 541.69756,401.96212 543.25256,403.10824 544.85246,404.26446 546.50116,405.43116 548.20346,406.60866 549.96426,407.79738 551.78926,408.99774 553.68506,410.21022 555.65896,411.43533 557.71956,412.67365 559.87646,413.92583 562.14106,415.19255 564.52646,416.47463 567.04836,417.77294 569.72496,419.08849 572.57846,420.42242 575.63536,421.77603 578.92856,423.15082 582.49846,424.54856 586.39636,425.97129 590.68786,427.42149 595.45916,428.9021 600.82626,430.41679 606.94966,431.97013 614.06026,433.568 622.50646,435.21822 632.84626,436.93159 646.05236,438.72397 664.03896,440.62049 691.38526,442.66664 742.70566,444.98018 753.92226,448.18902" id="path4" inkscape:connector-curvature="0"></path></svg>'},,,,function(t,e,s){"use strict";s.r(e);var r={CircleDiameter:4,BiasTowards:"Center",MaxWalkers:4e3,ShowWalkers:!1,WalkerSource:"Edges",EdgeMargin:200},i=s(1),n=s(3);let o,a={dla:s(6),polygons:s(7),supershape:s(8)},h=a.supershape;new p5((function(t){function e(){o.removeAll(),function(t){let e=n.a.loadFromFileContents(t);for(let t of e)t.stuck=!0,t.solid=!1,t.x+=window.innerWidth/2-450,t.y+=window.innerHeight/2-450;o.createShapesFromPaths(e)}(h),o.createDefaultWalkers(),o.createDefaultWalkers(void 0,"Offscreen")}t.setup=function(){t.createCanvas(window.innerWidth,window.innerHeight),t.colorMode(t.HSB,255),t.ellipseMode(t.CENTER),o=new i.a(t,r),e()},t.draw=function(){o.iterate(),o.draw(),t.fill(0),t.noStroke(),t.textSize(20),t.textStyle(t.BOLD),t.text("05 - SVG input",20,40),t.textStyle(t.NORMAL),t.fill(150),t.text("Growth using shapes from SVG files\n\nKey commands:\n1 - SVG text\n2 - compound polygon\n3 - supershape",20,70)},t.keyReleased=function(){switch(t.key){case" ":o.togglePause();break;case"w":o.toggleShowWalkers();break;case"c":o.toggleShowClusters();break;case"r":e();break;case"f":o.toggleUseFrame(),e();break;case"s":o.toggleShowShapes(),restartWorld();break;case"l":o.toggleLineRenderingMode();break;case"e":o.export();break;case"1":h=a.dla,e();break;case"2":h=a.polygons,e();break;case"3":h=a.supershape,e()}}}))}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vLy4vY29yZS9ub2RlX21vZHVsZXMvZmlsZS1zYXZlci9kaXN0L0ZpbGVTYXZlci5taW4uanMiLCJ3ZWJwYWNrOi8vLy4vY29yZS9EZWZhdWx0cy5qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL25vZGVfbW9kdWxlcy9jb2xsaXNpb25zL3NyYy9tb2R1bGVzL0JWSEJyYW5jaC5tanMiLCJ3ZWJwYWNrOi8vLy4vY29yZS9ub2RlX21vZHVsZXMvY29sbGlzaW9ucy9zcmMvbW9kdWxlcy9CVkgubWpzIiwid2VicGFjazovLy8uL2NvcmUvbm9kZV9tb2R1bGVzL2NvbGxpc2lvbnMvc3JjL21vZHVsZXMvUmVzdWx0Lm1qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL25vZGVfbW9kdWxlcy9jb2xsaXNpb25zL3NyYy9tb2R1bGVzL1NBVC5tanMiLCJ3ZWJwYWNrOi8vLy4vY29yZS9ub2RlX21vZHVsZXMvY29sbGlzaW9ucy9zcmMvbW9kdWxlcy9Cb2R5Lm1qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL25vZGVfbW9kdWxlcy9jb2xsaXNpb25zL3NyYy9tb2R1bGVzL0NpcmNsZS5tanMiLCJ3ZWJwYWNrOi8vLy4vY29yZS9ub2RlX21vZHVsZXMvY29sbGlzaW9ucy9zcmMvbW9kdWxlcy9Qb2x5Z29uLm1qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL25vZGVfbW9kdWxlcy9jb2xsaXNpb25zL3NyYy9tb2R1bGVzL1BvaW50Lm1qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL25vZGVfbW9kdWxlcy9jb2xsaXNpb25zL3NyYy9Db2xsaXNpb25zLm1qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL25vZGVfbW9kdWxlcy9zdmctcG9pbnRzL21vZHVsZXMvdG9Qb2ludHMuanMiLCJ3ZWJwYWNrOi8vLy4vY29yZS9ub2RlX21vZHVsZXMvc3ZnLXBvaW50cy9tb2R1bGVzL3RvUGF0aC5qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL25vZGVfbW9kdWxlcy9zdmctcG9pbnRzL21vZHVsZXMvdmFsaWQuanMiLCJ3ZWJwYWNrOi8vLy4vY29yZS9ETEEuanMiLCJ3ZWJwYWNrOi8vLyh3ZWJwYWNrKS9idWlsZGluL2dsb2JhbC5qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL25vZGVfbW9kdWxlcy9zdmctcGF0aGRhdGEvbGliL1NWR1BhdGhEYXRhLm1vZHVsZS5qcyIsIndlYnBhY2s6Ly8vLi9jb3JlL1NWR0xvYWRlci5qcyIsIndlYnBhY2s6Ly8vLi9leHBlcmltZW50cy8wNS1zdmctaW5wdXQvc3ZnL2RsYS5zdmciLCJ3ZWJwYWNrOi8vLy4vZXhwZXJpbWVudHMvMDUtc3ZnLWlucHV0L3N2Zy9wb2x5Z29ucy5zdmciLCJ3ZWJwYWNrOi8vLy4vZXhwZXJpbWVudHMvMDUtc3ZnLWlucHV0L3N2Zy9zdXBlcnNoYXBlLnN2ZyIsIndlYnBhY2s6Ly8vLi9leHBlcmltZW50cy8wNS1zdmctaW5wdXQvanMvU2V0dGluZ3MuanMiLCJ3ZWJwYWNrOi8vLy4vZXhwZXJpbWVudHMvMDUtc3ZnLWlucHV0L2pzL2VudHJ5LmpzIl0sIm5hbWVzIjpbImluc3RhbGxlZE1vZHVsZXMiLCJfX3dlYnBhY2tfcmVxdWlyZV9fIiwibW9kdWxlSWQiLCJleHBvcnRzIiwibW9kdWxlIiwiaSIsImwiLCJtb2R1bGVzIiwiY2FsbCIsIm0iLCJjIiwiZCIsIm5hbWUiLCJnZXR0ZXIiLCJvIiwiT2JqZWN0IiwiZGVmaW5lUHJvcGVydHkiLCJlbnVtZXJhYmxlIiwiZ2V0IiwiciIsIlN5bWJvbCIsInRvU3RyaW5nVGFnIiwidmFsdWUiLCJ0IiwibW9kZSIsIl9fZXNNb2R1bGUiLCJucyIsImNyZWF0ZSIsImtleSIsImJpbmQiLCJuIiwib2JqZWN0IiwicHJvcGVydHkiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsInAiLCJzIiwiYiIsImUiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJyZXNwb25zZVR5cGUiLCJvbmxvYWQiLCJhIiwicmVzcG9uc2UiLCJvbmVycm9yIiwiY29uc29sZSIsImVycm9yIiwic2VuZCIsInN0YXR1cyIsImRpc3BhdGNoRXZlbnQiLCJNb3VzZUV2ZW50IiwiZG9jdW1lbnQiLCJjcmVhdGVFdmVudCIsImluaXRNb3VzZUV2ZW50Iiwid2luZG93IiwiZiIsInNlbGYiLCJnbG9iYWwiLCJzYXZlQXMiLCJIVE1MQW5jaG9yRWxlbWVudCIsImciLCJoIiwiVVJMIiwid2Via2l0VVJMIiwiaiIsImNyZWF0ZUVsZW1lbnQiLCJkb3dubG9hZCIsInJlbCIsImhyZWYiLCJvcmlnaW4iLCJsb2NhdGlvbiIsInRhcmdldCIsImNyZWF0ZU9iamVjdFVSTCIsInNldFRpbWVvdXQiLCJyZXZva2VPYmplY3RVUkwiLCJuYXZpZ2F0b3IiLCJtc1NhdmVPck9wZW5CbG9iIiwiYXV0b0JvbSIsIndhcm4iLCJ0ZXN0IiwidHlwZSIsIkJsb2IiLCJ0aXRsZSIsImJvZHkiLCJpbm5lclRleHQiLCJIVE1MRWxlbWVudCIsInNhZmFyaSIsInVzZXJBZ2VudCIsIkZpbGVSZWFkZXIiLCJvbmxvYWRlbmQiLCJyZXN1bHQiLCJyZXBsYWNlIiwicmVhZEFzRGF0YVVSTCIsImsiLCJDaXJjbGVEaWFtZXRlciIsIkluaXRpYWxDbHVzdGVyVHlwZSIsIldhbGtlclNvdXJjZSIsIk1heFdhbGtlcnMiLCJFZGdlTWFyZ2luIiwiUHJ1bmVPbGRXYWxrZXJzIiwiTWF4QWdlIiwiUmVwbGVuaXNoV2Fsa2VycyIsIlBydW5lRGlzdGFudFdhbGtlcnMiLCJNYXhXYW5kZXJEaXN0YW5jZSIsIlZhcnlEaWFtZXRlckJ5RGlzdGFuY2UiLCJWYXJ5RGlhbWV0ZXJSYW5kb21seSIsIlNob3dDbHVzdGVycyIsIlNob3dXYWxrZXJzIiwiU2hvd1NoYXBlcyIsIkJpYXNUb3dhcmRzIiwiQmlhc0ZvcmNlIiwiVXNlUGVyV2Fsa2VyQmlhcyIsIlVzZUZyYW1lIiwiRnJhbWVTaXplIiwiQ2FwdHVyZUxpbmVzIiwiUmVuZGVyTW9kZSIsIlVzZVN0cm9rZSIsIlVzZUNvbG9ycyIsIkJhY2tncm91bmRDb2xvciIsIldhbGtlckNvbG9yIiwiQ2x1c3RlckNvbG9yIiwiU2hhcGVDb2xvciIsIkxpbmVDb2xvciIsIkZyYW1lQ29sb3IiLCJicmFuY2hfcG9vbCIsIkJWSEJyYW5jaCIsInRoaXMiLCJfYnZoX3BhcmVudCIsIl9idmhfYnJhbmNoIiwiX2J2aF9sZWZ0IiwiX2J2aF9yaWdodCIsIl9idmhfc29ydCIsIl9idmhfbWluX3giLCJfYnZoX21pbl95IiwiX2J2aF9tYXhfeCIsIl9idmhfbWF4X3kiLCJsZW5ndGgiLCJwb3AiLCJicmFuY2giLCJwdXNoIiwic29ydCIsIl9oaWVyYXJjaHkiLCJfYm9kaWVzIiwiX2RpcnR5X2JyYW5jaGVzIiwidXBkYXRpbmciLCJidmgiLCJfYnZoIiwiRXJyb3IiLCJwb2x5Z29uIiwiX3BvbHlnb24iLCJib2R5X3giLCJ4IiwiYm9keV95IiwieSIsIl9kaXJ0eV9jb29yZHMiLCJfeCIsIl95IiwiYW5nbGUiLCJfYW5nbGUiLCJzY2FsZV94IiwiX3NjYWxlX3giLCJzY2FsZV95IiwiX3NjYWxlX3kiLCJfY2FsY3VsYXRlQ29vcmRzIiwicGFkZGluZyIsIl9idmhfcGFkZGluZyIsInJhZGl1cyIsInNjYWxlIiwiYm9keV9taW5feCIsIl9taW5feCIsImJvZHlfbWluX3kiLCJfbWluX3kiLCJib2R5X21heF94IiwiX21heF94IiwiYm9keV9tYXhfeSIsIl9tYXhfeSIsImN1cnJlbnQiLCJncmFuZHBhcmVudCIsInBhcmVudF9taW5feCIsInBhcmVudF9taW5feSIsInBhcmVudF9tYXhfeCIsInBhcmVudF9tYXhfeSIsIm5ld19wYXJlbnQiLCJnZXRCcmFuY2giLCJsZWZ0IiwibGVmdF9taW5feSIsImxlZnRfbWF4X3giLCJsZWZ0X21heF95IiwibGVmdF9uZXdfbWluX3giLCJsZWZ0X25ld19taW5feSIsImxlZnRfbmV3X21heF94IiwibGVmdF9uZXdfbWF4X3kiLCJsZWZ0X2RpZmZlcmVuY2UiLCJyaWdodCIsInJpZ2h0X21pbl94IiwicmlnaHRfbWluX3kiLCJyaWdodF9tYXhfeCIsInJpZ2h0X21heF95IiwicmlnaHRfbmV3X21pbl94IiwicmlnaHRfbmV3X21pbl95IiwicmlnaHRfbmV3X21heF94IiwicmlnaHRfbmV3X21heF95IiwicmlnaHRfZGlmZmVyZW5jZSIsInNwbGljZSIsImluZGV4T2YiLCJwYXJlbnQiLCJwYXJlbnRfbGVmdCIsInNpYmxpbmciLCJsZWZ0X21pbl94IiwicmVsZWFzZUJyYW5jaCIsImJvZGllcyIsImNvdW50IiwidXBkYXRlIiwibWluX3giLCJtaW5feSIsIm1heF94IiwibWF4X3kiLCJyZW1vdmUiLCJpbnNlcnQiLCJyZXN1bHRzIiwidHJhdmVyc2VfbGVmdCIsImNvbnRleHQiLCJkcmF3IiwibW92ZVRvIiwibGluZVRvIiwiUmVzdWx0IiwiY29sbGlzaW9uIiwiYV9pbl9iIiwib3ZlcmxhcCIsIm92ZXJsYXBfeCIsIm92ZXJsYXBfeSIsIlNBVCIsImFhYmIiLCJhX3BvbHlnb24iLCJiX3BvbHlnb24iLCJiX2luX2EiLCJhX3giLCJhX3kiLCJhX3JhZGl1cyIsImFfbWluX3giLCJhX21pbl95IiwiYV9tYXhfeCIsImFfbWF4X3kiLCJiX3giLCJiX3kiLCJiX3JhZGl1cyIsImJfbWluX3giLCJiX21pbl95IiwiYl9tYXhfeCIsImJfbWF4X3kiLCJhYWJiQUFCQiIsIl9kaXJ0eV9ub3JtYWxzIiwiX2NhbGN1bGF0ZU5vcm1hbHMiLCJhX2NvdW50IiwiX2Nvb3JkcyIsImJfY291bnQiLCJhX2Nvb3JkcyIsImJfY29vcmRzIiwiYV9ub3JtYWxzIiwiX25vcm1hbHMiLCJiX25vcm1hbHMiLCJpeCIsIml5Iiwic2VwYXJhdGluZ0F4aXMiLCJwb2x5Z29uUG9seWdvbiIsInBvbHlnb25DaXJjbGUiLCJkaWZmZXJlbmNlX3giLCJkaWZmZXJlbmNlX3kiLCJyYWRpdXNfc3VtIiwibGVuZ3RoX3NxdWFyZWQiLCJNYXRoIiwic3FydCIsImNpcmNsZUNpcmNsZSIsInJldmVyc2UiLCJhX2VkZ2VzIiwiX2VkZ2VzIiwiYl9yYWRpdXMyIiwicmFkaXVzX3NxdWFyZWQiLCJjb29yZF94IiwiY29vcmRfeSIsImVkZ2VfeCIsImVkZ2VfeSIsImRvdCIsInJlZ2lvbiIsInRtcF9vdmVybGFwcGluZyIsInRtcF9vdmVybGFwIiwidG1wX292ZXJsYXBfeCIsInRtcF9vdmVybGFwX3kiLCJvdGhlcl94Iiwib3RoZXJfeSIsImNvb3JkMl94IiwiY29vcmQyX3kiLCJlZGdlMl94IiwiZWRnZTJfeSIsImRvdDIiLCJ0YXJnZXRfeCIsInRhcmdldF95Iiwibm9ybWFsX3giLCJub3JtYWxfeSIsImFic29sdXRlX2xlbmd0aCIsImFfc3RhcnQiLCJhX2VuZCIsImJfc3RhcnQiLCJiX2VuZCIsIm9wdGlvbjEiLCJvcHRpb24yIiwiY3VycmVudF9vdmVybGFwIiwiYWJzb2x1dGVfb3ZlcmxhcCIsInNpZ24iLCJfY2lyY2xlIiwiX3BvaW50IiwicG90ZW50aWFscyIsInN1cGVyIiwiYXJjIiwiUEkiLCJwb2ludHMiLCJfcG9pbnRzIiwic2V0UG9pbnRzIiwiY29vcmRzIiwibmV3X3BvaW50cyIsIkZsb2F0NjRBcnJheSIsIm5ld19wb2ludCIsImNvcyIsInNpbiIsInRtcF94IiwiZWRnZXMiLCJub3JtYWxzIiwibmV4dCIsInVuZGVmaW5lZCIsImRyYXdCVkgiLCJzb3VyY2UiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImFyZ3VtZW50cyIsInRvUG9pbnRzIiwiX3JlZiIsInByb3BzIiwib2JqIiwia2V5cyIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllcyIsImdldFBvaW50c0Zyb21DaXJjbGUiLCJnZXRQb2ludHNGcm9tRWxsaXBzZSIsImdldFBvaW50c0Zyb21MaW5lIiwiZ2V0UG9pbnRzRnJvbVBhdGgiLCJnZXRQb2ludHNGcm9tUG9seWdvbiIsImdldFBvaW50c0Zyb21Qb2x5bGluZSIsImdldFBvaW50c0Zyb21SZWN0IiwiZ2V0UG9pbnRzRnJvbUciLCJfcmVmMiIsImN4IiwiY3kiLCJjdXJ2ZSIsInJ4IiwicnkiLCJzd2VlcEZsYWciLCJfcmVmMyIsIl9yZWY0IiwieDEiLCJ4MiIsInkxIiwieTIiLCJ2YWxpZENvbW1hbmRzIiwiY29tbWFuZExlbmd0aHMiLCJBIiwiQyIsIkgiLCJMIiwiTSIsIlEiLCJTIiwiVCIsIlYiLCJaIiwicmVsYXRpdmVDb21tYW5kcyIsImlzUmVsYXRpdmUiLCJjb21tYW5kIiwib3B0aW9uYWxBcmNLZXlzIiwiX3JlZjUiLCJjb21tYW5kcyIsIm1hdGNoIiwiZ2V0Q29tbWFuZHMiLCJwYXJhbXMiLCJzcGxpdCIsIm1hcCIsInYiLCJzbGljZSIsInRyaW0iLCJmaWx0ZXIiLCJwYXJzZUZsb2F0IiwiaXNOYU4iLCJnZXRQYXJhbXMiLCJ1cHBlckNhc2VDb21tYW5kIiwidG9VcHBlckNhc2UiLCJjb21tYW5kTGVuZ3RoIiwicmVsYXRpdmUiLCJjb21tYW5kUGFyYW1zIiwic2hpZnQiLCJpdGVyYXRpb25zIiwicHJldlBvaW50IiwieEF4aXNSb3RhdGlvbiIsImxhcmdlQXJjRmxhZyIsIl9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24iLCJfZGlkSXRlcmF0b3JFcnJvciIsIl9pdGVyYXRvckVycm9yIiwiX3N0ZXAiLCJfaXRlcmF0b3IiLCJpdGVyYXRvciIsImRvbmUiLCJlcnIiLCJyZXR1cm4iLCJzeDIiLCJzeTIiLCJzeCIsInN5IiwiZGlmZiIsInN4MSIsInN5MSIsImFicyIsInR4IiwidHkiLCJ0eDEiLCJ0eTEiLCJfZGlmZiIsIl9wcmV2UG9pbnQiLCJfcmVmNiIsImdldFBvaW50c0Zyb21Qb2ludHMiLCJjbG9zZWQiLCJfcmVmNyIsIl9yZWY4IiwicmVkdWNlIiwiYXJyIiwicG9pbnQiLCJfcmVmOSIsImhlaWdodCIsIndpZHRoIiwiZ2V0UG9pbnRzRnJvbVJlY3RXaXRoQ29ybmVyUmFkaXVzIiwiZ2V0UG9pbnRzRnJvbUJhc2ljUmVjdCIsIl9yZWYxMCIsIl9yZWYxMSIsIl9yZWYxMiIsInNoYXBlcyIsInBvaW50c1RvRCIsImZpcnN0UG9pbnQiLCJfcG9pbnQkY3VydmUiLCJpc0ZpcnN0UG9pbnQiLCJpc0xhc3RQb2ludCIsIl9wb2ludCRjdXJ2ZTIiLCJfcG9pbnQkY3VydmUyJGxhcmdlQXIiLCJfcG9pbnQkY3VydmUyJHN3ZWVwRmwiLCJfcG9pbnQkY3VydmUyJHhBeGlzUm8iLCJfcG9pbnQkY3VydmUzIiwiX3BvaW50JGN1cnZlNCIsImlzUG9pbnRzIiwiQXJyYXkiLCJpc0FycmF5IiwiaXNHcm91cCIsInNocCIsInA1Iiwic2V0dGluZ3MiLCJEZWZhdWx0cyIsInBhdXNlZCIsInNob3dXYWxrZXJzIiwic2hvd0NsdXN0ZXJzIiwic2hvd1NoYXBlcyIsInVzZUZyYW1lIiwicmVuZGVyTW9kZSIsIm51bVdhbGtlcnMiLCJjdXN0b21Nb3ZlbWVudEZ1bmN0aW9uIiwiZWRnZU1hcmdpbiIsImZyYW1lIiwiaW5uZXJXaWR0aCIsInRvcCIsImlubmVySGVpZ2h0IiwiYm90dG9tIiwicmVzZXRFZGdlcyIsIm1heERpc3RhbmNlIiwiZGlzdCIsInN5c3RlbSIsImxpbmVzIiwiY3JlYXRlRGVmYXVsdFdhbGtlcnMiLCJSZXBsZW5pc2htZW50U291cmNlIiwibW92ZVdhbGtlcnMiLCJoYW5kbGVDb2xsaXNpb25zIiwicHJ1bmVXYWxrZXJzIiwiYmFja2dyb3VuZCIsImdldENvbG9yU3RyaW5nRnJvbU9iamVjdCIsInNoYXBlIiwiZmlsbCIsInN0cm9rZSIsIm5vRmlsbCIsImJlZ2luU2hhcGUiLCJ2ZXJ0ZXgiLCJlbmRTaGFwZSIsImxpbmUiLCJwMSIsInAyIiwic3R1Y2siLCJub1N0cm9rZSIsImVsbGlwc2UiLCJkcmF3RnJhbWUiLCJyZWN0IiwiZGVsdGFzIiwiZGVsdGFYIiwicmFuZG9tIiwiZGVsdGFZIiwiZ2V0RGVsdGFzVG93YXJkcyIsIkZ1bmN0aW9uIiwiZHgiLCJkeSIsInJvdW5kIiwiYWdlIiwiYm9keVgiLCJib2R5WSIsInRhcmdldFgiLCJ0YXJnZXRZIiwiYXRhbjIiLCJzZWNvbmRCb2R5IiwiY29sbGlkZXMiLCJpbmRleCIsImVudHJpZXMiLCJvcmlnaW5hbFgiLCJvcmlnaW5hbFkiLCJjcmVhdGVQb2ludCIsImNyZWF0ZUNpcmNsZSIsImRpYW1ldGVyIiwiY3JlYXRlUG9seWdvbiIsInJhZGlhbnMiLCJyb3RhdGlvbiIsImNyZWF0ZVBhcnRpY2xlIiwibWF4UmFkaXVzIiwiY2VudGVyIiwiQ2lyY2xlQ2VudGVyIiwiQ2lyY2xlRGlhbWV0ZXJSYW5nZSIsImNyZWF0ZVdhbGtlciIsImNsdXN0ZXJUeXBlIiwicGFyYW1zTGlzdCIsIm51bVBhcnRpY2xlcyIsImNyZWF0ZUhvcml6b250YWxDbHVzdGVyV2FsbCIsImNyZWF0ZVZlcnRpY2FsQ2x1c3RlcldhbGwiLCJjb25jYXQiLCJjcmVhdGVDbHVzdGVyRnJvbVBhcmFtcyIsInlQb3MiLCJ4UG9zIiwicGF0aHMiLCJwYXRoIiwic29saWQiLCJjb2xvck9iamVjdCIsImNvbG9yU3RyaW5nIiwic3ZnIiwic2V0QXR0cmlidXRlIiwiYXBwZW5kQ2hpbGQiLCJjcmVhdGVDaXJjbGVFbEZyb21Cb2R5IiwiY3JlYXRlUGF0aEVsRnJvbVBvaW50cyIsImdldFBvaW50c0Zyb21Db29yZHMiLCJzdmdEb2NUeXBlIiwiaW1wbGVtZW50YXRpb24iLCJjcmVhdGVEb2N1bWVudFR5cGUiLCJzdmdEb2MiLCJjcmVhdGVEb2N1bWVudCIsInJlcGxhY2VDaGlsZCIsImRvY3VtZW50RWxlbWVudCIsInN2Z0RhdGEiLCJYTUxTZXJpYWxpemVyIiwic2VyaWFsaXplVG9TdHJpbmciLCJibG9iIiwiRGF0ZSIsIm5vdyIsInBvaW50c1N0cmluZyIsInBhdGhFbCIsImNpcmNsZUVsIiwiZXh0ZW5kU3RhdGljcyIsInNldFByb3RvdHlwZU9mIiwiX19wcm90b19fIiwiX19leHRlbmRzIiwiY29uc3RydWN0b3IiLCJyb3RhdGUiLCJhc3NlcnROdW1iZXJzIiwiYW5ub3RhdGVBcmNDb21tYW5kIiwibEFyY0ZsYWciLCJyWCIsInJZIiwieFJvdCIsInUiLCJwb3ciLCJfIiwibWF4IiwiTyIsImNYIiwiY1kiLCJwaGkxIiwicGhpMiIsImludGVyc2VjdGlvblVuaXRDaXJjbGVMaW5lIiwiU1ZHUGF0aERhdGFUcmFuc2Zvcm1lciIsIkRFRyIsImxlcnAiLCJhcmNBdCIsImJlemllclJvb3QiLCJwcUZvcm11bGEiLCJiZXppZXJBdCIsIk5hTiIsIlNWR1BhdGhEYXRhIiwiU01PT1RIX0NVUlZFX1RPIiwiQ1VSVkVfVE8iLCJTTU9PVEhfUVVBRF9UTyIsIlFVQURfVE8iLCJNT1ZFX1RPIiwiQ0xPU0VfUEFUSCIsIkhPUklaX0xJTkVfVE8iLCJMSU5FX1RPIiwiVkVSVF9MSU5FX1RPIiwiTiIsIkQiLCJQIiwiRSIsIkciLCJST1VORCIsIlRPX0FCUyIsIlRPX1JFTCIsIk5PUk1BTElaRV9IVloiLCJBUkMiLCJOT1JNQUxJWkVfU1QiLCJRVF9UT19DIiwiSU5GTyIsIlNBTklUSVpFIiwiTElORV9DT01NQU5EUyIsIk1BVFJJWCIsIlJPVEFURSIsIlRSQU5TTEFURSIsIlNDQUxFIiwiU0tFV19YIiwiYXRhbiIsIlNLRVdfWSIsIlhfQVhJU19TWU1NRVRSWSIsIllfQVhJU19TWU1NRVRSWSIsIkFfVE9fQyIsIm1pbiIsImNlaWwiLCJ0YW4iLCJhMmMiLCJBTk5PVEFURV9BUkNTIiwiQ0xPTkUiLCJDQUxDVUxBVEVfQk9VTkRTIiwibWF4WCIsIm1pblgiLCJtYXhZIiwibWluWSIsIkRSQVdJTkdfQ09NTUFORFMiLCJfYSIsIl9hJDEiLCJUcmFuc2Zvcm1hYmxlU1ZHIiwidHJhbnNmb3JtIiwidG9BYnMiLCJ0b1JlbCIsIm5vcm1hbGl6ZUhWWiIsIm5vcm1hbGl6ZVNUIiwicXRUb0MiLCJhVG9DIiwic2FuaXRpemUiLCJ0cmFuc2xhdGUiLCJtYXRyaXgiLCJza2V3WCIsInNrZXdZIiwieFN5bW1ldHJ5IiwieVN5bW1ldHJ5IiwiYW5ub3RhdGVBcmNzIiwiaXNXaGl0ZVNwYWNlIiwiaXNEaWdpdCIsImNoYXJDb2RlQXQiLCJTVkdQYXRoRGF0YVBhcnNlciQkMSIsImN1ck51bWJlciIsImN1ckNvbW1hbmRUeXBlIiwiY3VyQ29tbWFuZFJlbGF0aXZlIiwiY2FuUGFyc2VDb21tYW5kT3JDb21tYSIsImN1ck51bWJlckhhc0V4cCIsImN1ck51bWJlckhhc0V4cERpZ2l0cyIsImN1ck51bWJlckhhc0RlY2ltYWwiLCJjdXJBcmdzIiwiZmluaXNoIiwicGFyc2UiLCJTeW50YXhFcnJvciIsIk51bWJlciIsIkNPTU1BTkRfQVJHX0NPVU5UUyIsImdldFByb3RvdHlwZU9mIiwiYXBwbHkiLCJlbmNvZGUiLCJnZXRCb3VuZHMiLCJlbmNvZGVTVkdQYXRoJCQxIiwiU1ZHUGF0aERhdGEkMSIsImNvbnRlbnRzIiwiZG9jIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwibG9hZCIsInN2Z05vZGUiLCJpbnB1dFBhdGhzIiwicXVlcnlTZWxlY3RvckFsbCIsImN1cnJlbnRQYXRoIiwiaW5wdXRQYXRoIiwicGF0aERhdGEiLCJnZXRBdHRyaWJ1dGUiLCJwcmV2aW91c0Nvb3JkcyIsImxhc3RQb2ludCIsImh5cG90IiwiZGxhIiwic3ZnRmlsZXMiLCJwb2x5Z29ucyIsInN1cGVyc2hhcGUiLCJjdXJyZW50U1ZHRmlsZSIsInJlc2V0IiwicmVtb3ZlQWxsIiwiZmlsZSIsIlNWR0xvYWRlciIsImxvYWRGcm9tRmlsZUNvbnRlbnRzIiwiY3JlYXRlU2hhcGVzRnJvbVBhdGhzIiwiY3JlYXRlQ3VzdG9tU2hhcGVzRnJvbVNWRyIsInNldHVwIiwiY3JlYXRlQ2FudmFzIiwiY29sb3JNb2RlIiwiSFNCIiwiZWxsaXBzZU1vZGUiLCJDRU5URVIiLCJETEEiLCJTZXR0aW5ncyIsIml0ZXJhdGUiLCJ0ZXh0U2l6ZSIsInRleHRTdHlsZSIsIkJPTEQiLCJ0ZXh0IiwiTk9STUFMIiwia2V5UmVsZWFzZWQiLCJ0b2dnbGVQYXVzZSIsInRvZ2dsZVNob3dXYWxrZXJzIiwidG9nZ2xlU2hvd0NsdXN0ZXJzIiwidG9nZ2xlVXNlRnJhbWUiLCJ0b2dnbGVTaG93U2hhcGVzIiwicmVzdGFydFdvcmxkIiwidG9nZ2xlTGluZVJlbmRlcmluZ01vZGUiLCJleHBvcnQiXSwibWFwcGluZ3MiOiJhQUNFLElBQUlBLEVBQW1CLEdBR3ZCLFNBQVNDLEVBQW9CQyxHQUc1QixHQUFHRixFQUFpQkUsR0FD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cVEsSUFBSyxLQUNyQnJRLEVBQUdzUSxZQUFZdFEsRUFBR3VRLFFBR2xCakIsRUFBTSxJQUFJa0IsRUFBQSxFQUFJeFEsRUFBSXlRLEdBR2xCZCxLQUlGM1AsRUFBRzNPLEtBQU8sV0FDUmllLEVBQUlvQixVQUNKcEIsRUFBSWplLE9BY0YyTyxFQUFHOEIsS0FBSyxHQUNSOUIsRUFBR3dDLFdBRUh4QyxFQUFHMlEsU0FBUyxJQUNaM1EsRUFBRzRRLFVBQVU1USxFQUFHNlEsTUFDaEI3USxFQUFHOFEsS0FBSyxpQkFBa0IsR0FBSSxJQUU5QjlRLEVBQUc0USxVQUFVNVEsRUFBRytRLFFBQ2hCL1EsRUFBRzhCLEtBQUssS0FDUjlCLEVBQUc4USxLQUFLLDBHQUtHLEdBQUksS0FtQm5COVEsRUFBR2dSLFlBQWMsV0FDZixPQUFRaFIsRUFBRzlhLEtBQ1QsSUFBSyxJQUNIb3FCLEVBQUkyQixjQUNKLE1BRUYsSUFBSyxJQUNIM0IsRUFBSTRCLG9CQUNKLE1BRUYsSUFBSyxJQUNINUIsRUFBSTZCLHFCQUNKLE1BRUYsSUFBSyxJQUNIeEIsSUFDQSxNQUVGLElBQUssSUFDSEwsRUFBSThCLGlCQUNKekIsSUFDQSxNQUVGLElBQUssSUFDSEwsRUFBSStCLG1CQUNKQyxlQUNBLE1BRUYsSUFBSyxJQUNIaEMsRUFBSWlDLDBCQUNKLE1BRUYsSUFBSyxJQUNIakMsRUFBSWtDLFNBQ0osTUFFRixJQUFLLElBQ0g5QixFQUFpQkgsRUFBU0QsSUFDMUJLLElBQ0EsTUFFRixJQUFLLElBQ0hELEVBQWlCSCxFQUFTQyxTQUMxQkcsSUFDQSxNQUVGLElBQUssSUFDSEQsRUFBaUJILEVBQVNFLFdBQzFCRSIsImZpbGUiOiJzdmdJbnB1dC5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIgXHQvLyBUaGUgbW9kdWxlIGNhY2hlXG4gXHR2YXIgaW5zdGFsbGVkTW9kdWxlcyA9IHt9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSkge1xuIFx0XHRcdHJldHVybiBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXS5leHBvcnRzO1xuIFx0XHR9XG4gXHRcdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG4gXHRcdHZhciBtb2R1bGUgPSBpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSA9IHtcbiBcdFx0XHRpOiBtb2R1bGVJZCxcbiBcdFx0XHRsOiBmYWxzZSxcbiBcdFx0XHRleHBvcnRzOiB7fVxuIFx0XHR9O1xuXG4gXHRcdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuIFx0XHRtb2R1bGVzW21vZHVsZUlkXS5jYWxsKG1vZHVsZS5leHBvcnRzLCBtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuIFx0XHQvLyBGbGFnIHRoZSBtb2R1bGUgYXMgbG9hZGVkXG4gXHRcdG1vZHVsZS5sID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBkZWZpbmUgZ2V0dGVyIGZ1bmN0aW9uIGZvciBoYXJtb255IGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZCA9IGZ1bmN0aW9uKGV4cG9ydHMsIG5hbWUsIGdldHRlcikge1xuIFx0XHRpZighX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIG5hbWUpKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIG5hbWUsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBnZXR0ZXIgfSk7XG4gXHRcdH1cbiBcdH07XG5cbiBcdC8vIGRlZmluZSBfX2VzTW9kdWxlIG9uIGV4cG9ydHNcbiBcdF9fd2VicGFja19yZXF1aXJlX18uciA9IGZ1bmN0aW9uKGV4cG9ydHMpIHtcbiBcdFx0aWYodHlwZW9mIFN5bWJvbCAhPT0gJ3VuZGVmaW5lZCcgJiYgU3ltYm9sLnRvU3RyaW5nVGFnKSB7XG4gXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFN5bWJvbC50b1N0cmluZ1RhZywgeyB2YWx1ZTogJ01vZHVsZScgfSk7XG4gXHRcdH1cbiBcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICdfX2VzTW9kdWxlJywgeyB2YWx1ZTogdHJ1ZSB9KTtcbiBcdH07XG5cbiBcdC8vIGNyZWF0ZSBhIGZha2UgbmFtZXNwYWNlIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDE6IHZhbHVlIGlzIGEgbW9kdWxlIGlkLCByZXF1aXJlIGl0XG4gXHQvLyBtb2RlICYgMjogbWVyZ2UgYWxsIHByb3BlcnRpZXMgb2YgdmFsdWUgaW50byB0aGUgbnNcbiBcdC8vIG1vZGUgJiA0OiByZXR1cm4gdmFsdWUgd2hlbiBhbHJlYWR5IG5zIG9iamVjdFxuIFx0Ly8gbW9kZSAmIDh8MTogYmVoYXZlIGxpa2UgcmVxdWlyZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy50ID0gZnVuY3Rpb24odmFsdWUsIG1vZGUpIHtcbiBcdFx0aWYobW9kZSAmIDEpIHZhbHVlID0gX193ZWJwYWNrX3JlcXVpcmVfXyh2YWx1ZSk7XG4gXHRcdGlmKG1vZGUgJiA4KSByZXR1cm4gdmFsdWU7XG4gXHRcdGlmKChtb2RlICYgNCkgJiYgdHlwZW9mIHZhbHVlID09PSAnb2JqZWN0JyAmJiB2YWx1ZSAmJiB2YWx1ZS5fX2VzTW9kdWxlKSByZXR1cm4gdmFsdWU7XG4gXHRcdHZhciBucyA9IE9iamVjdC5jcmVhdGUobnVsbCk7XG4gXHRcdF9fd2VicGFja19yZXF1aXJlX18ucihucyk7XG4gXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShucywgJ2RlZmF1bHQnLCB7IGVudW1lcmFibGU6IHRydWUsIHZhbHVlOiB2YWx1ZSB9KTtcbiBcdFx0aWYobW9kZSAmIDIgJiYgdHlwZW9mIHZhbHVlICE9ICdzdHJpbmcnKSBmb3IodmFyIGtleSBpbiB2YWx1ZSkgX193ZWJwYWNrX3JlcXVpcmVfXy5kKG5zLCBrZXksIGZ1bmN0aW9uKGtleSkgeyByZXR1cm4gdmFsdWVba2V5XTsgfS5iaW5kKG51bGwsIGtleSkpO1xuIFx0XHRyZXR1cm4gbnM7XG4gXHR9O1xuXG4gXHQvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5uID0gZnVuY3Rpb24obW9kdWxlKSB7XG4gXHRcdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuIFx0XHRcdGZ1bmN0aW9uIGdldERlZmF1bHQoKSB7IHJldHVybiBtb2R1bGVbJ2RlZmF1bHQnXTsgfSA6XG4gXHRcdFx0ZnVuY3Rpb24gZ2V0TW9kdWxlRXhwb3J0cygpIHsgcmV0dXJuIG1vZHVsZTsgfTtcbiBcdFx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgJ2EnLCBnZXR0ZXIpO1xuIFx0XHRyZXR1cm4gZ2V0dGVyO1xuIFx0fTtcblxuIFx0Ly8gT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSBmdW5jdGlvbihvYmplY3QsIHByb3BlcnR5KSB7IHJldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwob2JqZWN0LCBwcm9wZXJ0eSk7IH07XG5cbiBcdC8vIF9fd2VicGFja19wdWJsaWNfcGF0aF9fXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBcIlwiO1xuXG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oX193ZWJwYWNrX3JlcXVpcmVfXy5zID0gMTIpO1xuIiwiKGZ1bmN0aW9uKGEsYil7aWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSxiKTtlbHNlIGlmKFwidW5kZWZpbmVkXCIhPXR5cGVvZiBleHBvcnRzKWIoKTtlbHNle2IoKSxhLkZpbGVTYXZlcj17ZXhwb3J0czp7fX0uZXhwb3J0c319KSh0aGlzLGZ1bmN0aW9uKCl7XCJ1c2Ugc3RyaWN0XCI7ZnVuY3Rpb24gYihhLGIpe3JldHVyblwidW5kZWZpbmVkXCI9PXR5cGVvZiBiP2I9e2F1dG9Cb206ITF9Olwib2JqZWN0XCIhPXR5cGVvZiBiJiYoY29uc29sZS53YXJuKFwiRGVwcmljYXRlZDogRXhwZWN0ZWQgdGhpcmQgYXJndW1lbnQgdG8gYmUgYSBvYmplY3RcIiksYj17YXV0b0JvbTohYn0pLGIuYXV0b0JvbSYmL15cXHMqKD86dGV4dFxcL1xcUyp8YXBwbGljYXRpb25cXC94bWx8XFxTKlxcL1xcUypcXCt4bWwpXFxzKjsuKmNoYXJzZXRcXHMqPVxccyp1dGYtOC9pLnRlc3QoYS50eXBlKT9uZXcgQmxvYihbXCJcXHVGRUZGXCIsYV0se3R5cGU6YS50eXBlfSk6YX1mdW5jdGlvbiBjKGIsYyxkKXt2YXIgZT1uZXcgWE1MSHR0cFJlcXVlc3Q7ZS5vcGVuKFwiR0VUXCIsYiksZS5yZXNwb25zZVR5cGU9XCJibG9iXCIsZS5vbmxvYWQ9ZnVuY3Rpb24oKXthKGUucmVzcG9uc2UsYyxkKX0sZS5vbmVycm9yPWZ1bmN0aW9uKCl7Y29uc29sZS5lcnJvcihcImNvdWxkIG5vdCBkb3dubG9hZCBmaWxlXCIpfSxlLnNlbmQoKX1mdW5jdGlvbiBkKGEpe3ZhciBiPW5ldyBYTUxIdHRwUmVxdWVzdDtyZXR1cm4gYi5vcGVuKFwiSEVBRFwiLGEsITEpLGIuc2VuZCgpLDIwMDw9Yi5zdGF0dXMmJjI5OT49Yi5zdGF0dXN9ZnVuY3Rpb24gZShhKXt0cnl7YS5kaXNwYXRjaEV2ZW50KG5ldyBNb3VzZUV2ZW50KFwiY2xpY2tcIikpfWNhdGNoKGMpe3ZhciBiPWRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiTW91c2VFdmVudHNcIik7Yi5pbml0TW91c2VFdmVudChcImNsaWNrXCIsITAsITAsd2luZG93LDAsMCwwLDgwLDIwLCExLCExLCExLCExLDAsbnVsbCksYS5kaXNwYXRjaEV2ZW50KGIpfX12YXIgZj1cIm9iamVjdFwiPT10eXBlb2Ygd2luZG93JiZ3aW5kb3cud2luZG93PT09d2luZG93P3dpbmRvdzpcIm9iamVjdFwiPT10eXBlb2Ygc2VsZiYmc2VsZi5zZWxmPT09c2VsZj9zZWxmOlwib2JqZWN0XCI9PXR5cGVvZiBnbG9iYWwmJmdsb2JhbC5nbG9iYWw9PT1nbG9iYWw/Z2xvYmFsOnZvaWQgMCxhPWYuc2F2ZUFzfHxcIm9iamVjdFwiIT10eXBlb2Ygd2luZG93fHx3aW5kb3chPT1mP2Z1bmN0aW9uKCl7fTpcImRvd25sb2FkXCJpbiBIVE1MQW5jaG9yRWxlbWVudC5wcm90b3R5cGU/ZnVuY3Rpb24oYixnLGgpe3ZhciBpPWYuVVJMfHxmLndlYmtpdFVSTCxqPWRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJhXCIpO2c9Z3x8Yi5uYW1lfHxcImRvd25sb2FkXCIsai5kb3dubG9hZD1nLGoucmVsPVwibm9vcGVuZXJcIixcInN0cmluZ1wiPT10eXBlb2YgYj8oai5ocmVmPWIsai5vcmlnaW49PT1sb2NhdGlvbi5vcmlnaW4/ZShqKTpkKGouaHJlZik/YyhiLGcsaCk6ZShqLGoudGFyZ2V0PVwiX2JsYW5rXCIpKTooai5ocmVmPWkuY3JlYXRlT2JqZWN0VVJMKGIpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtpLnJldm9rZU9iamVjdFVSTChqLmhyZWYpfSw0RTQpLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKGopfSwwKSl9OlwibXNTYXZlT3JPcGVuQmxvYlwiaW4gbmF2aWdhdG9yP2Z1bmN0aW9uKGYsZyxoKXtpZihnPWd8fGYubmFtZXx8XCJkb3dubG9hZFwiLFwic3RyaW5nXCIhPXR5cGVvZiBmKW5hdmlnYXRvci5tc1NhdmVPck9wZW5CbG9iKGIoZixoKSxnKTtlbHNlIGlmKGQoZikpYyhmLGcsaCk7ZWxzZXt2YXIgaT1kb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiYVwiKTtpLmhyZWY9ZixpLnRhcmdldD1cIl9ibGFua1wiLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtlKGkpfSl9fTpmdW5jdGlvbihhLGIsZCxlKXtpZihlPWV8fG9wZW4oXCJcIixcIl9ibGFua1wiKSxlJiYoZS5kb2N1bWVudC50aXRsZT1lLmRvY3VtZW50LmJvZHkuaW5uZXJUZXh0PVwiZG93bmxvYWRpbmcuLi5cIiksXCJzdHJpbmdcIj09dHlwZW9mIGEpcmV0dXJuIGMoYSxiLGQpO3ZhciBnPVwiYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtXCI9PT1hLnR5cGUsaD0vY29uc3RydWN0b3IvaS50ZXN0KGYuSFRNTEVsZW1lbnQpfHxmLnNhZmFyaSxpPS9DcmlPU1xcL1tcXGRdKy8udGVzdChuYXZpZ2F0b3IudXNlckFnZW50KTtpZigoaXx8ZyYmaCkmJlwib2JqZWN0XCI9PXR5cGVvZiBGaWxlUmVhZGVyKXt2YXIgaj1uZXcgRmlsZVJlYWRlcjtqLm9ubG9hZGVuZD1mdW5jdGlvbigpe3ZhciBhPWoucmVzdWx0O2E9aT9hOmEucmVwbGFjZSgvXmRhdGE6W147XSo7LyxcImRhdGE6YXR0YWNobWVudC9maWxlO1wiKSxlP2UubG9jYXRpb24uaHJlZj1hOmxvY2F0aW9uPWEsZT1udWxsfSxqLnJlYWRBc0RhdGFVUkwoYSl9ZWxzZXt2YXIgaz1mLlVSTHx8Zi53ZWJraXRVUkwsbD1rLmNyZWF0ZU9iamVjdFVSTChhKTtlP2UubG9jYXRpb249bDpsb2NhdGlvbi5ocmVmPWwsZT1udWxsLHNldFRpbWVvdXQoZnVuY3Rpb24oKXtrLnJldm9rZU9iamVjdFVSTChsKX0sNEU0KX19O2Yuc2F2ZUFzPWEuc2F2ZUFzPWEsXCJ1bmRlZmluZWRcIiE9dHlwZW9mIG1vZHVsZSYmKG1vZHVsZS5leHBvcnRzPWEpfSk7XG5cbi8vIyBzb3VyY2VNYXBwaW5nVVJMPUZpbGVTYXZlci5taW4uanMubWFwIiwiLyoqIEBtb2R1bGUgRGVmYXVsdHMgKi9cclxuZXhwb3J0IGRlZmF1bHQge1xyXG4gIC8qKiBcclxuICAgKiBEaWFtZXRlciBvZiBhbGwgcGFydGljbGVzIFxyXG4gICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICovIFxyXG4gIENpcmNsZURpYW1ldGVyOiA1LFxyXG5cclxuICAvKipcclxuICAgKiBJbml0aWFsIGNsdXN0ZXIgcGF0dGVybiwgaWYgbm9uZSBpcyBwcm92aWRlZCB0aHJvdWdoIGxvY2FsIFNldHRpbmdzXHJcbiAgICogQHR5cGUge3N0cmluZ30sXHJcbiAgICovXHJcbiAgSW5pdGlhbENsdXN0ZXJUeXBlOiAnUmFuZG9tJyxcclxuXHJcbiAgLyoqXHJcbiAgICogTG9jYXRpb24gb2YgbmV3IHdhbGtlcnNcclxuICAgKiBAdHlwZSB7c3RyaW5nfVxyXG4gICAqL1xyXG4gIFdhbGtlclNvdXJjZTogJ1JhbmRvbScsXHJcblxyXG4gIC8qKlxyXG4gICAqIE51bWJlciBvZiB3YWxrZXJzIGFsbG93ZWQgaW4gZWFjaCBpdGVyYXRpb25cclxuICAgKiBAdHlwZSB7bnVtYmVyfVxyXG4gICAqL1xyXG4gIE1heFdhbGtlcnM6IDUwMDAsXHJcblxyXG4gIC8qKlxyXG4gICAqIERpc3RhbmNlIHRvIGVkZ2VzIHRvIHNwYXduIG5ldyB3YWxrZXJzIHdpdGhpbiB3aGVuIHVzaW5nICdFZGdlcycgZm9yIFdhbGtlclNvdXJjZVxyXG4gICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICovXHJcbiAgRWRnZU1hcmdpbjogMCxcclxuXHJcblxyXG4gIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgLy8gIFBSVU5JTkcgQkVIQVZJT1JTXHJcbiAgLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlIHdhbGtlcnMgdGhhdCBoYXZlIGJlZW4gd2FuZGVyaW5nIGFyb3VuZCB0b28gbXVjaFxyXG4gICAqIEB0eXBlIHtib29sZWFufVxyXG4gICAqL1xyXG4gIFBydW5lT2xkV2Fsa2VyczogZmFsc2UsXHJcblxyXG4gIC8qKlxyXG4gICAqIE1heGltdW0gd2Fsa2VyIGFnZSBiZWZvcmUgaXQgaXMgcmVtb3ZlZCwgaWYgYFBydW5lT2xkV2Fsa2Vyc2AgaXMgYHRydWVgLCBpbiBudW1iZXJzIG9mIGl0ZXJhdGlvbnNcclxuICAgKiBAdHlwZSB7bnVtYmVyfVxyXG4gICAqL1xyXG4gIE1heEFnZTogMzAsXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogU3Bhd24gbmV3IHdhbGtlcnMgd2hlbiBvbGQgb25lcyBhcmUgY29udmVydGVkIGludG8gY2x1c3RlcmVkIHBhcnRpY2xlcyBvciBwcnVuZWRcclxuICAgKiBAdHlwZSB7Ym9vbGVhbn1cclxuICAgKi9cclxuICBSZXBsZW5pc2hXYWxrZXJzOiBmYWxzZSxcclxuXHJcbiAgLyoqXHJcbiAgICogUmVtb3ZlIHdhbGtlcnMgdGhhdCBoYXZlIHN0cmF5ZWQgdG9vIGZhciBmcm9tIHRoZWlyIG9yaWdpbmFsIHBvc2l0aW9uc1xyXG4gICAqIEB0eXBlIHtib29sZWFufVxyXG4gICAqL1xyXG4gIFBydW5lRGlzdGFudFdhbGtlcnM6IGZhbHNlLFxyXG5cclxuICAvKipcclxuICAgKiBNYXhpbXVtIGRpc3RhbmNlIGJlZm9yZSBhIHdhbGtlciBpcyByZW1vdmVkLCBpZiBgUHJ1bmVEaXN0YW50V2Fsa2Vyc2AgaXMgZW5hYmxlZFxyXG4gICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICovXHJcbiAgTWF4V2FuZGVyRGlzdGFuY2U6IDIwLFxyXG5cclxuICBcclxuICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gIC8vICBWQVJJQUJMRSBESUFNRVRFUiBFRkZFQ1RTXHJcbiAgLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cclxuICAvKipcclxuICAgKiBWYXJ5IGRpYW1ldGVycyBieSBkaXN0YW5jZSB0byBjZW50ZXJcclxuICAgKiBAdHlwZSB7Ym9vbGVhbn1cclxuICAgKi9cclxuICBWYXJ5RGlhbWV0ZXJCeURpc3RhbmNlOiBmYWxzZSxcclxuXHJcbiAgLyoqXHJcbiAgICogVmFyeSBkaWFtZXRlcnMgcmFuZG9tbHlcclxuICAgKiBAdHlwZSB7Ym9vbGVhbn1cclxuICAgKi9cclxuICBWYXJ5RGlhbWV0ZXJSYW5kb21seTogZmFsc2UsXHJcblxyXG5cclxuICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gIC8vICBWSVNJQklMSVRZIE9GIE9CSkVDVFNcclxuICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuICAvKipcclxuICAgKiBWaXNpYmlsaXR5IG9mIGNsdXN0ZXJlZCBwYXJ0aWNsZXNcclxuICAgKiBAdHlwZSB7Ym9vbGVhbn1cclxuICAgKi9cclxuICBTaG93Q2x1c3RlcnM6IHRydWUsXHJcbiAgXHJcbiAgLyoqXHJcbiAgICogVmlzaWJpbGl0eSBvZiB3YWxrZXJzXHJcbiAgICogQHR5cGUge2Jvb2xlYW59XHJcbiAgICovXHJcbiAgU2hvd1dhbGtlcnM6IHRydWUsXHJcblxyXG4gIC8qKlxyXG4gICAqIFZpc2liaWxpdHkgb2YgaW1wb3J0ZWQgc2hhcGVzXHJcbiAgICogQHR5cGUge2Jvb2xlYW59XHJcbiAgICovXHJcbiAgU2hvd1NoYXBlczogdHJ1ZSxcclxuXHJcblxyXG4gIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgLy8gIEJJQVMgRUZGRUNUXHJcbiAgLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gXHJcblxyXG4gIC8qKlxyXG4gICAqIERpcmVjdGlvbiB0byBtb3ZlIGFsbCB3YWxrZXJzIGVhY2ggaXRlcmF0aW9uLiBDYW4gYmUgVG9wLCBCb3R0b20sIExlZnQsIFJpZ2h0LCBDZW50ZXIsIEVkZ2VzLCBFcXVhdG9yLCBvciBNZXJpZGlhbi4gQWxsIG90aGVyIHZhbHVlcywgaW5jbHVkaW5nIG5vdGhpbmcsIGRpc2FibGUgYmlhc1xyXG4gICAqIEB0eXBlIHtzdHJpbmd9XHJcbiAgICovXHJcbiAgQmlhc1Rvd2FyZHM6ICcnLFxyXG5cclxuICAvKipcclxuICAgKiBNYWduaXR1ZGUgb2Ygd2Fsa2VyIGJpYXMgZm9yY2UuIEhpZ2hlciB2YWx1ZXMgbWVhbiBmYXN0ZXIgbW92ZW1lbnQuXHJcbiAgICogQHR5cGUge251bWJlcn1cclxuICAgKi9cclxuICBCaWFzRm9yY2U6IDEsXHJcblxyXG4gIC8qKlxyXG4gICAqIEVuYWJsZSBlYWNoIHdhbGtlciB0byBoYXZlIGl0J3Mgb3duIGJpYXMgdG93YXJkcyBhIHBvaW50XHJcbiAgICogQHR5cGUge2Jvb2xlYW59XHJcbiAgICovXHJcbiAgVXNlUGVyV2Fsa2VyQmlhczogdHJ1ZSxcclxuXHJcblxyXG4gIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XHJcbiAgLy8gIEZSQU1FXHJcbiAgLy89PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gXHJcblxyXG4gIC8qKlxyXG4gICAqIENvbnN0cmFpbiBza2V0Y2ggdG8gYSBib3ggY2VudGVyZWQgb24gdGhlIHNjcmVlblxyXG4gICAqIEB0eXBlIHtib29sZWFufVxyXG4gICAqL1xyXG4gIFVzZUZyYW1lOiB0cnVlLFxyXG5cclxuICAvKipcclxuICAgKiBTaXplIG9mIGZyYW1lLiBDYW4gYmUgYSBzaW5nbGUgbnVtYmVyLCBvciBhbiBhcnJheSBvZiB0d28gbnVtYmVycyBmb3Igd2lkdGggYW5kIGhlaWdodFxyXG4gICAqIEB0eXBlIHtudW1iZXJ9XHJcbiAgICovXHJcbiAgRnJhbWVTaXplOiA5MDAsXHJcblxyXG5cclxuICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gIC8vICBSRU5ERVJJTkcgRUZGRUNUU1xyXG4gIC8vPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09IFxyXG5cclxuICAvKipcclxuICAgKiBFbmFibGUgdGhlIGdlbmVyYXRpb24gb2YgbGluZXMgYmV0d2VlbiBuZXdseS1jbHVzdGVyZWQgcGFydGljbGVzLiBSZXF1aXJlZCBmb3IgXCJMaW5lc1wiIHJlbmRlciBtb2RlLiBDYW4gYmUgZGlzYWJsZWQgZm9yIHBlcmZvcm1hbmNlIGlmIG5lZWRlZC5cclxuICAgKiBAdHlwZSB7Ym9vbGVhbn1cclxuICAgKi9cclxuICBDYXB0dXJlTGluZXM6IHRydWUsXHJcblxyXG4gIC8qKlxyXG4gICAqIERyYXdpbmcgbWV0aG9kLiBDYW4gYmUgYFNoYXBlc2Agb3IgYExpbmVzYC5cclxuICAgKiBAdHlwZSB7c3RyaW5nfVxyXG4gICAqL1xyXG4gIFJlbmRlck1vZGU6ICdTaGFwZXMnLFxyXG5cclxuICAvKipcclxuICAgKiBEcmF3IHN0cm9rZSBhcm91bmQgY2lyY2xlcy9wb2x5Z29uc1xyXG4gICAqIEB0eXBlIHtib29sZWFufVxyXG4gICAqL1xyXG4gIFVzZVN0cm9rZTogZmFsc2UsXHJcblxyXG5cclxuICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG4gIC8vICBDT0xPUlNcclxuICAvLz09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxyXG5cclxuICAvKipcclxuICAgKiBBcHBseSB0aGUgY29sb3JzIGRlZmluZWQgYmVsb3cuIGBmYWxzZWAgbWVhbnMgYmxhY2sgYW5kIHdoaXRlIG9ubHkuXHJcbiAgICogQHR5cGUge2Jvb2xlYW59XHJcbiAgICovXHJcbiAgVXNlQ29sb3JzOiBmYWxzZSxcclxuXHJcbiAgLyoqXHJcbiAgICogQ2FudmFzIGJhY2tncm91bmQgY29sb3JcclxuICAgKiBAdHlwZSB7b2JqZWN0fVxyXG4gICAqL1xyXG4gIEJhY2tncm91bmRDb2xvcjoge1xyXG4gICAgaDogMjMwLFxyXG4gICAgczogMjAsXHJcbiAgICBiOiA0MFxyXG4gIH0sXHJcblxyXG4gIC8qKlxyXG4gICAqIENvbG9yIG9mIHJhbmRvbWx5LW1vdmluZyBwYXJ0aWNsZXMgKHdhbGtlcnMpLCB3aGVuIHZpc2libGVcclxuICAgKiBAdHlwZSB7b2JqZWN0fVxyXG4gICAqL1xyXG4gIFdhbGtlckNvbG9yOiB7XHJcbiAgICBoOiAyMDAsXHJcbiAgICBzOiAzMCxcclxuICAgIGI6IDQ0XHJcbiAgfSxcclxuICBcclxuICAvKipcclxuICAgKiBDb2xvciBvZiBjbHVzdGVyZWQgcGFydGljbGVzLCB3aGVuIHZpc2libGVcclxuICAgKiBAdHlwZSB7b2JqZWN0fVxyXG4gICAqL1xyXG4gIENsdXN0ZXJDb2xvcjoge1xyXG4gICAgaDogMzAsXHJcbiAgICBzOiA3MCxcclxuICAgIGI6IDgwICBcclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiBDb2xvciBvZiBjdXN0b20gaW1wb3J0ZWQgU1ZHIHNoYXBlcywgd2hlbiB2aXNpYmxlXHJcbiAgICogQHR5cGUge29iamVjdH1cclxuICAgKi9cclxuICBTaGFwZUNvbG9yOiB7XHJcbiAgICBoOiAxMDAsXHJcbiAgICBzOiA1MCxcclxuICAgIGI6IDgwXHJcbiAgfSxcclxuXHJcbiAgLyoqXHJcbiAgICogQ29sb3Igb2YgbGluZXMgd2hlbiBSZW5kZXJNb2RlIGlzIHNldCB0byAnTGluZXMnXHJcbiAgICogQHR5cGUge29iamVjdH1cclxuICAgKi9cclxuICBMaW5lQ29sb3I6IHtcclxuICAgIGg6IDEwLFxyXG4gICAgczogNzAsXHJcbiAgICBiOiAxMDBcclxuICB9LFxyXG5cclxuICAvKipcclxuICAgKiBDb2xvciBvZiBib3VuZGluZyBmcmFtZSwgd2hlbiBlbmFibGVkXHJcbiAgICogQHR5cGUge29iamVjdH1cclxuICAgKi9cclxuICBGcmFtZUNvbG9yOiB7XHJcbiAgICBoOiAwLFxyXG4gICAgczogMTAwLFxyXG4gICAgYjogMTAwXHJcbiAgfVxyXG4gIFxyXG59OyIsIi8qKlxuICogQHByaXZhdGVcbiAqL1xuY29uc3QgYnJhbmNoX3Bvb2wgPSBbXTtcblxuLyoqXG4gKiBBIGJyYW5jaCB3aXRoaW4gYSBCVkhcbiAqIEBjbGFzc1xuICogQHByaXZhdGVcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQlZIQnJhbmNoIHtcblx0LyoqXG5cdCAqIEBjb25zdHJ1Y3RvclxuXHQgKi9cblx0Y29uc3RydWN0b3IoKSB7XG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYnZoX3BhcmVudCA9IG51bGw7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9idmhfYnJhbmNoID0gdHJ1ZTtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX2J2aF9sZWZ0ID0gbnVsbDtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX2J2aF9yaWdodCA9IG51bGw7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9idmhfc29ydCA9IDA7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9idmhfbWluX3ggPSAwO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYnZoX21pbl95ID0gMDtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX2J2aF9tYXhfeCA9IDA7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9idmhfbWF4X3kgPSAwO1xuXHR9XG5cblx0LyoqXG5cdCAqIFJldHVybnMgYSBicmFuY2ggZnJvbSB0aGUgYnJhbmNoIHBvb2wgb3IgY3JlYXRlcyBhIG5ldyBicmFuY2hcblx0ICogQHJldHVybnMge0JWSEJyYW5jaH1cblx0ICovXG5cdHN0YXRpYyBnZXRCcmFuY2goKSB7XG5cdFx0aWYoYnJhbmNoX3Bvb2wubGVuZ3RoKSB7XG5cdFx0XHRyZXR1cm4gYnJhbmNoX3Bvb2wucG9wKCk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG5ldyBCVkhCcmFuY2goKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZWxlYXNlcyBhIGJyYW5jaCBiYWNrIGludG8gdGhlIGJyYW5jaCBwb29sXG5cdCAqIEBwYXJhbSB7QlZIQnJhbmNofSBicmFuY2ggVGhlIGJyYW5jaCB0byByZWxlYXNlXG5cdCAqL1xuXHRzdGF0aWMgcmVsZWFzZUJyYW5jaChicmFuY2gpIHtcblx0XHRicmFuY2hfcG9vbC5wdXNoKGJyYW5jaCk7XG5cdH1cblxuXHQvKipcblx0ICogU29ydGluZyBjYWxsYmFjayB1c2VkIHRvIHNvcnQgYnJhbmNoZXMgYnkgZGVlcGVzdCBmaXJzdFxuXHQgKiBAcGFyYW0ge0JWSEJyYW5jaH0gYSBUaGUgZmlyc3QgYnJhbmNoXG5cdCAqIEBwYXJhbSB7QlZIQnJhbmNofSBiIFRoZSBzZWNvbmQgYnJhbmNoXG5cdCAqIEByZXR1cm5zIHtOdW1iZXJ9XG5cdCAqL1xuXHRzdGF0aWMgc29ydEJyYW5jaGVzKGEsIGIpIHtcblx0XHRyZXR1cm4gYS5zb3J0ID4gYi5zb3J0ID8gLTEgOiAxO1xuXHR9XG59O1xuIiwiaW1wb3J0IEJWSEJyYW5jaCBmcm9tICcuL0JWSEJyYW5jaC5tanMnO1xuXG4vKipcbiAqIEEgQm91bmRpbmcgVm9sdW1lIEhpZXJhcmNoeSAoQlZIKSB1c2VkIHRvIGZpbmQgcG90ZW50aWFsIGNvbGxpc2lvbnMgcXVpY2tseVxuICogQGNsYXNzXG4gKiBAcHJpdmF0ZVxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCVkgge1xuXHQvKipcblx0ICogQGNvbnN0cnVjdG9yXG5cdCAqL1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9oaWVyYXJjaHkgPSBudWxsO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYm9kaWVzID0gW107XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9kaXJ0eV9icmFuY2hlcyA9IFtdO1xuXHR9XG5cblx0LyoqXG5cdCAqIEluc2VydHMgYSBib2R5IGludG8gdGhlIEJWSFxuXHQgKiBAcGFyYW0ge0NpcmNsZXxQb2x5Z29ufFBvaW50fSBib2R5IFRoZSBib2R5IHRvIGluc2VydFxuXHQgKiBAcGFyYW0ge0Jvb2xlYW59IFt1cGRhdGluZyA9IGZhbHNlXSBTZXQgdG8gdHJ1ZSBpZiB0aGUgYm9keSBhbHJlYWR5IGV4aXN0cyBpbiB0aGUgQlZIICh1c2VkIGludGVybmFsbHkgd2hlbiB1cGRhdGluZyB0aGUgYm9keSdzIHBvc2l0aW9uKVxuXHQgKi9cblx0aW5zZXJ0KGJvZHksIHVwZGF0aW5nID0gZmFsc2UpIHtcblx0XHRpZighdXBkYXRpbmcpIHtcblx0XHRcdGNvbnN0IGJ2aCA9IGJvZHkuX2J2aDtcblxuXHRcdFx0aWYoYnZoICYmIGJ2aCAhPT0gdGhpcykge1xuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ0JvZHkgYmVsb25ncyB0byBhbm90aGVyIGNvbGxpc2lvbiBzeXN0ZW0nKTtcblx0XHRcdH1cblxuXHRcdFx0Ym9keS5fYnZoID0gdGhpcztcblx0XHRcdHRoaXMuX2JvZGllcy5wdXNoKGJvZHkpO1xuXHRcdH1cblxuXHRcdGNvbnN0IHBvbHlnb24gPSBib2R5Ll9wb2x5Z29uO1xuXHRcdGNvbnN0IGJvZHlfeCAgPSBib2R5Lng7XG5cdFx0Y29uc3QgYm9keV95ICA9IGJvZHkueTtcblxuXHRcdGlmKHBvbHlnb24pIHtcblx0XHRcdGlmKFxuXHRcdFx0XHRib2R5Ll9kaXJ0eV9jb29yZHMgfHxcblx0XHRcdFx0Ym9keS54ICAgICAgICE9PSBib2R5Ll94IHx8XG5cdFx0XHRcdGJvZHkueSAgICAgICAhPT0gYm9keS5feSB8fFxuXHRcdFx0XHRib2R5LmFuZ2xlICAgIT09IGJvZHkuX2FuZ2xlIHx8XG5cdFx0XHRcdGJvZHkuc2NhbGVfeCAhPT0gYm9keS5fc2NhbGVfeCB8fFxuXHRcdFx0XHRib2R5LnNjYWxlX3kgIT09IGJvZHkuX3NjYWxlX3lcblx0XHRcdCkge1xuXHRcdFx0XHRib2R5Ll9jYWxjdWxhdGVDb29yZHMoKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRjb25zdCBwYWRkaW5nICAgID0gYm9keS5fYnZoX3BhZGRpbmc7XG5cdFx0Y29uc3QgcmFkaXVzICAgICA9IHBvbHlnb24gPyAwIDogYm9keS5yYWRpdXMgKiBib2R5LnNjYWxlO1xuXHRcdGNvbnN0IGJvZHlfbWluX3ggPSAocG9seWdvbiA/IGJvZHkuX21pbl94IDogYm9keV94IC0gcmFkaXVzKSAtIHBhZGRpbmc7XG5cdFx0Y29uc3QgYm9keV9taW5feSA9IChwb2x5Z29uID8gYm9keS5fbWluX3kgOiBib2R5X3kgLSByYWRpdXMpIC0gcGFkZGluZztcblx0XHRjb25zdCBib2R5X21heF94ID0gKHBvbHlnb24gPyBib2R5Ll9tYXhfeCA6IGJvZHlfeCArIHJhZGl1cykgKyBwYWRkaW5nO1xuXHRcdGNvbnN0IGJvZHlfbWF4X3kgPSAocG9seWdvbiA/IGJvZHkuX21heF95IDogYm9keV95ICsgcmFkaXVzKSArIHBhZGRpbmc7XG5cblx0XHRib2R5Ll9idmhfbWluX3ggPSBib2R5X21pbl94O1xuXHRcdGJvZHkuX2J2aF9taW5feSA9IGJvZHlfbWluX3k7XG5cdFx0Ym9keS5fYnZoX21heF94ID0gYm9keV9tYXhfeDtcblx0XHRib2R5Ll9idmhfbWF4X3kgPSBib2R5X21heF95O1xuXG5cdFx0bGV0IGN1cnJlbnQgPSB0aGlzLl9oaWVyYXJjaHk7XG5cdFx0bGV0IHNvcnQgICAgPSAwO1xuXG5cdFx0aWYoIWN1cnJlbnQpIHtcblx0XHRcdHRoaXMuX2hpZXJhcmNoeSA9IGJvZHk7XG5cdFx0fVxuXHRcdGVsc2Uge1xuXHRcdFx0d2hpbGUodHJ1ZSkge1xuXHRcdFx0XHQvLyBCcmFuY2hcblx0XHRcdFx0aWYoY3VycmVudC5fYnZoX2JyYW5jaCkge1xuXHRcdFx0XHRcdGNvbnN0IGxlZnQgICAgICAgICAgICA9IGN1cnJlbnQuX2J2aF9sZWZ0O1xuXHRcdFx0XHRcdGNvbnN0IGxlZnRfbWluX3kgICAgICA9IGxlZnQuX2J2aF9taW5feTtcblx0XHRcdFx0XHRjb25zdCBsZWZ0X21heF94ICAgICAgPSBsZWZ0Ll9idmhfbWF4X3g7XG5cdFx0XHRcdFx0Y29uc3QgbGVmdF9tYXhfeSAgICAgID0gbGVmdC5fYnZoX21heF95O1xuXHRcdFx0XHRcdGNvbnN0IGxlZnRfbmV3X21pbl94ICA9IGJvZHlfbWluX3ggPCBsZWZ0Ll9idmhfbWluX3ggPyBib2R5X21pbl94IDogbGVmdC5fYnZoX21pbl94O1xuXHRcdFx0XHRcdGNvbnN0IGxlZnRfbmV3X21pbl95ICA9IGJvZHlfbWluX3kgPCBsZWZ0X21pbl95ID8gYm9keV9taW5feSA6IGxlZnRfbWluX3k7XG5cdFx0XHRcdFx0Y29uc3QgbGVmdF9uZXdfbWF4X3ggID0gYm9keV9tYXhfeCA+IGxlZnRfbWF4X3ggPyBib2R5X21heF94IDogbGVmdF9tYXhfeDtcblx0XHRcdFx0XHRjb25zdCBsZWZ0X25ld19tYXhfeSAgPSBib2R5X21heF95ID4gbGVmdF9tYXhfeSA/IGJvZHlfbWF4X3kgOiBsZWZ0X21heF95O1xuXHRcdFx0XHRcdGNvbnN0IGxlZnRfdm9sdW1lICAgICA9IChsZWZ0X21heF94IC0gbGVmdC5fYnZoX21pbl94KSAqIChsZWZ0X21heF95IC0gbGVmdF9taW5feSk7XG5cdFx0XHRcdFx0Y29uc3QgbGVmdF9uZXdfdm9sdW1lID0gKGxlZnRfbmV3X21heF94IC0gbGVmdF9uZXdfbWluX3gpICogKGxlZnRfbmV3X21heF95IC0gbGVmdF9uZXdfbWluX3kpO1xuXHRcdFx0XHRcdGNvbnN0IGxlZnRfZGlmZmVyZW5jZSA9IGxlZnRfbmV3X3ZvbHVtZSAtIGxlZnRfdm9sdW1lO1xuXG5cdFx0XHRcdFx0Y29uc3QgcmlnaHQgICAgICAgICAgICA9IGN1cnJlbnQuX2J2aF9yaWdodDtcblx0XHRcdFx0XHRjb25zdCByaWdodF9taW5feCAgICAgID0gcmlnaHQuX2J2aF9taW5feDtcblx0XHRcdFx0XHRjb25zdCByaWdodF9taW5feSAgICAgID0gcmlnaHQuX2J2aF9taW5feTtcblx0XHRcdFx0XHRjb25zdCByaWdodF9tYXhfeCAgICAgID0gcmlnaHQuX2J2aF9tYXhfeDtcblx0XHRcdFx0XHRjb25zdCByaWdodF9tYXhfeSAgICAgID0gcmlnaHQuX2J2aF9tYXhfeTtcblx0XHRcdFx0XHRjb25zdCByaWdodF9uZXdfbWluX3ggID0gYm9keV9taW5feCA8IHJpZ2h0X21pbl94ID8gYm9keV9taW5feCA6IHJpZ2h0X21pbl94O1xuXHRcdFx0XHRcdGNvbnN0IHJpZ2h0X25ld19taW5feSAgPSBib2R5X21pbl95IDwgcmlnaHRfbWluX3kgPyBib2R5X21pbl95IDogcmlnaHRfbWluX3k7XG5cdFx0XHRcdFx0Y29uc3QgcmlnaHRfbmV3X21heF94ICA9IGJvZHlfbWF4X3ggPiByaWdodF9tYXhfeCA/IGJvZHlfbWF4X3ggOiByaWdodF9tYXhfeDtcblx0XHRcdFx0XHRjb25zdCByaWdodF9uZXdfbWF4X3kgID0gYm9keV9tYXhfeSA+IHJpZ2h0X21heF95ID8gYm9keV9tYXhfeSA6IHJpZ2h0X21heF95O1xuXHRcdFx0XHRcdGNvbnN0IHJpZ2h0X3ZvbHVtZSAgICAgPSAocmlnaHRfbWF4X3ggLSByaWdodF9taW5feCkgKiAocmlnaHRfbWF4X3kgLSByaWdodF9taW5feSk7XG5cdFx0XHRcdFx0Y29uc3QgcmlnaHRfbmV3X3ZvbHVtZSA9IChyaWdodF9uZXdfbWF4X3ggLSByaWdodF9uZXdfbWluX3gpICogKHJpZ2h0X25ld19tYXhfeSAtIHJpZ2h0X25ld19taW5feSk7XG5cdFx0XHRcdFx0Y29uc3QgcmlnaHRfZGlmZmVyZW5jZSA9IHJpZ2h0X25ld192b2x1bWUgLSByaWdodF92b2x1bWU7XG5cblx0XHRcdFx0XHRjdXJyZW50Ll9idmhfc29ydCAgPSBzb3J0Kys7XG5cdFx0XHRcdFx0Y3VycmVudC5fYnZoX21pbl94ID0gbGVmdF9uZXdfbWluX3ggPCByaWdodF9uZXdfbWluX3ggPyBsZWZ0X25ld19taW5feCA6IHJpZ2h0X25ld19taW5feDtcblx0XHRcdFx0XHRjdXJyZW50Ll9idmhfbWluX3kgPSBsZWZ0X25ld19taW5feSA8IHJpZ2h0X25ld19taW5feSA/IGxlZnRfbmV3X21pbl95IDogcmlnaHRfbmV3X21pbl95O1xuXHRcdFx0XHRcdGN1cnJlbnQuX2J2aF9tYXhfeCA9IGxlZnRfbmV3X21heF94ID4gcmlnaHRfbmV3X21heF94ID8gbGVmdF9uZXdfbWF4X3ggOiByaWdodF9uZXdfbWF4X3g7XG5cdFx0XHRcdFx0Y3VycmVudC5fYnZoX21heF95ID0gbGVmdF9uZXdfbWF4X3kgPiByaWdodF9uZXdfbWF4X3kgPyBsZWZ0X25ld19tYXhfeSA6IHJpZ2h0X25ld19tYXhfeTtcblxuXHRcdFx0XHRcdGN1cnJlbnQgPSBsZWZ0X2RpZmZlcmVuY2UgPD0gcmlnaHRfZGlmZmVyZW5jZSA/IGxlZnQgOiByaWdodDtcblx0XHRcdFx0fVxuXHRcdFx0XHQvLyBMZWFmXG5cdFx0XHRcdGVsc2Uge1xuXHRcdFx0XHRcdGNvbnN0IGdyYW5kcGFyZW50ICA9IGN1cnJlbnQuX2J2aF9wYXJlbnQ7XG5cdFx0XHRcdFx0Y29uc3QgcGFyZW50X21pbl94ID0gY3VycmVudC5fYnZoX21pbl94O1xuXHRcdFx0XHRcdGNvbnN0IHBhcmVudF9taW5feSA9IGN1cnJlbnQuX2J2aF9taW5feTtcblx0XHRcdFx0XHRjb25zdCBwYXJlbnRfbWF4X3ggPSBjdXJyZW50Ll9idmhfbWF4X3g7XG5cdFx0XHRcdFx0Y29uc3QgcGFyZW50X21heF95ID0gY3VycmVudC5fYnZoX21heF95O1xuXHRcdFx0XHRcdGNvbnN0IG5ld19wYXJlbnQgICA9IGN1cnJlbnQuX2J2aF9wYXJlbnQgPSBib2R5Ll9idmhfcGFyZW50ID0gQlZIQnJhbmNoLmdldEJyYW5jaCgpO1xuXG5cdFx0XHRcdFx0bmV3X3BhcmVudC5fYnZoX3BhcmVudCA9IGdyYW5kcGFyZW50O1xuXHRcdFx0XHRcdG5ld19wYXJlbnQuX2J2aF9sZWZ0ICAgPSBjdXJyZW50O1xuXHRcdFx0XHRcdG5ld19wYXJlbnQuX2J2aF9yaWdodCAgPSBib2R5O1xuXHRcdFx0XHRcdG5ld19wYXJlbnQuX2J2aF9zb3J0ICAgPSBzb3J0Kys7XG5cdFx0XHRcdFx0bmV3X3BhcmVudC5fYnZoX21pbl94ICA9IGJvZHlfbWluX3ggPCBwYXJlbnRfbWluX3ggPyBib2R5X21pbl94IDogcGFyZW50X21pbl94O1xuXHRcdFx0XHRcdG5ld19wYXJlbnQuX2J2aF9taW5feSAgPSBib2R5X21pbl95IDwgcGFyZW50X21pbl95ID8gYm9keV9taW5feSA6IHBhcmVudF9taW5feTtcblx0XHRcdFx0XHRuZXdfcGFyZW50Ll9idmhfbWF4X3ggID0gYm9keV9tYXhfeCA+IHBhcmVudF9tYXhfeCA/IGJvZHlfbWF4X3ggOiBwYXJlbnRfbWF4X3g7XG5cdFx0XHRcdFx0bmV3X3BhcmVudC5fYnZoX21heF95ICA9IGJvZHlfbWF4X3kgPiBwYXJlbnRfbWF4X3kgPyBib2R5X21heF95IDogcGFyZW50X21heF95O1xuXG5cdFx0XHRcdFx0aWYoIWdyYW5kcGFyZW50KSB7XG5cdFx0XHRcdFx0XHR0aGlzLl9oaWVyYXJjaHkgPSBuZXdfcGFyZW50O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRlbHNlIGlmKGdyYW5kcGFyZW50Ll9idmhfbGVmdCA9PT0gY3VycmVudCkge1xuXHRcdFx0XHRcdFx0Z3JhbmRwYXJlbnQuX2J2aF9sZWZ0ID0gbmV3X3BhcmVudDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0ZWxzZSB7XG5cdFx0XHRcdFx0XHRncmFuZHBhcmVudC5fYnZoX3JpZ2h0ID0gbmV3X3BhcmVudDtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBSZW1vdmVzIGEgYm9keSBmcm9tIHRoZSBCVkhcblx0ICogQHBhcmFtIHtDaXJjbGV8UG9seWdvbnxQb2ludH0gYm9keSBUaGUgYm9keSB0byByZW1vdmVcblx0ICogQHBhcmFtIHtCb29sZWFufSBbdXBkYXRpbmcgPSBmYWxzZV0gU2V0IHRvIHRydWUgaWYgdGhpcyBpcyBhIHRlbXBvcmFyeSByZW1vdmFsICh1c2VkIGludGVybmFsbHkgd2hlbiB1cGRhdGluZyB0aGUgYm9keSdzIHBvc2l0aW9uKVxuXHQgKi9cblx0cmVtb3ZlKGJvZHksIHVwZGF0aW5nID0gZmFsc2UpIHtcblx0XHRpZighdXBkYXRpbmcpIHtcblx0XHRcdGNvbnN0IGJ2aCA9IGJvZHkuX2J2aDtcblxuXHRcdFx0aWYoYnZoICYmIGJ2aCAhPT0gdGhpcykge1xuXHRcdFx0XHR0aHJvdyBuZXcgRXJyb3IoJ0JvZHkgYmVsb25ncyB0byBhbm90aGVyIGNvbGxpc2lvbiBzeXN0ZW0nKTtcblx0XHRcdH1cblxuXHRcdFx0Ym9keS5fYnZoID0gbnVsbDtcblx0XHRcdHRoaXMuX2JvZGllcy5zcGxpY2UodGhpcy5fYm9kaWVzLmluZGV4T2YoYm9keSksIDEpO1xuXHRcdH1cblxuXHRcdGlmKHRoaXMuX2hpZXJhcmNoeSA9PT0gYm9keSkge1xuXHRcdFx0dGhpcy5faGllcmFyY2h5ID0gbnVsbDtcblxuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnN0IHBhcmVudCAgICAgICA9IGJvZHkuX2J2aF9wYXJlbnQ7XG5cdFx0Y29uc3QgZ3JhbmRwYXJlbnQgID0gcGFyZW50Ll9idmhfcGFyZW50O1xuXHRcdGNvbnN0IHBhcmVudF9sZWZ0ICA9IHBhcmVudC5fYnZoX2xlZnQ7XG5cdFx0Y29uc3Qgc2libGluZyAgICAgID0gcGFyZW50X2xlZnQgPT09IGJvZHkgPyBwYXJlbnQuX2J2aF9yaWdodCA6IHBhcmVudF9sZWZ0O1xuXG5cdFx0c2libGluZy5fYnZoX3BhcmVudCA9IGdyYW5kcGFyZW50O1xuXG5cdFx0aWYoc2libGluZy5fYnZoX2JyYW5jaCkge1xuXHRcdFx0c2libGluZy5fYnZoX3NvcnQgPSBwYXJlbnQuX2J2aF9zb3J0O1xuXHRcdH1cblxuXHRcdGlmKGdyYW5kcGFyZW50KSB7XG5cdFx0XHRpZihncmFuZHBhcmVudC5fYnZoX2xlZnQgPT09IHBhcmVudCkge1xuXHRcdFx0XHRncmFuZHBhcmVudC5fYnZoX2xlZnQgPSBzaWJsaW5nO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGdyYW5kcGFyZW50Ll9idmhfcmlnaHQgPSBzaWJsaW5nO1xuXHRcdFx0fVxuXG5cdFx0XHRsZXQgYnJhbmNoID0gZ3JhbmRwYXJlbnQ7XG5cblx0XHRcdHdoaWxlKGJyYW5jaCkge1xuXHRcdFx0XHRjb25zdCBsZWZ0ICAgICAgID0gYnJhbmNoLl9idmhfbGVmdDtcblx0XHRcdFx0Y29uc3QgbGVmdF9taW5feCA9IGxlZnQuX2J2aF9taW5feDtcblx0XHRcdFx0Y29uc3QgbGVmdF9taW5feSA9IGxlZnQuX2J2aF9taW5feTtcblx0XHRcdFx0Y29uc3QgbGVmdF9tYXhfeCA9IGxlZnQuX2J2aF9tYXhfeDtcblx0XHRcdFx0Y29uc3QgbGVmdF9tYXhfeSA9IGxlZnQuX2J2aF9tYXhfeTtcblxuXHRcdFx0XHRjb25zdCByaWdodCAgICAgICA9IGJyYW5jaC5fYnZoX3JpZ2h0O1xuXHRcdFx0XHRjb25zdCByaWdodF9taW5feCA9IHJpZ2h0Ll9idmhfbWluX3g7XG5cdFx0XHRcdGNvbnN0IHJpZ2h0X21pbl95ID0gcmlnaHQuX2J2aF9taW5feTtcblx0XHRcdFx0Y29uc3QgcmlnaHRfbWF4X3ggPSByaWdodC5fYnZoX21heF94O1xuXHRcdFx0XHRjb25zdCByaWdodF9tYXhfeSA9IHJpZ2h0Ll9idmhfbWF4X3k7XG5cblx0XHRcdFx0YnJhbmNoLl9idmhfbWluX3ggPSBsZWZ0X21pbl94IDwgcmlnaHRfbWluX3ggPyBsZWZ0X21pbl94IDogcmlnaHRfbWluX3g7XG5cdFx0XHRcdGJyYW5jaC5fYnZoX21pbl95ID0gbGVmdF9taW5feSA8IHJpZ2h0X21pbl95ID8gbGVmdF9taW5feSA6IHJpZ2h0X21pbl95O1xuXHRcdFx0XHRicmFuY2guX2J2aF9tYXhfeCA9IGxlZnRfbWF4X3ggPiByaWdodF9tYXhfeCA/IGxlZnRfbWF4X3ggOiByaWdodF9tYXhfeDtcblx0XHRcdFx0YnJhbmNoLl9idmhfbWF4X3kgPSBsZWZ0X21heF95ID4gcmlnaHRfbWF4X3kgPyBsZWZ0X21heF95IDogcmlnaHRfbWF4X3k7XG5cblx0XHRcdFx0YnJhbmNoID0gYnJhbmNoLl9idmhfcGFyZW50O1xuXHRcdFx0fVxuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdHRoaXMuX2hpZXJhcmNoeSA9IHNpYmxpbmc7XG5cdFx0fVxuXG5cdFx0QlZIQnJhbmNoLnJlbGVhc2VCcmFuY2gocGFyZW50KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBVcGRhdGVzIHRoZSBCVkguIE1vdmVkIGJvZGllcyBhcmUgcmVtb3ZlZC9pbnNlcnRlZC5cblx0ICovXG5cdHVwZGF0ZSgpIHtcblx0XHRjb25zdCBib2RpZXMgPSB0aGlzLl9ib2RpZXM7XG5cdFx0Y29uc3QgY291bnQgID0gYm9kaWVzLmxlbmd0aDtcblxuXHRcdGZvcihsZXQgaSA9IDA7IGkgPCBjb3VudDsgKytpKSB7XG5cdFx0XHRjb25zdCBib2R5ID0gYm9kaWVzW2ldO1xuXG5cdFx0XHRsZXQgdXBkYXRlID0gZmFsc2U7XG5cblx0XHRcdGlmKCF1cGRhdGUgJiYgYm9keS5wYWRkaW5nICE9PSBib2R5Ll9idmhfcGFkZGluZykge1xuXHRcdFx0XHRib2R5Ll9idmhfcGFkZGluZyA9IGJvZHkucGFkZGluZztcblx0XHRcdFx0dXBkYXRlID0gdHJ1ZTtcblx0XHRcdH1cblxuXHRcdFx0aWYoIXVwZGF0ZSkge1xuXHRcdFx0XHRjb25zdCBwb2x5Z29uID0gYm9keS5fcG9seWdvbjtcblxuXHRcdFx0XHRpZihwb2x5Z29uKSB7XG5cdFx0XHRcdFx0aWYoXG5cdFx0XHRcdFx0XHRib2R5Ll9kaXJ0eV9jb29yZHMgfHxcblx0XHRcdFx0XHRcdGJvZHkueCAgICAgICAhPT0gYm9keS5feCB8fFxuXHRcdFx0XHRcdFx0Ym9keS55ICAgICAgICE9PSBib2R5Ll95IHx8XG5cdFx0XHRcdFx0XHRib2R5LmFuZ2xlICAgIT09IGJvZHkuX2FuZ2xlIHx8XG5cdFx0XHRcdFx0XHRib2R5LnNjYWxlX3ggIT09IGJvZHkuX3NjYWxlX3ggfHxcblx0XHRcdFx0XHRcdGJvZHkuc2NhbGVfeSAhPT0gYm9keS5fc2NhbGVfeVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0Ym9keS5fY2FsY3VsYXRlQ29vcmRzKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Y29uc3QgeCAgICAgID0gYm9keS54O1xuXHRcdFx0XHRjb25zdCB5ICAgICAgPSBib2R5Lnk7XG5cdFx0XHRcdGNvbnN0IHJhZGl1cyA9IHBvbHlnb24gPyAwIDogYm9keS5yYWRpdXMgKiBib2R5LnNjYWxlO1xuXHRcdFx0XHRjb25zdCBtaW5feCAgPSBwb2x5Z29uID8gYm9keS5fbWluX3ggOiB4IC0gcmFkaXVzO1xuXHRcdFx0XHRjb25zdCBtaW5feSAgPSBwb2x5Z29uID8gYm9keS5fbWluX3kgOiB5IC0gcmFkaXVzO1xuXHRcdFx0XHRjb25zdCBtYXhfeCAgPSBwb2x5Z29uID8gYm9keS5fbWF4X3ggOiB4ICsgcmFkaXVzO1xuXHRcdFx0XHRjb25zdCBtYXhfeSAgPSBwb2x5Z29uID8gYm9keS5fbWF4X3kgOiB5ICsgcmFkaXVzO1xuXG5cdFx0XHRcdHVwZGF0ZSA9IG1pbl94IDwgYm9keS5fYnZoX21pbl94IHx8IG1pbl95IDwgYm9keS5fYnZoX21pbl95IHx8IG1heF94ID4gYm9keS5fYnZoX21heF94IHx8IG1heF95ID4gYm9keS5fYnZoX21heF95O1xuXHRcdFx0fVxuXG5cdFx0XHRpZih1cGRhdGUpIHtcblx0XHRcdFx0dGhpcy5yZW1vdmUoYm9keSwgdHJ1ZSk7XG5cdFx0XHRcdHRoaXMuaW5zZXJ0KGJvZHksIHRydWUpO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIGEgbGlzdCBvZiBwb3RlbnRpYWwgY29sbGlzaW9ucyBmb3IgYSBib2R5XG5cdCAqIEBwYXJhbSB7Q2lyY2xlfFBvbHlnb258UG9pbnR9IGJvZHkgVGhlIGJvZHkgdG8gdGVzdFxuXHQgKiBAcmV0dXJucyB7QXJyYXk8Qm9keT59XG5cdCAqL1xuXHRwb3RlbnRpYWxzKGJvZHkpIHtcblx0XHRjb25zdCByZXN1bHRzID0gW107XG5cdFx0Y29uc3QgbWluX3ggICA9IGJvZHkuX2J2aF9taW5feDtcblx0XHRjb25zdCBtaW5feSAgID0gYm9keS5fYnZoX21pbl95O1xuXHRcdGNvbnN0IG1heF94ICAgPSBib2R5Ll9idmhfbWF4X3g7XG5cdFx0Y29uc3QgbWF4X3kgICA9IGJvZHkuX2J2aF9tYXhfeTtcblxuXHRcdGxldCBjdXJyZW50ICAgICAgID0gdGhpcy5faGllcmFyY2h5O1xuXHRcdGxldCB0cmF2ZXJzZV9sZWZ0ID0gdHJ1ZTtcblxuXHRcdGlmKCFjdXJyZW50IHx8ICFjdXJyZW50Ll9idmhfYnJhbmNoKSB7XG5cdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHR9XG5cblx0XHR3aGlsZShjdXJyZW50KSB7XG5cdFx0XHRpZih0cmF2ZXJzZV9sZWZ0KSB7XG5cdFx0XHRcdHRyYXZlcnNlX2xlZnQgPSBmYWxzZTtcblxuXHRcdFx0XHRsZXQgbGVmdCA9IGN1cnJlbnQuX2J2aF9icmFuY2ggPyBjdXJyZW50Ll9idmhfbGVmdCA6IG51bGw7XG5cblx0XHRcdFx0d2hpbGUoXG5cdFx0XHRcdFx0bGVmdCAmJlxuXHRcdFx0XHRcdGxlZnQuX2J2aF9tYXhfeCA+PSBtaW5feCAmJlxuXHRcdFx0XHRcdGxlZnQuX2J2aF9tYXhfeSA+PSBtaW5feSAmJlxuXHRcdFx0XHRcdGxlZnQuX2J2aF9taW5feCA8PSBtYXhfeCAmJlxuXHRcdFx0XHRcdGxlZnQuX2J2aF9taW5feSA8PSBtYXhfeVxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRjdXJyZW50ID0gbGVmdDtcblx0XHRcdFx0XHRsZWZ0ICAgID0gY3VycmVudC5fYnZoX2JyYW5jaCA/IGN1cnJlbnQuX2J2aF9sZWZ0IDogbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRjb25zdCBicmFuY2ggPSBjdXJyZW50Ll9idmhfYnJhbmNoO1xuXHRcdFx0Y29uc3QgcmlnaHQgID0gYnJhbmNoID8gY3VycmVudC5fYnZoX3JpZ2h0IDogbnVsbDtcblxuXHRcdFx0aWYoXG5cdFx0XHRcdHJpZ2h0ICYmXG5cdFx0XHRcdHJpZ2h0Ll9idmhfbWF4X3ggPiBtaW5feCAmJlxuXHRcdFx0XHRyaWdodC5fYnZoX21heF95ID4gbWluX3kgJiZcblx0XHRcdFx0cmlnaHQuX2J2aF9taW5feCA8IG1heF94ICYmXG5cdFx0XHRcdHJpZ2h0Ll9idmhfbWluX3kgPCBtYXhfeVxuXHRcdFx0KSB7XG5cdFx0XHRcdGN1cnJlbnQgICAgICAgPSByaWdodDtcblx0XHRcdFx0dHJhdmVyc2VfbGVmdCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0aWYoIWJyYW5jaCAmJiBjdXJyZW50ICE9PSBib2R5KSB7XG5cdFx0XHRcdFx0cmVzdWx0cy5wdXNoKGN1cnJlbnQpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0bGV0IHBhcmVudCA9IGN1cnJlbnQuX2J2aF9wYXJlbnQ7XG5cblx0XHRcdFx0aWYocGFyZW50KSB7XG5cdFx0XHRcdFx0d2hpbGUocGFyZW50ICYmIHBhcmVudC5fYnZoX3JpZ2h0ID09PSBjdXJyZW50KSB7XG5cdFx0XHRcdFx0XHRjdXJyZW50ID0gcGFyZW50O1xuXHRcdFx0XHRcdFx0cGFyZW50ICA9IGN1cnJlbnQuX2J2aF9wYXJlbnQ7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Y3VycmVudCA9IHBhcmVudDtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXN1bHRzO1xuXHR9XG5cblx0LyoqXG5cdCAqIERyYXdzIHRoZSBib2RpZXMgd2l0aGluIHRoZSBCVkggdG8gYSBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQncyBjdXJyZW50IHBhdGhcblx0ICogQHBhcmFtIHtDYW52YXNSZW5kZXJpbmdDb250ZXh0MkR9IGNvbnRleHQgVGhlIGNvbnRleHQgdG8gZHJhdyB0b1xuXHQgKi9cblx0ZHJhdyhjb250ZXh0KSB7XG5cdFx0Y29uc3QgYm9kaWVzID0gdGhpcy5fYm9kaWVzO1xuXHRcdGNvbnN0IGNvdW50ICA9IGJvZGllcy5sZW5ndGg7XG5cblx0XHRmb3IobGV0IGkgPSAwOyBpIDwgY291bnQ7ICsraSkge1xuXHRcdFx0Ym9kaWVzW2ldLmRyYXcoY29udGV4dCk7XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIERyYXdzIHRoZSBCVkggdG8gYSBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQncyBjdXJyZW50IHBhdGguIFRoaXMgaXMgdXNlZnVsIGZvciB0ZXN0aW5nIG91dCBkaWZmZXJlbnQgcGFkZGluZyB2YWx1ZXMgZm9yIGJvZGllcy5cblx0ICogQHBhcmFtIHtDYW52YXNSZW5kZXJpbmdDb250ZXh0MkR9IGNvbnRleHQgVGhlIGNvbnRleHQgdG8gZHJhdyB0b1xuXHQgKi9cblx0ZHJhd0JWSChjb250ZXh0KSB7XG5cdFx0bGV0IGN1cnJlbnQgICAgICAgPSB0aGlzLl9oaWVyYXJjaHk7XG5cdFx0bGV0IHRyYXZlcnNlX2xlZnQgPSB0cnVlO1xuXG5cdFx0d2hpbGUoY3VycmVudCkge1xuXHRcdFx0aWYodHJhdmVyc2VfbGVmdCkge1xuXHRcdFx0XHR0cmF2ZXJzZV9sZWZ0ID0gZmFsc2U7XG5cblx0XHRcdFx0bGV0IGxlZnQgPSBjdXJyZW50Ll9idmhfYnJhbmNoID8gY3VycmVudC5fYnZoX2xlZnQgOiBudWxsO1xuXG5cdFx0XHRcdHdoaWxlKGxlZnQpIHtcblx0XHRcdFx0XHRjdXJyZW50ID0gbGVmdDtcblx0XHRcdFx0XHRsZWZ0ICAgID0gY3VycmVudC5fYnZoX2JyYW5jaCA/IGN1cnJlbnQuX2J2aF9sZWZ0IDogbnVsbDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRjb25zdCBicmFuY2ggPSBjdXJyZW50Ll9idmhfYnJhbmNoO1xuXHRcdFx0Y29uc3QgbWluX3ggID0gY3VycmVudC5fYnZoX21pbl94O1xuXHRcdFx0Y29uc3QgbWluX3kgID0gY3VycmVudC5fYnZoX21pbl95O1xuXHRcdFx0Y29uc3QgbWF4X3ggID0gY3VycmVudC5fYnZoX21heF94O1xuXHRcdFx0Y29uc3QgbWF4X3kgID0gY3VycmVudC5fYnZoX21heF95O1xuXHRcdFx0Y29uc3QgcmlnaHQgID0gYnJhbmNoID8gY3VycmVudC5fYnZoX3JpZ2h0IDogbnVsbDtcblxuXHRcdFx0Y29udGV4dC5tb3ZlVG8obWluX3gsIG1pbl95KTtcblx0XHRcdGNvbnRleHQubGluZVRvKG1heF94LCBtaW5feSk7XG5cdFx0XHRjb250ZXh0LmxpbmVUbyhtYXhfeCwgbWF4X3kpO1xuXHRcdFx0Y29udGV4dC5saW5lVG8obWluX3gsIG1heF95KTtcblx0XHRcdGNvbnRleHQubGluZVRvKG1pbl94LCBtaW5feSk7XG5cblx0XHRcdGlmKHJpZ2h0KSB7XG5cdFx0XHRcdGN1cnJlbnQgICAgICAgPSByaWdodDtcblx0XHRcdFx0dHJhdmVyc2VfbGVmdCA9IHRydWU7XG5cdFx0XHR9XG5cdFx0XHRlbHNlIHtcblx0XHRcdFx0bGV0IHBhcmVudCA9IGN1cnJlbnQuX2J2aF9wYXJlbnQ7XG5cblx0XHRcdFx0aWYocGFyZW50KSB7XG5cdFx0XHRcdFx0d2hpbGUocGFyZW50ICYmIHBhcmVudC5fYnZoX3JpZ2h0ID09PSBjdXJyZW50KSB7XG5cdFx0XHRcdFx0XHRjdXJyZW50ID0gcGFyZW50O1xuXHRcdFx0XHRcdFx0cGFyZW50ICA9IGN1cnJlbnQuX2J2aF9wYXJlbnQ7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Y3VycmVudCA9IHBhcmVudDtcblx0XHRcdFx0fVxuXHRcdFx0XHRlbHNlIHtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxufTtcbiIsIi8qKlxuICogQW4gb2JqZWN0IHVzZWQgdG8gY29sbGVjdCB0aGUgZGV0YWlsZWQgcmVzdWx0cyBvZiBhIGNvbGxpc2lvbiB0ZXN0XG4gKlxuICogPiAqKk5vdGU6KiogSXQgaXMgaGlnaGx5IHJlY29tbWVuZGVkIHlvdSByZWN5Y2xlIHRoZSBzYW1lIFJlc3VsdCBvYmplY3QgaWYgcG9zc2libGUgaW4gb3JkZXIgdG8gYXZvaWQgd2FzdGluZyBtZW1vcnlcbiAqIEBjbGFzc1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZXN1bHQge1xuXHQvKipcblx0ICogQGNvbnN0cnVjdG9yXG5cdCAqL1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHQvKipcblx0XHQgKiBAZGVzYyBUcnVlIGlmIGEgY29sbGlzaW9uIHdhcyBkZXRlY3RlZFxuXHRcdCAqIEB0eXBlIHtCb29sZWFufVxuXHRcdCAqL1xuXHRcdHRoaXMuY29sbGlzaW9uID0gZmFsc2U7XG5cblx0XHQvKipcblx0XHQgKiBAZGVzYyBUaGUgc291cmNlIGJvZHkgdGVzdGVkXG5cdFx0ICogQHR5cGUge0NpcmNsZXxQb2x5Z29ufFBvaW50fVxuXHRcdCAqL1xuXHRcdHRoaXMuYSA9IG51bGw7XG5cblx0XHQvKipcblx0XHQgKiBAZGVzYyBUaGUgdGFyZ2V0IGJvZHkgdGVzdGVkIGFnYWluc3Rcblx0XHQgKiBAdHlwZSB7Q2lyY2xlfFBvbHlnb258UG9pbnR9XG5cdFx0ICovXG5cdFx0dGhpcy5iID0gbnVsbDtcblxuXHRcdC8qKlxuXHRcdCAqIEBkZXNjIFRydWUgaWYgQSBpcyBjb21wbGV0ZWx5IGNvbnRhaW5lZCB3aXRoaW4gQlxuXHRcdCAqIEB0eXBlIHtCb29sZWFufVxuXHRcdCAqL1xuXHRcdHRoaXMuYV9pbl9iID0gZmFsc2U7XG5cblx0XHQvKipcblx0XHQgKiBAZGVzYyBUcnVlIGlmIEIgaXMgY29tcGxldGVseSBjb250YWluZWQgd2l0aGluIEFcblx0XHQgKiBAdHlwZSB7Qm9vbGVhbn1cblx0XHQgKi9cblx0XHR0aGlzLmFfaW5fYiA9IGZhbHNlO1xuXG5cdFx0LyoqXG5cdFx0ICogQGRlc2MgVGhlIG1hZ25pdHVkZSBvZiB0aGUgc2hvcnRlc3QgYXhpcyBvZiBvdmVybGFwXG5cdFx0ICogQHR5cGUge051bWJlcn1cblx0XHQgKi9cblx0XHR0aGlzLm92ZXJsYXAgPSAwO1xuXG5cdFx0LyoqXG5cdFx0ICogQGRlc2MgVGhlIFggZGlyZWN0aW9uIG9mIHRoZSBzaG9ydGVzdCBheGlzIG9mIG92ZXJsYXBcblx0XHQgKiBAdHlwZSB7TnVtYmVyfVxuXHRcdCAqL1xuXHRcdHRoaXMub3ZlcmxhcF94ID0gMDtcblxuXHRcdC8qKlxuXHRcdCAqIEBkZXNjIFRoZSBZIGRpcmVjdGlvbiBvZiB0aGUgc2hvcnRlc3QgYXhpcyBvZiBvdmVybGFwXG5cdFx0ICogQHR5cGUge051bWJlcn1cblx0XHQgKi9cblx0XHR0aGlzLm92ZXJsYXBfeSA9IDA7XG5cdH1cbn07XG4iLCIvKipcbiAqIERldGVybWluZXMgaWYgdHdvIGJvZGllcyBhcmUgY29sbGlkaW5nIHVzaW5nIHRoZSBTZXBhcmF0aW5nIEF4aXMgVGhlb3JlbVxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7Q2lyY2xlfFBvbHlnb258UG9pbnR9IGEgVGhlIHNvdXJjZSBib2R5IHRvIHRlc3RcbiAqIEBwYXJhbSB7Q2lyY2xlfFBvbHlnb258UG9pbnR9IGIgVGhlIHRhcmdldCBib2R5IHRvIHRlc3QgYWdhaW5zdFxuICogQHBhcmFtIHtSZXN1bHR9IFtyZXN1bHQgPSBudWxsXSBBIFJlc3VsdCBvYmplY3Qgb24gd2hpY2ggdG8gc3RvcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGNvbGxpc2lvblxuICogQHBhcmFtIHtCb29sZWFufSBbYWFiYiA9IHRydWVdIFNldCB0byBmYWxzZSB0byBza2lwIHRoZSBBQUJCIHRlc3QgKHVzZWZ1bCBpZiB5b3UgdXNlIHlvdXIgb3duIGNvbGxpc2lvbiBoZXVyaXN0aWMpXG4gKiBAcmV0dXJucyB7Qm9vbGVhbn1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU0FUKGEsIGIsIHJlc3VsdCA9IG51bGwsIGFhYmIgPSB0cnVlKSB7XG5cdGNvbnN0IGFfcG9seWdvbiA9IGEuX3BvbHlnb247XG5cdGNvbnN0IGJfcG9seWdvbiA9IGIuX3BvbHlnb247XG5cblx0bGV0IGNvbGxpc2lvbiA9IGZhbHNlO1xuXG5cdGlmKHJlc3VsdCkge1xuXHRcdHJlc3VsdC5hICAgICAgICAgPSBhO1xuXHRcdHJlc3VsdC5iICAgICAgICAgPSBiO1xuXHRcdHJlc3VsdC5hX2luX2IgICAgPSB0cnVlO1xuXHRcdHJlc3VsdC5iX2luX2EgICAgPSB0cnVlO1xuXHRcdHJlc3VsdC5vdmVybGFwICAgPSBudWxsO1xuXHRcdHJlc3VsdC5vdmVybGFwX3ggPSAwO1xuXHRcdHJlc3VsdC5vdmVybGFwX3kgPSAwO1xuXHR9XG5cblx0aWYoYV9wb2x5Z29uKSB7XG5cdFx0aWYoXG5cdFx0XHRhLl9kaXJ0eV9jb29yZHMgfHxcblx0XHRcdGEueCAgICAgICAhPT0gYS5feCB8fFxuXHRcdFx0YS55ICAgICAgICE9PSBhLl95IHx8XG5cdFx0XHRhLmFuZ2xlICAgIT09IGEuX2FuZ2xlIHx8XG5cdFx0XHRhLnNjYWxlX3ggIT09IGEuX3NjYWxlX3ggfHxcblx0XHRcdGEuc2NhbGVfeSAhPT0gYS5fc2NhbGVfeVxuXHRcdCkge1xuXHRcdFx0YS5fY2FsY3VsYXRlQ29vcmRzKCk7XG5cdFx0fVxuXHR9XG5cblx0aWYoYl9wb2x5Z29uKSB7XG5cdFx0aWYoXG5cdFx0XHRiLl9kaXJ0eV9jb29yZHMgfHxcblx0XHRcdGIueCAgICAgICAhPT0gYi5feCB8fFxuXHRcdFx0Yi55ICAgICAgICE9PSBiLl95IHx8XG5cdFx0XHRiLmFuZ2xlICAgIT09IGIuX2FuZ2xlIHx8XG5cdFx0XHRiLnNjYWxlX3ggIT09IGIuX3NjYWxlX3ggfHxcblx0XHRcdGIuc2NhbGVfeSAhPT0gYi5fc2NhbGVfeVxuXHRcdCkge1xuXHRcdFx0Yi5fY2FsY3VsYXRlQ29vcmRzKCk7XG5cdFx0fVxuXHR9XG5cblx0aWYoIWFhYmIgfHwgYWFiYkFBQkIoYSwgYikpIHtcblx0XHRpZihhX3BvbHlnb24gJiYgYS5fZGlydHlfbm9ybWFscykge1xuXHRcdFx0YS5fY2FsY3VsYXRlTm9ybWFscygpO1xuXHRcdH1cblxuXHRcdGlmKGJfcG9seWdvbiAmJiBiLl9kaXJ0eV9ub3JtYWxzKSB7XG5cdFx0XHRiLl9jYWxjdWxhdGVOb3JtYWxzKCk7XG5cdFx0fVxuXG5cdFx0Y29sbGlzaW9uID0gKFxuXHRcdFx0YV9wb2x5Z29uICYmIGJfcG9seWdvbiA/IHBvbHlnb25Qb2x5Z29uKGEsIGIsIHJlc3VsdCkgOlxuXHRcdFx0YV9wb2x5Z29uID8gcG9seWdvbkNpcmNsZShhLCBiLCByZXN1bHQsIGZhbHNlKSA6XG5cdFx0XHRiX3BvbHlnb24gPyBwb2x5Z29uQ2lyY2xlKGIsIGEsIHJlc3VsdCwgdHJ1ZSkgOlxuXHRcdFx0Y2lyY2xlQ2lyY2xlKGEsIGIsIHJlc3VsdClcblx0XHQpO1xuXHR9XG5cblx0aWYocmVzdWx0KSB7XG5cdFx0cmVzdWx0LmNvbGxpc2lvbiA9IGNvbGxpc2lvbjtcblx0fVxuXG5cdHJldHVybiBjb2xsaXNpb247XG59O1xuXG4vKipcbiAqIERldGVybWluZXMgaWYgdHdvIGJvZGllcycgYXhpcyBhbGlnbmVkIGJvdW5kaW5nIGJveGVzIGFyZSBjb2xsaWRpbmdcbiAqIEBwYXJhbSB7Q2lyY2xlfFBvbHlnb258UG9pbnR9IGEgVGhlIHNvdXJjZSBib2R5IHRvIHRlc3RcbiAqIEBwYXJhbSB7Q2lyY2xlfFBvbHlnb258UG9pbnR9IGIgVGhlIHRhcmdldCBib2R5IHRvIHRlc3QgYWdhaW5zdFxuICovXG5mdW5jdGlvbiBhYWJiQUFCQihhLCBiKSB7XG5cdGNvbnN0IGFfcG9seWdvbiA9IGEuX3BvbHlnb247XG5cdGNvbnN0IGFfeCAgICAgICA9IGFfcG9seWdvbiA/IDAgOiBhLng7XG5cdGNvbnN0IGFfeSAgICAgICA9IGFfcG9seWdvbiA/IDAgOiBhLnk7XG5cdGNvbnN0IGFfcmFkaXVzICA9IGFfcG9seWdvbiA/IDAgOiBhLnJhZGl1cyAqIGEuc2NhbGU7XG5cdGNvbnN0IGFfbWluX3ggICA9IGFfcG9seWdvbiA/IGEuX21pbl94IDogYV94IC0gYV9yYWRpdXM7XG5cdGNvbnN0IGFfbWluX3kgICA9IGFfcG9seWdvbiA/IGEuX21pbl95IDogYV95IC0gYV9yYWRpdXM7XG5cdGNvbnN0IGFfbWF4X3ggICA9IGFfcG9seWdvbiA/IGEuX21heF94IDogYV94ICsgYV9yYWRpdXM7XG5cdGNvbnN0IGFfbWF4X3kgICA9IGFfcG9seWdvbiA/IGEuX21heF95IDogYV95ICsgYV9yYWRpdXM7XG5cblx0Y29uc3QgYl9wb2x5Z29uID0gYi5fcG9seWdvbjtcblx0Y29uc3QgYl94ICAgICAgID0gYl9wb2x5Z29uID8gMCA6IGIueDtcblx0Y29uc3QgYl95ICAgICAgID0gYl9wb2x5Z29uID8gMCA6IGIueTtcblx0Y29uc3QgYl9yYWRpdXMgID0gYl9wb2x5Z29uID8gMCA6IGIucmFkaXVzICogYi5zY2FsZTtcblx0Y29uc3QgYl9taW5feCAgID0gYl9wb2x5Z29uID8gYi5fbWluX3ggOiBiX3ggLSBiX3JhZGl1cztcblx0Y29uc3QgYl9taW5feSAgID0gYl9wb2x5Z29uID8gYi5fbWluX3kgOiBiX3kgLSBiX3JhZGl1cztcblx0Y29uc3QgYl9tYXhfeCAgID0gYl9wb2x5Z29uID8gYi5fbWF4X3ggOiBiX3ggKyBiX3JhZGl1cztcblx0Y29uc3QgYl9tYXhfeSAgID0gYl9wb2x5Z29uID8gYi5fbWF4X3kgOiBiX3kgKyBiX3JhZGl1cztcblxuXHRyZXR1cm4gYV9taW5feCA8IGJfbWF4X3ggJiYgYV9taW5feSA8IGJfbWF4X3kgJiYgYV9tYXhfeCA+IGJfbWluX3ggJiYgYV9tYXhfeSA+IGJfbWluX3k7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiB0d28gcG9seWdvbnMgYXJlIGNvbGxpZGluZ1xuICogQHBhcmFtIHtQb2x5Z29ufSBhIFRoZSBzb3VyY2UgcG9seWdvbiB0byB0ZXN0XG4gKiBAcGFyYW0ge1BvbHlnb259IGIgVGhlIHRhcmdldCBwb2x5Z29uIHRvIHRlc3QgYWdhaW5zdFxuICogQHBhcmFtIHtSZXN1bHR9IFtyZXN1bHQgPSBudWxsXSBBIFJlc3VsdCBvYmplY3Qgb24gd2hpY2ggdG8gc3RvcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGNvbGxpc2lvblxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIHBvbHlnb25Qb2x5Z29uKGEsIGIsIHJlc3VsdCA9IG51bGwpIHtcblx0Y29uc3QgYV9jb3VudCA9IGEuX2Nvb3Jkcy5sZW5ndGg7XG5cdGNvbnN0IGJfY291bnQgPSBiLl9jb29yZHMubGVuZ3RoO1xuXG5cdC8vIEhhbmRsZSBwb2ludHMgc3BlY2lhbGx5XG5cdGlmKGFfY291bnQgPT09IDIgJiYgYl9jb3VudCA9PT0gMikge1xuXHRcdGNvbnN0IGFfY29vcmRzID0gYS5fY29vcmRzO1xuXHRcdGNvbnN0IGJfY29vcmRzID0gYi5fY29vcmRzO1xuXG5cdFx0aWYocmVzdWx0KSB7XG5cdFx0XHRyZXN1bHQub3ZlcmxhcCA9IDA7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGFfY29vcmRzWzBdID09PSBiX2Nvb3Jkc1swXSAmJiBhX2Nvb3Jkc1sxXSA9PT0gYl9jb29yZHNbMV07XG5cdH1cblxuXHRjb25zdCBhX2Nvb3JkcyAgPSBhLl9jb29yZHM7XG5cdGNvbnN0IGJfY29vcmRzICA9IGIuX2Nvb3Jkcztcblx0Y29uc3QgYV9ub3JtYWxzID0gYS5fbm9ybWFscztcblx0Y29uc3QgYl9ub3JtYWxzID0gYi5fbm9ybWFscztcblxuXHRpZihhX2NvdW50ID4gMikge1xuXHRcdGZvcihsZXQgaXggPSAwLCBpeSA9IDE7IGl4IDwgYV9jb3VudDsgaXggKz0gMiwgaXkgKz0gMikge1xuXHRcdFx0aWYoc2VwYXJhdGluZ0F4aXMoYV9jb29yZHMsIGJfY29vcmRzLCBhX25vcm1hbHNbaXhdLCBhX25vcm1hbHNbaXldLCByZXN1bHQpKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZihiX2NvdW50ID4gMikge1xuXHRcdGZvcihsZXQgaXggPSAwLCBpeSA9IDE7IGl4IDwgYl9jb3VudDsgaXggKz0gMiwgaXkgKz0gMikge1xuXHRcdFx0aWYoc2VwYXJhdGluZ0F4aXMoYV9jb29yZHMsIGJfY29vcmRzLCBiX25vcm1hbHNbaXhdLCBiX25vcm1hbHNbaXldLCByZXN1bHQpKSB7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gdHJ1ZTtcbn1cblxuLyoqXG4gKiBEZXRlcm1pbmVzIGlmIGEgcG9seWdvbiBhbmQgYSBjaXJjbGUgYXJlIGNvbGxpZGluZ1xuICogQHBhcmFtIHtQb2x5Z29ufSBhIFRoZSBzb3VyY2UgcG9seWdvbiB0byB0ZXN0XG4gKiBAcGFyYW0ge0NpcmNsZX0gYiBUaGUgdGFyZ2V0IGNpcmNsZSB0byB0ZXN0IGFnYWluc3RcbiAqIEBwYXJhbSB7UmVzdWx0fSBbcmVzdWx0ID0gbnVsbF0gQSBSZXN1bHQgb2JqZWN0IG9uIHdoaWNoIHRvIHN0b3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjb2xsaXNpb25cbiAqIEBwYXJhbSB7Qm9vbGVhbn0gW3JldmVyc2UgPSBmYWxzZV0gU2V0IHRvIHRydWUgdG8gcmV2ZXJzZSBhIGFuZCBiIGluIHRoZSByZXN1bHQgcGFyYW1ldGVyIHdoZW4gdGVzdGluZyBjaXJjbGUtPnBvbHlnb24gaW5zdGVhZCBvZiBwb2x5Z29uLT5jaXJjbGVcbiAqIEByZXR1cm5zIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBwb2x5Z29uQ2lyY2xlKGEsIGIsIHJlc3VsdCA9IG51bGwsIHJldmVyc2UgPSBmYWxzZSkge1xuXHRjb25zdCBhX2Nvb3JkcyAgICAgICA9IGEuX2Nvb3Jkcztcblx0Y29uc3QgYV9lZGdlcyAgICAgICAgPSBhLl9lZGdlcztcblx0Y29uc3QgYV9ub3JtYWxzICAgICAgPSBhLl9ub3JtYWxzO1xuXHRjb25zdCBiX3ggICAgICAgICAgICA9IGIueDtcblx0Y29uc3QgYl95ICAgICAgICAgICAgPSBiLnk7XG5cdGNvbnN0IGJfcmFkaXVzICAgICAgID0gYi5yYWRpdXMgKiBiLnNjYWxlO1xuXHRjb25zdCBiX3JhZGl1czIgICAgICA9IGJfcmFkaXVzICogMjtcblx0Y29uc3QgcmFkaXVzX3NxdWFyZWQgPSBiX3JhZGl1cyAqIGJfcmFkaXVzO1xuXHRjb25zdCBjb3VudCAgICAgICAgICA9IGFfY29vcmRzLmxlbmd0aDtcblxuXHRsZXQgYV9pbl9iICAgID0gdHJ1ZTtcblx0bGV0IGJfaW5fYSAgICA9IHRydWU7XG5cdGxldCBvdmVybGFwICAgPSBudWxsO1xuXHRsZXQgb3ZlcmxhcF94ID0gMDtcblx0bGV0IG92ZXJsYXBfeSA9IDA7XG5cblx0Ly8gSGFuZGxlIHBvaW50cyBzcGVjaWFsbHlcblx0aWYoY291bnQgPT09IDIpIHtcblx0XHRjb25zdCBjb29yZF94ICAgICAgICA9IGJfeCAtIGFfY29vcmRzWzBdO1xuXHRcdGNvbnN0IGNvb3JkX3kgICAgICAgID0gYl95IC0gYV9jb29yZHNbMV07XG5cdFx0Y29uc3QgbGVuZ3RoX3NxdWFyZWQgPSBjb29yZF94ICogY29vcmRfeCArIGNvb3JkX3kgKiBjb29yZF95O1xuXG5cdFx0aWYobGVuZ3RoX3NxdWFyZWQgPiByYWRpdXNfc3F1YXJlZCkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblxuXHRcdGlmKHJlc3VsdCkge1xuXHRcdFx0Y29uc3QgbGVuZ3RoID0gTWF0aC5zcXJ0KGxlbmd0aF9zcXVhcmVkKTtcblxuXHRcdFx0b3ZlcmxhcCAgID0gYl9yYWRpdXMgLSBsZW5ndGg7XG5cdFx0XHRvdmVybGFwX3ggPSBjb29yZF94IC8gbGVuZ3RoO1xuXHRcdFx0b3ZlcmxhcF95ID0gY29vcmRfeSAvIGxlbmd0aDtcblx0XHRcdGJfaW5fYSAgICA9IGZhbHNlO1xuXHRcdH1cblx0fVxuXHRlbHNlIHtcblx0XHRmb3IobGV0IGl4ID0gMCwgaXkgPSAxOyBpeCA8IGNvdW50OyBpeCArPSAyLCBpeSArPSAyKSB7XG5cdFx0XHRjb25zdCBjb29yZF94ID0gYl94IC0gYV9jb29yZHNbaXhdO1xuXHRcdFx0Y29uc3QgY29vcmRfeSA9IGJfeSAtIGFfY29vcmRzW2l5XTtcblx0XHRcdGNvbnN0IGVkZ2VfeCAgPSBhX2VkZ2VzW2l4XTtcblx0XHRcdGNvbnN0IGVkZ2VfeSAgPSBhX2VkZ2VzW2l5XTtcblx0XHRcdGNvbnN0IGRvdCAgICAgPSBjb29yZF94ICogZWRnZV94ICsgY29vcmRfeSAqIGVkZ2VfeTtcblx0XHRcdGNvbnN0IHJlZ2lvbiAgPSBkb3QgPCAwID8gLTEgOiBkb3QgPiBlZGdlX3ggKiBlZGdlX3ggKyBlZGdlX3kgKiBlZGdlX3kgPyAxIDogMDtcblxuXHRcdFx0bGV0IHRtcF9vdmVybGFwcGluZyA9IGZhbHNlO1xuXHRcdFx0bGV0IHRtcF9vdmVybGFwICAgICA9IDA7XG5cdFx0XHRsZXQgdG1wX292ZXJsYXBfeCAgID0gMDtcblx0XHRcdGxldCB0bXBfb3ZlcmxhcF95ICAgPSAwO1xuXG5cdFx0XHRpZihyZXN1bHQgJiYgYV9pbl9iICYmIGNvb3JkX3ggKiBjb29yZF94ICsgY29vcmRfeSAqIGNvb3JkX3kgPiByYWRpdXNfc3F1YXJlZCkge1xuXHRcdFx0XHRhX2luX2IgPSBmYWxzZTtcblx0XHRcdH1cblxuXHRcdFx0aWYocmVnaW9uKSB7XG5cdFx0XHRcdGNvbnN0IGxlZnQgICAgID0gcmVnaW9uID09PSAtMTtcblx0XHRcdFx0Y29uc3Qgb3RoZXJfeCAgPSBsZWZ0ID8gKGl4ID09PSAwID8gY291bnQgLSAyIDogaXggLSAyKSA6IChpeCA9PT0gY291bnQgLSAyID8gMCA6IGl4ICsgMik7XG5cdFx0XHRcdGNvbnN0IG90aGVyX3kgID0gb3RoZXJfeCArIDE7XG5cdFx0XHRcdGNvbnN0IGNvb3JkMl94ID0gYl94IC0gYV9jb29yZHNbb3RoZXJfeF07XG5cdFx0XHRcdGNvbnN0IGNvb3JkMl95ID0gYl95IC0gYV9jb29yZHNbb3RoZXJfeV07XG5cdFx0XHRcdGNvbnN0IGVkZ2UyX3ggID0gYV9lZGdlc1tvdGhlcl94XTtcblx0XHRcdFx0Y29uc3QgZWRnZTJfeSAgPSBhX2VkZ2VzW290aGVyX3ldO1xuXHRcdFx0XHRjb25zdCBkb3QyICAgICA9IGNvb3JkMl94ICogZWRnZTJfeCArIGNvb3JkMl95ICogZWRnZTJfeTtcblx0XHRcdFx0Y29uc3QgcmVnaW9uMiAgPSBkb3QyIDwgMCA/IC0xIDogZG90MiA+IGVkZ2UyX3ggKiBlZGdlMl94ICsgZWRnZTJfeSAqIGVkZ2UyX3kgPyAxIDogMDtcblxuXHRcdFx0XHRpZihyZWdpb24yID09PSAtcmVnaW9uKSB7XG5cdFx0XHRcdFx0Y29uc3QgdGFyZ2V0X3ggICAgICAgPSBsZWZ0ID8gY29vcmRfeCA6IGNvb3JkMl94O1xuXHRcdFx0XHRcdGNvbnN0IHRhcmdldF95ICAgICAgID0gbGVmdCA/IGNvb3JkX3kgOiBjb29yZDJfeTtcblx0XHRcdFx0XHRjb25zdCBsZW5ndGhfc3F1YXJlZCA9IHRhcmdldF94ICogdGFyZ2V0X3ggKyB0YXJnZXRfeSAqIHRhcmdldF95O1xuXG5cdFx0XHRcdFx0aWYobGVuZ3RoX3NxdWFyZWQgPiByYWRpdXNfc3F1YXJlZCkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGlmKHJlc3VsdCkge1xuXHRcdFx0XHRcdFx0Y29uc3QgbGVuZ3RoID0gTWF0aC5zcXJ0KGxlbmd0aF9zcXVhcmVkKTtcblxuXHRcdFx0XHRcdFx0dG1wX292ZXJsYXBwaW5nID0gdHJ1ZTtcblx0XHRcdFx0XHRcdHRtcF9vdmVybGFwICAgICA9IGJfcmFkaXVzIC0gbGVuZ3RoO1xuXHRcdFx0XHRcdFx0dG1wX292ZXJsYXBfeCAgID0gdGFyZ2V0X3ggLyBsZW5ndGg7XG5cdFx0XHRcdFx0XHR0bXBfb3ZlcmxhcF95ICAgPSB0YXJnZXRfeSAvIGxlbmd0aDtcblx0XHRcdFx0XHRcdGJfaW5fYSAgICAgICAgICA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGNvbnN0IG5vcm1hbF94ICAgICAgICA9IGFfbm9ybWFsc1tpeF07XG5cdFx0XHRcdGNvbnN0IG5vcm1hbF95ICAgICAgICA9IGFfbm9ybWFsc1tpeV07XG5cdFx0XHRcdGNvbnN0IGxlbmd0aCAgICAgICAgICA9IGNvb3JkX3ggKiBub3JtYWxfeCArIGNvb3JkX3kgKiBub3JtYWxfeTtcblx0XHRcdFx0Y29uc3QgYWJzb2x1dGVfbGVuZ3RoID0gbGVuZ3RoIDwgMCA/IC1sZW5ndGggOiBsZW5ndGg7XG5cblx0XHRcdFx0aWYobGVuZ3RoID4gMCAmJiBhYnNvbHV0ZV9sZW5ndGggPiBiX3JhZGl1cykge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmKHJlc3VsdCkge1xuXHRcdFx0XHRcdHRtcF9vdmVybGFwcGluZyA9IHRydWU7XG5cdFx0XHRcdFx0dG1wX292ZXJsYXAgICAgID0gYl9yYWRpdXMgLSBsZW5ndGg7XG5cdFx0XHRcdFx0dG1wX292ZXJsYXBfeCAgID0gbm9ybWFsX3g7XG5cdFx0XHRcdFx0dG1wX292ZXJsYXBfeSAgID0gbm9ybWFsX3k7XG5cblx0XHRcdFx0XHRpZihiX2luX2EgJiYgbGVuZ3RoID49IDAgfHwgdG1wX292ZXJsYXAgPCBiX3JhZGl1czIpIHtcblx0XHRcdFx0XHRcdGJfaW5fYSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRpZih0bXBfb3ZlcmxhcHBpbmcgJiYgKG92ZXJsYXAgPT09IG51bGwgfHwgb3ZlcmxhcCA+IHRtcF9vdmVybGFwKSkge1xuXHRcdFx0XHRvdmVybGFwICAgPSB0bXBfb3ZlcmxhcDtcblx0XHRcdFx0b3ZlcmxhcF94ID0gdG1wX292ZXJsYXBfeDtcblx0XHRcdFx0b3ZlcmxhcF95ID0gdG1wX292ZXJsYXBfeTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZihyZXN1bHQpIHtcblx0XHRyZXN1bHQuYV9pbl9iICAgID0gcmV2ZXJzZSA/IGJfaW5fYSA6IGFfaW5fYjtcblx0XHRyZXN1bHQuYl9pbl9hICAgID0gcmV2ZXJzZSA/IGFfaW5fYiA6IGJfaW5fYTtcblx0XHRyZXN1bHQub3ZlcmxhcCAgID0gb3ZlcmxhcDtcblx0XHRyZXN1bHQub3ZlcmxhcF94ID0gcmV2ZXJzZSA/IC1vdmVybGFwX3ggOiBvdmVybGFwX3g7XG5cdFx0cmVzdWx0Lm92ZXJsYXBfeSA9IHJldmVyc2UgPyAtb3ZlcmxhcF95IDogb3ZlcmxhcF95O1xuXHR9XG5cblx0cmV0dXJuIHRydWU7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiB0d28gY2lyY2xlcyBhcmUgY29sbGlkaW5nXG4gKiBAcGFyYW0ge0NpcmNsZX0gYSBUaGUgc291cmNlIGNpcmNsZSB0byB0ZXN0XG4gKiBAcGFyYW0ge0NpcmNsZX0gYiBUaGUgdGFyZ2V0IGNpcmNsZSB0byB0ZXN0IGFnYWluc3RcbiAqIEBwYXJhbSB7UmVzdWx0fSBbcmVzdWx0ID0gbnVsbF0gQSBSZXN1bHQgb2JqZWN0IG9uIHdoaWNoIHRvIHN0b3JlIGluZm9ybWF0aW9uIGFib3V0IHRoZSBjb2xsaXNpb25cbiAqIEByZXR1cm5zIHtCb29sZWFufVxuICovXG5mdW5jdGlvbiBjaXJjbGVDaXJjbGUoYSwgYiwgcmVzdWx0ID0gbnVsbCkge1xuXHRjb25zdCBhX3JhZGl1cyAgICAgICA9IGEucmFkaXVzICogYS5zY2FsZTtcblx0Y29uc3QgYl9yYWRpdXMgICAgICAgPSBiLnJhZGl1cyAqIGIuc2NhbGU7XG5cdGNvbnN0IGRpZmZlcmVuY2VfeCAgID0gYi54IC0gYS54O1xuXHRjb25zdCBkaWZmZXJlbmNlX3kgICA9IGIueSAtIGEueTtcblx0Y29uc3QgcmFkaXVzX3N1bSAgICAgPSBhX3JhZGl1cyArIGJfcmFkaXVzO1xuXHRjb25zdCBsZW5ndGhfc3F1YXJlZCA9IGRpZmZlcmVuY2VfeCAqIGRpZmZlcmVuY2VfeCArIGRpZmZlcmVuY2VfeSAqIGRpZmZlcmVuY2VfeTtcblxuXHRpZihsZW5ndGhfc3F1YXJlZCA+IHJhZGl1c19zdW0gKiByYWRpdXNfc3VtKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0aWYocmVzdWx0KSB7XG5cdFx0Y29uc3QgbGVuZ3RoID0gTWF0aC5zcXJ0KGxlbmd0aF9zcXVhcmVkKTtcblxuXHRcdHJlc3VsdC5hX2luX2IgICAgPSBhX3JhZGl1cyA8PSBiX3JhZGl1cyAmJiBsZW5ndGggPD0gYl9yYWRpdXMgLSBhX3JhZGl1cztcblx0XHRyZXN1bHQuYl9pbl9hICAgID0gYl9yYWRpdXMgPD0gYV9yYWRpdXMgJiYgbGVuZ3RoIDw9IGFfcmFkaXVzIC0gYl9yYWRpdXM7XG5cdFx0cmVzdWx0Lm92ZXJsYXAgICA9IHJhZGl1c19zdW0gLSBsZW5ndGg7XG5cdFx0cmVzdWx0Lm92ZXJsYXBfeCA9IGRpZmZlcmVuY2VfeCAvIGxlbmd0aDtcblx0XHRyZXN1bHQub3ZlcmxhcF95ID0gZGlmZmVyZW5jZV95IC8gbGVuZ3RoO1xuXHR9XG5cblx0cmV0dXJuIHRydWU7XG59XG5cbi8qKlxuICogRGV0ZXJtaW5lcyBpZiB0d28gcG9seWdvbnMgYXJlIHNlcGFyYXRlZCBieSBhbiBheGlzXG4gKiBAcGFyYW0ge0FycmF5PE51bWJlcltdPn0gYV9jb29yZHMgVGhlIGNvb3JkaW5hdGVzIG9mIHRoZSBwb2x5Z29uIHRvIHRlc3RcbiAqIEBwYXJhbSB7QXJyYXk8TnVtYmVyW10+fSBiX2Nvb3JkcyBUaGUgY29vcmRpbmF0ZXMgb2YgdGhlIHBvbHlnb24gdG8gdGVzdCBhZ2FpbnN0XG4gKiBAcGFyYW0ge051bWJlcn0geCBUaGUgWCBkaXJlY3Rpb24gb2YgdGhlIGF4aXNcbiAqIEBwYXJhbSB7TnVtYmVyfSB5IFRoZSBZIGRpcmVjdGlvbiBvZiB0aGUgYXhpc1xuICogQHBhcmFtIHtSZXN1bHR9IFtyZXN1bHQgPSBudWxsXSBBIFJlc3VsdCBvYmplY3Qgb24gd2hpY2ggdG8gc3RvcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGNvbGxpc2lvblxuICogQHJldHVybnMge0Jvb2xlYW59XG4gKi9cbmZ1bmN0aW9uIHNlcGFyYXRpbmdBeGlzKGFfY29vcmRzLCBiX2Nvb3JkcywgeCwgeSwgcmVzdWx0ID0gbnVsbCkge1xuXHRjb25zdCBhX2NvdW50ID0gYV9jb29yZHMubGVuZ3RoO1xuXHRjb25zdCBiX2NvdW50ID0gYl9jb29yZHMubGVuZ3RoO1xuXG5cdGlmKCFhX2NvdW50IHx8ICFiX2NvdW50KSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRsZXQgYV9zdGFydCA9IG51bGw7XG5cdGxldCBhX2VuZCAgID0gbnVsbDtcblx0bGV0IGJfc3RhcnQgPSBudWxsO1xuXHRsZXQgYl9lbmQgICA9IG51bGw7XG5cblx0Zm9yKGxldCBpeCA9IDAsIGl5ID0gMTsgaXggPCBhX2NvdW50OyBpeCArPSAyLCBpeSArPSAyKSB7XG5cdFx0Y29uc3QgZG90ID0gYV9jb29yZHNbaXhdICogeCArIGFfY29vcmRzW2l5XSAqIHk7XG5cblx0XHRpZihhX3N0YXJ0ID09PSBudWxsIHx8IGFfc3RhcnQgPiBkb3QpIHtcblx0XHRcdGFfc3RhcnQgPSBkb3Q7XG5cdFx0fVxuXG5cdFx0aWYoYV9lbmQgPT09IG51bGwgfHwgYV9lbmQgPCBkb3QpIHtcblx0XHRcdGFfZW5kID0gZG90O1xuXHRcdH1cblx0fVxuXG5cdGZvcihsZXQgaXggPSAwLCBpeSA9IDE7IGl4IDwgYl9jb3VudDsgaXggKz0gMiwgaXkgKz0gMikge1xuXHRcdGNvbnN0IGRvdCA9IGJfY29vcmRzW2l4XSAqIHggKyBiX2Nvb3Jkc1tpeV0gKiB5O1xuXG5cdFx0aWYoYl9zdGFydCA9PT0gbnVsbCB8fCBiX3N0YXJ0ID4gZG90KSB7XG5cdFx0XHRiX3N0YXJ0ID0gZG90O1xuXHRcdH1cblxuXHRcdGlmKGJfZW5kID09PSBudWxsIHx8IGJfZW5kIDwgZG90KSB7XG5cdFx0XHRiX2VuZCA9IGRvdDtcblx0XHR9XG5cdH1cblxuXHRpZihhX3N0YXJ0ID4gYl9lbmQgfHwgYV9lbmQgPCBiX3N0YXJ0KSB7XG5cdFx0cmV0dXJuIHRydWU7XG5cdH1cblxuXHRpZihyZXN1bHQpIHtcblx0XHRsZXQgb3ZlcmxhcCA9IDA7XG5cblx0XHRpZihhX3N0YXJ0IDwgYl9zdGFydCkge1xuXHRcdFx0cmVzdWx0LmFfaW5fYiA9IGZhbHNlO1xuXG5cdFx0XHRpZihhX2VuZCA8IGJfZW5kKSB7XG5cdFx0XHRcdG92ZXJsYXAgICAgICAgPSBhX2VuZCAtIGJfc3RhcnQ7XG5cdFx0XHRcdHJlc3VsdC5iX2luX2EgPSBmYWxzZTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRjb25zdCBvcHRpb24xID0gYV9lbmQgLSBiX3N0YXJ0O1xuXHRcdFx0XHRjb25zdCBvcHRpb24yID0gYl9lbmQgLSBhX3N0YXJ0O1xuXG5cdFx0XHRcdG92ZXJsYXAgPSBvcHRpb24xIDwgb3B0aW9uMiA/IG9wdGlvbjEgOiAtb3B0aW9uMjtcblx0XHRcdH1cblx0XHR9XG5cdFx0ZWxzZSB7XG5cdFx0XHRyZXN1bHQuYl9pbl9hID0gZmFsc2U7XG5cblx0XHRcdGlmKGFfZW5kID4gYl9lbmQpIHtcblx0XHRcdFx0b3ZlcmxhcCAgICAgICA9IGFfc3RhcnQgLSBiX2VuZDtcblx0XHRcdFx0cmVzdWx0LmFfaW5fYiA9IGZhbHNlO1xuXHRcdFx0fVxuXHRcdFx0ZWxzZSB7XG5cdFx0XHRcdGNvbnN0IG9wdGlvbjEgPSBhX2VuZCAtIGJfc3RhcnQ7XG5cdFx0XHRcdGNvbnN0IG9wdGlvbjIgPSBiX2VuZCAtIGFfc3RhcnQ7XG5cblx0XHRcdFx0b3ZlcmxhcCA9IG9wdGlvbjEgPCBvcHRpb24yID8gb3B0aW9uMSA6IC1vcHRpb24yO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGNvbnN0IGN1cnJlbnRfb3ZlcmxhcCAgPSByZXN1bHQub3ZlcmxhcDtcblx0XHRjb25zdCBhYnNvbHV0ZV9vdmVybGFwID0gb3ZlcmxhcCA8IDAgPyAtb3ZlcmxhcCA6IG92ZXJsYXA7XG5cblx0XHRpZihjdXJyZW50X292ZXJsYXAgPT09IG51bGwgfHwgY3VycmVudF9vdmVybGFwID4gYWJzb2x1dGVfb3ZlcmxhcCkge1xuXHRcdFx0Y29uc3Qgc2lnbiA9IG92ZXJsYXAgPCAwID8gLTEgOiAxO1xuXG5cdFx0XHRyZXN1bHQub3ZlcmxhcCAgID0gYWJzb2x1dGVfb3ZlcmxhcDtcblx0XHRcdHJlc3VsdC5vdmVybGFwX3ggPSB4ICogc2lnbjtcblx0XHRcdHJlc3VsdC5vdmVybGFwX3kgPSB5ICogc2lnbjtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZmFsc2U7XG59XG4iLCJpbXBvcnQgUmVzdWx0IGZyb20gJy4vUmVzdWx0Lm1qcyc7XG5pbXBvcnQgU0FUICAgIGZyb20gJy4vU0FULm1qcyc7XG5cbi8qKlxuICogVGhlIGJhc2UgY2xhc3MgZm9yIGJvZGllcyB1c2VkIHRvIGRldGVjdCBjb2xsaXNpb25zXG4gKiBAY2xhc3NcbiAqIEBwcm90ZWN0ZWRcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQm9keSB7XG5cdC8qKlxuXHQgKiBAY29uc3RydWN0b3Jcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFt4ID0gMF0gVGhlIHN0YXJ0aW5nIFggY29vcmRpbmF0ZVxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3kgPSAwXSBUaGUgc3RhcnRpbmcgWSBjb29yZGluYXRlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcGFkZGluZyA9IDBdIFRoZSBhbW91bnQgdG8gcGFkIHRoZSBib3VuZGluZyB2b2x1bWUgd2hlbiB0ZXN0aW5nIGZvciBwb3RlbnRpYWwgY29sbGlzaW9uc1xuXHQgKi9cblx0Y29uc3RydWN0b3IoeCA9IDAsIHkgPSAwLCBwYWRkaW5nID0gMCkge1xuXHRcdC8qKlxuXHRcdCAqIEBkZXNjIFRoZSBYIGNvb3JkaW5hdGUgb2YgdGhlIGJvZHlcblx0XHQgKiBAdHlwZSB7TnVtYmVyfVxuXHRcdCAqL1xuXHRcdHRoaXMueCA9IHg7XG5cblx0XHQvKipcblx0XHQgKiBAZGVzYyBUaGUgWSBjb29yZGluYXRlIG9mIHRoZSBib2R5XG5cdFx0ICogQHR5cGUge051bWJlcn1cblx0XHQgKi9cblx0XHR0aGlzLnkgPSB5O1xuXG5cdFx0LyoqXG5cdFx0ICogQGRlc2MgVGhlIGFtb3VudCB0byBwYWQgdGhlIGJvdW5kaW5nIHZvbHVtZSB3aGVuIHRlc3RpbmcgZm9yIHBvdGVudGlhbCBjb2xsaXNpb25zXG5cdFx0ICogQHR5cGUge051bWJlcn1cblx0XHQgKi9cblx0XHR0aGlzLnBhZGRpbmcgPSBwYWRkaW5nO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fY2lyY2xlID0gZmFsc2U7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9wb2x5Z29uID0gZmFsc2U7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9wb2ludCA9IGZhbHNlO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYnZoID0gbnVsbDtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX2J2aF9wYXJlbnQgPSBudWxsO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYnZoX2JyYW5jaCA9IGZhbHNlO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYnZoX3BhZGRpbmcgPSBwYWRkaW5nO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYnZoX21pbl94ID0gMDtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX2J2aF9taW5feSA9IDA7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9idmhfbWF4X3ggPSAwO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYnZoX21heF95ID0gMDtcblx0fVxuXG5cdC8qKlxuXHQgKiBEZXRlcm1pbmVzIGlmIHRoZSBib2R5IGlzIGNvbGxpZGluZyB3aXRoIGFub3RoZXIgYm9keVxuXHQgKiBAcGFyYW0ge0NpcmNsZXxQb2x5Z29ufFBvaW50fSB0YXJnZXQgVGhlIHRhcmdldCBib2R5IHRvIHRlc3QgYWdhaW5zdFxuXHQgKiBAcGFyYW0ge1Jlc3VsdH0gW3Jlc3VsdCA9IG51bGxdIEEgUmVzdWx0IG9iamVjdCBvbiB3aGljaCB0byBzdG9yZSBpbmZvcm1hdGlvbiBhYm91dCB0aGUgY29sbGlzaW9uXG5cdCAqIEBwYXJhbSB7Qm9vbGVhbn0gW2FhYmIgPSB0cnVlXSBTZXQgdG8gZmFsc2UgdG8gc2tpcCB0aGUgQUFCQiB0ZXN0ICh1c2VmdWwgaWYgeW91IHVzZSB5b3VyIG93biBwb3RlbnRpYWwgY29sbGlzaW9uIGhldXJpc3RpYylcblx0ICogQHJldHVybnMge0Jvb2xlYW59XG5cdCAqL1xuXHRjb2xsaWRlcyh0YXJnZXQsIHJlc3VsdCA9IG51bGwsIGFhYmIgPSB0cnVlKSB7XG5cdFx0cmV0dXJuIFNBVCh0aGlzLCB0YXJnZXQsIHJlc3VsdCwgYWFiYik7XG5cdH1cblxuXHQvKipcblx0ICogUmV0dXJucyBhIGxpc3Qgb2YgcG90ZW50aWFsIGNvbGxpc2lvbnNcblx0ICogQHJldHVybnMge0FycmF5PEJvZHk+fVxuXHQgKi9cblx0cG90ZW50aWFscygpIHtcblx0XHRjb25zdCBidmggPSB0aGlzLl9idmg7XG5cblx0XHRpZihidmggPT09IG51bGwpIHtcblx0XHRcdHRocm93IG5ldyBFcnJvcignQm9keSBkb2VzIG5vdCBiZWxvbmcgdG8gYSBjb2xsaXNpb24gc3lzdGVtJyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGJ2aC5wb3RlbnRpYWxzKHRoaXMpO1xuXHR9XG5cblx0LyoqXG5cdCAqIFJlbW92ZXMgdGhlIGJvZHkgZnJvbSBpdHMgY3VycmVudCBjb2xsaXNpb24gc3lzdGVtXG5cdCAqL1xuXHRyZW1vdmUoKSB7XG5cdFx0Y29uc3QgYnZoID0gdGhpcy5fYnZoO1xuXG5cdFx0aWYoYnZoKSB7XG5cdFx0XHRidmgucmVtb3ZlKHRoaXMsIGZhbHNlKTtcblx0XHR9XG5cdH1cblxuXHQvKipcblx0ICogQ3JlYXRlcyBhIHtAbGluayBSZXN1bHR9IHVzZWQgdG8gY29sbGVjdCB0aGUgZGV0YWlsZWQgcmVzdWx0cyBvZiBhIGNvbGxpc2lvbiB0ZXN0XG5cdCAqL1xuXHRjcmVhdGVSZXN1bHQoKSB7XG5cdFx0cmV0dXJuIG5ldyBSZXN1bHQoKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDcmVhdGVzIGEgUmVzdWx0IHVzZWQgdG8gY29sbGVjdCB0aGUgZGV0YWlsZWQgcmVzdWx0cyBvZiBhIGNvbGxpc2lvbiB0ZXN0XG5cdCAqL1xuXHRzdGF0aWMgY3JlYXRlUmVzdWx0KCkge1xuXHRcdHJldHVybiBuZXcgUmVzdWx0KCk7XG5cdH1cbn07XG4iLCJpbXBvcnQgQm9keSBmcm9tICcuL0JvZHkubWpzJztcblxuLyoqXG4gKiBBIGNpcmNsZSB1c2VkIHRvIGRldGVjdCBjb2xsaXNpb25zXG4gKiBAY2xhc3NcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2lyY2xlIGV4dGVuZHMgQm9keSB7XG5cdC8qKlxuXHQgKiBAY29uc3RydWN0b3Jcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFt4ID0gMF0gVGhlIHN0YXJ0aW5nIFggY29vcmRpbmF0ZVxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3kgPSAwXSBUaGUgc3RhcnRpbmcgWSBjb29yZGluYXRlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcmFkaXVzID0gMF0gVGhlIHJhZGl1c1xuXHQgKiBAcGFyYW0ge051bWJlcn0gW3NjYWxlID0gMV0gVGhlIHNjYWxlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcGFkZGluZyA9IDBdIFRoZSBhbW91bnQgdG8gcGFkIHRoZSBib3VuZGluZyB2b2x1bWUgd2hlbiB0ZXN0aW5nIGZvciBwb3RlbnRpYWwgY29sbGlzaW9uc1xuXHQgKi9cblx0Y29uc3RydWN0b3IoeCA9IDAsIHkgPSAwLCByYWRpdXMgPSAwLCBzY2FsZSA9IDEsIHBhZGRpbmcgPSAwKSB7XG5cdFx0c3VwZXIoeCwgeSwgcGFkZGluZyk7XG5cblx0XHQvKipcblx0XHQgKiBAZGVzY1xuXHRcdCAqIEB0eXBlIHtOdW1iZXJ9XG5cdFx0ICovXG5cdFx0dGhpcy5yYWRpdXMgPSByYWRpdXM7XG5cblx0XHQvKipcblx0XHQgKiBAZGVzY1xuXHRcdCAqIEB0eXBlIHtOdW1iZXJ9XG5cdFx0ICovXG5cdFx0dGhpcy5zY2FsZSA9IHNjYWxlO1xuXHR9XG5cblx0LyoqXG5cdCAqIERyYXdzIHRoZSBjaXJjbGUgdG8gYSBDYW52YXNSZW5kZXJpbmdDb250ZXh0MkQncyBjdXJyZW50IHBhdGhcblx0ICogQHBhcmFtIHtDYW52YXNSZW5kZXJpbmdDb250ZXh0MkR9IGNvbnRleHQgVGhlIGNvbnRleHQgdG8gYWRkIHRoZSBhcmMgdG9cblx0ICovXG5cdGRyYXcoY29udGV4dCkge1xuXHRcdGNvbnN0IHggICAgICA9IHRoaXMueDtcblx0XHRjb25zdCB5ICAgICAgPSB0aGlzLnk7XG5cdFx0Y29uc3QgcmFkaXVzID0gdGhpcy5yYWRpdXMgKiB0aGlzLnNjYWxlO1xuXG5cdFx0Y29udGV4dC5tb3ZlVG8oeCArIHJhZGl1cywgeSk7XG5cdFx0Y29udGV4dC5hcmMoeCwgeSwgcmFkaXVzLCAwLCBNYXRoLlBJICogMik7XG5cdH1cbn07XG4iLCJpbXBvcnQgQm9keSBmcm9tICcuL0JvZHkubWpzJztcblxuLyoqXG4gKiBBIHBvbHlnb24gdXNlZCB0byBkZXRlY3QgY29sbGlzaW9uc1xuICogQGNsYXNzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvbHlnb24gZXh0ZW5kcyBCb2R5IHtcblx0LyoqXG5cdCAqIEBjb25zdHJ1Y3RvclxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3ggPSAwXSBUaGUgc3RhcnRpbmcgWCBjb29yZGluYXRlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbeSA9IDBdIFRoZSBzdGFydGluZyBZIGNvb3JkaW5hdGVcblx0ICogQHBhcmFtIHtBcnJheTxOdW1iZXJbXT59IFtwb2ludHMgPSBbXV0gQW4gYXJyYXkgb2YgY29vcmRpbmF0ZSBwYWlycyBtYWtpbmcgdXAgdGhlIHBvbHlnb24gLSBbW3gxLCB5MV0sIFt4MiwgeTJdLCAuLi5dXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbYW5nbGUgPSAwXSBUaGUgc3RhcnRpbmcgcm90YXRpb24gaW4gcmFkaWFuc1xuXHQgKiBAcGFyYW0ge051bWJlcn0gW3NjYWxlX3ggPSAxXSBUaGUgc3RhcnRpbmcgc2NhbGUgYWxvbmcgdGhlIFggYXhpc1xuXHQgKiBAcGFyYW0ge051bWJlcn0gW3NjYWxlX3kgPSAxXSBUaGUgc3RhcnRpbmcgc2NhbGUgbG9uZyB0aGUgWSBheGlzXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcGFkZGluZyA9IDBdIFRoZSBhbW91bnQgdG8gcGFkIHRoZSBib3VuZGluZyB2b2x1bWUgd2hlbiB0ZXN0aW5nIGZvciBwb3RlbnRpYWwgY29sbGlzaW9uc1xuXHQgKi9cblx0Y29uc3RydWN0b3IoeCA9IDAsIHkgPSAwLCBwb2ludHMgPSBbXSwgYW5nbGUgPSAwLCBzY2FsZV94ID0gMSwgc2NhbGVfeSA9IDEsIHBhZGRpbmcgPSAwKSB7XG5cdFx0c3VwZXIoeCwgeSwgcGFkZGluZyk7XG5cblx0XHQvKipcblx0XHQgKiBAZGVzYyBUaGUgYW5nbGUgb2YgdGhlIGJvZHkgaW4gcmFkaWFuc1xuXHRcdCAqIEB0eXBlIHtOdW1iZXJ9XG5cdFx0ICovXG5cdFx0dGhpcy5hbmdsZSA9IGFuZ2xlO1xuXG5cdFx0LyoqXG5cdFx0ICogQGRlc2MgVGhlIHNjYWxlIG9mIHRoZSBib2R5IGFsb25nIHRoZSBYIGF4aXNcblx0XHQgKiBAdHlwZSB7TnVtYmVyfVxuXHRcdCAqL1xuXHRcdHRoaXMuc2NhbGVfeCA9IHNjYWxlX3g7XG5cblx0XHQvKipcblx0XHQgKiBAZGVzYyBUaGUgc2NhbGUgb2YgdGhlIGJvZHkgYWxvbmcgdGhlIFkgYXhpc1xuXHRcdCAqIEB0eXBlIHtOdW1iZXJ9XG5cdFx0ICovXG5cdFx0dGhpcy5zY2FsZV95ID0gc2NhbGVfeTtcblxuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fcG9seWdvbiA9IHRydWU7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl94ID0geDtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX3kgPSB5O1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fYW5nbGUgPSBhbmdsZTtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX3NjYWxlX3ggPSBzY2FsZV94O1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fc2NhbGVfeSA9IHNjYWxlX3k7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9taW5feCA9IDA7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9taW5feSA9IDA7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9tYXhfeCA9IDA7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9tYXhfeSA9IDA7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9wb2ludHMgPSBudWxsO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fY29vcmRzID0gbnVsbDtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX2VkZ2VzID0gbnVsbDtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX25vcm1hbHMgPSBudWxsO1xuXG5cdFx0LyoqIEBwcml2YXRlICovXG5cdFx0dGhpcy5fZGlydHlfY29vcmRzID0gdHJ1ZTtcblxuXHRcdC8qKiBAcHJpdmF0ZSAqL1xuXHRcdHRoaXMuX2RpcnR5X25vcm1hbHMgPSB0cnVlO1xuXG5cdFx0UG9seWdvbi5wcm90b3R5cGUuc2V0UG9pbnRzLmNhbGwodGhpcywgcG9pbnRzKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBEcmF3cyB0aGUgcG9seWdvbiB0byBhIENhbnZhc1JlbmRlcmluZ0NvbnRleHQyRCdzIGN1cnJlbnQgcGF0aFxuXHQgKiBAcGFyYW0ge0NhbnZhc1JlbmRlcmluZ0NvbnRleHQyRH0gY29udGV4dCBUaGUgY29udGV4dCB0byBhZGQgdGhlIHNoYXBlIHRvXG5cdCAqL1xuXHRkcmF3KGNvbnRleHQpIHtcblx0XHRpZihcblx0XHRcdHRoaXMuX2RpcnR5X2Nvb3JkcyB8fFxuXHRcdFx0dGhpcy54ICAgICAgICE9PSB0aGlzLl94IHx8XG5cdFx0XHR0aGlzLnkgICAgICAgIT09IHRoaXMuX3kgfHxcblx0XHRcdHRoaXMuYW5nbGUgICAhPT0gdGhpcy5fYW5nbGUgfHxcblx0XHRcdHRoaXMuc2NhbGVfeCAhPT0gdGhpcy5fc2NhbGVfeCB8fFxuXHRcdFx0dGhpcy5zY2FsZV95ICE9PSB0aGlzLl9zY2FsZV95XG5cdFx0KSB7XG5cdFx0XHR0aGlzLl9jYWxjdWxhdGVDb29yZHMoKTtcblx0XHR9XG5cblx0XHRjb25zdCBjb29yZHMgPSB0aGlzLl9jb29yZHM7XG5cblx0XHRpZihjb29yZHMubGVuZ3RoID09PSAyKSB7XG5cdFx0XHRjb250ZXh0Lm1vdmVUbyhjb29yZHNbMF0sIGNvb3Jkc1sxXSk7XG5cdFx0XHRjb250ZXh0LmFyYyhjb29yZHNbMF0sIGNvb3Jkc1sxXSwgMSwgMCwgTWF0aC5QSSAqIDIpO1xuXHRcdH1cblx0XHRlbHNlIHtcblx0XHRcdGNvbnRleHQubW92ZVRvKGNvb3Jkc1swXSwgY29vcmRzWzFdKTtcblxuXHRcdFx0Zm9yKGxldCBpID0gMjsgaSA8IGNvb3Jkcy5sZW5ndGg7IGkgKz0gMikge1xuXHRcdFx0XHRjb250ZXh0LmxpbmVUbyhjb29yZHNbaV0sIGNvb3Jkc1tpICsgMV0pO1xuXHRcdFx0fVxuXG5cdFx0XHRpZihjb29yZHMubGVuZ3RoID4gNCkge1xuXHRcdFx0XHRjb250ZXh0LmxpbmVUbyhjb29yZHNbMF0sIGNvb3Jkc1sxXSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0LyoqXG5cdCAqIFNldHMgdGhlIHBvaW50cyBtYWtpbmcgdXAgdGhlIHBvbHlnb24uIEl0J3MgaW1wb3J0YW50IHRvIHVzZSB0aGlzIGZ1bmN0aW9uIHdoZW4gY2hhbmdpbmcgdGhlIHBvbHlnb24ncyBzaGFwZSB0byBlbnN1cmUgaW50ZXJuYWwgZGF0YSBpcyBhbHNvIHVwZGF0ZWQuXG5cdCAqIEBwYXJhbSB7QXJyYXk8TnVtYmVyW10+fSBuZXdfcG9pbnRzIEFuIGFycmF5IG9mIGNvb3JkaW5hdGUgcGFpcnMgbWFraW5nIHVwIHRoZSBwb2x5Z29uIC0gW1t4MSwgeTFdLCBbeDIsIHkyXSwgLi4uXVxuXHQgKi9cblx0c2V0UG9pbnRzKG5ld19wb2ludHMpIHtcblx0XHRjb25zdCBjb3VudCA9IG5ld19wb2ludHMubGVuZ3RoO1xuXG5cdFx0dGhpcy5fcG9pbnRzICA9IG5ldyBGbG9hdDY0QXJyYXkoY291bnQgKiAyKTtcblx0XHR0aGlzLl9jb29yZHMgID0gbmV3IEZsb2F0NjRBcnJheShjb3VudCAqIDIpO1xuXHRcdHRoaXMuX2VkZ2VzICAgPSBuZXcgRmxvYXQ2NEFycmF5KGNvdW50ICogMik7XG5cdFx0dGhpcy5fbm9ybWFscyA9IG5ldyBGbG9hdDY0QXJyYXkoY291bnQgKiAyKTtcblxuXHRcdGNvbnN0IHBvaW50cyA9IHRoaXMuX3BvaW50cztcblxuXHRcdGZvcihsZXQgaSA9IDAsIGl4ID0gMCwgaXkgPSAxOyBpIDwgY291bnQ7ICsraSwgaXggKz0gMiwgaXkgKz0gMikge1xuXHRcdFx0Y29uc3QgbmV3X3BvaW50ID0gbmV3X3BvaW50c1tpXTtcblxuXHRcdFx0cG9pbnRzW2l4XSA9IG5ld19wb2ludFswXTtcblx0XHRcdHBvaW50c1tpeV0gPSBuZXdfcG9pbnRbMV07XG5cdFx0fVxuXG5cdFx0dGhpcy5fZGlydHlfY29vcmRzID0gdHJ1ZTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDYWxjdWxhdGVzIGFuZCBjYWNoZXMgdGhlIHBvbHlnb24ncyB3b3JsZCBjb29yZGluYXRlcyBiYXNlZCBvbiBpdHMgcG9pbnRzLCBhbmdsZSwgYW5kIHNjYWxlXG5cdCAqL1xuXHRfY2FsY3VsYXRlQ29vcmRzKCkge1xuXHRcdGNvbnN0IHggICAgICAgPSB0aGlzLng7XG5cdFx0Y29uc3QgeSAgICAgICA9IHRoaXMueTtcblx0XHRjb25zdCBhbmdsZSAgID0gdGhpcy5hbmdsZTtcblx0XHRjb25zdCBzY2FsZV94ID0gdGhpcy5zY2FsZV94O1xuXHRcdGNvbnN0IHNjYWxlX3kgPSB0aGlzLnNjYWxlX3k7XG5cdFx0Y29uc3QgcG9pbnRzICA9IHRoaXMuX3BvaW50cztcblx0XHRjb25zdCBjb29yZHMgID0gdGhpcy5fY29vcmRzO1xuXHRcdGNvbnN0IGNvdW50ICAgPSBwb2ludHMubGVuZ3RoO1xuXG5cdFx0bGV0IG1pbl94O1xuXHRcdGxldCBtYXhfeDtcblx0XHRsZXQgbWluX3k7XG5cdFx0bGV0IG1heF95O1xuXG5cdFx0Zm9yKGxldCBpeCA9IDAsIGl5ID0gMTsgaXggPCBjb3VudDsgaXggKz0gMiwgaXkgKz0gMikge1xuXHRcdFx0bGV0IGNvb3JkX3ggPSBwb2ludHNbaXhdICogc2NhbGVfeDtcblx0XHRcdGxldCBjb29yZF95ID0gcG9pbnRzW2l5XSAqIHNjYWxlX3k7XG5cblx0XHRcdGlmKGFuZ2xlKSB7XG5cdFx0XHRcdGNvbnN0IGNvcyAgID0gTWF0aC5jb3MoYW5nbGUpO1xuXHRcdFx0XHRjb25zdCBzaW4gICA9IE1hdGguc2luKGFuZ2xlKTtcblx0XHRcdFx0Y29uc3QgdG1wX3ggPSBjb29yZF94O1xuXHRcdFx0XHRjb25zdCB0bXBfeSA9IGNvb3JkX3k7XG5cblx0XHRcdFx0Y29vcmRfeCA9IHRtcF94ICogY29zIC0gdG1wX3kgKiBzaW47XG5cdFx0XHRcdGNvb3JkX3kgPSB0bXBfeCAqIHNpbiArIHRtcF95ICogY29zO1xuXHRcdFx0fVxuXG5cdFx0XHRjb29yZF94ICs9IHg7XG5cdFx0XHRjb29yZF95ICs9IHk7XG5cblx0XHRcdGNvb3Jkc1tpeF0gPSBjb29yZF94O1xuXHRcdFx0Y29vcmRzW2l5XSA9IGNvb3JkX3k7XG5cblx0XHRcdGlmKGl4ID09PSAwKSB7XG5cdFx0XHRcdG1pbl94ID0gbWF4X3ggPSBjb29yZF94O1xuXHRcdFx0XHRtaW5feSA9IG1heF95ID0gY29vcmRfeTtcblx0XHRcdH1cblx0XHRcdGVsc2Uge1xuXHRcdFx0XHRpZihjb29yZF94IDwgbWluX3gpIHtcblx0XHRcdFx0XHRtaW5feCA9IGNvb3JkX3g7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZihjb29yZF94ID4gbWF4X3gpIHtcblx0XHRcdFx0XHRtYXhfeCA9IGNvb3JkX3g7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZihjb29yZF95IDwgbWluX3kpIHtcblx0XHRcdFx0XHRtaW5feSA9IGNvb3JkX3k7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZWxzZSBpZihjb29yZF95ID4gbWF4X3kpIHtcblx0XHRcdFx0XHRtYXhfeSA9IGNvb3JkX3k7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHR0aGlzLl94ICAgICAgICAgICAgID0geDtcblx0XHR0aGlzLl95ICAgICAgICAgICAgID0geTtcblx0XHR0aGlzLl9hbmdsZSAgICAgICAgID0gYW5nbGU7XG5cdFx0dGhpcy5fc2NhbGVfeCAgICAgICA9IHNjYWxlX3g7XG5cdFx0dGhpcy5fc2NhbGVfeSAgICAgICA9IHNjYWxlX3k7XG5cdFx0dGhpcy5fbWluX3ggICAgICAgICA9IG1pbl94O1xuXHRcdHRoaXMuX21pbl95ICAgICAgICAgPSBtaW5feTtcblx0XHR0aGlzLl9tYXhfeCAgICAgICAgID0gbWF4X3g7XG5cdFx0dGhpcy5fbWF4X3kgICAgICAgICA9IG1heF95O1xuXHRcdHRoaXMuX2RpcnR5X2Nvb3JkcyAgPSBmYWxzZTtcblx0XHR0aGlzLl9kaXJ0eV9ub3JtYWxzID0gdHJ1ZTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDYWxjdWxhdGVzIHRoZSBub3JtYWxzIGFuZCBlZGdlcyBvZiB0aGUgcG9seWdvbidzIHNpZGVzXG5cdCAqL1xuXHRfY2FsY3VsYXRlTm9ybWFscygpIHtcblx0XHRjb25zdCBjb29yZHMgID0gdGhpcy5fY29vcmRzO1xuXHRcdGNvbnN0IGVkZ2VzICAgPSB0aGlzLl9lZGdlcztcblx0XHRjb25zdCBub3JtYWxzID0gdGhpcy5fbm9ybWFscztcblx0XHRjb25zdCBjb3VudCAgID0gY29vcmRzLmxlbmd0aDtcblxuXHRcdGZvcihsZXQgaXggPSAwLCBpeSA9IDE7IGl4IDwgY291bnQ7IGl4ICs9IDIsIGl5ICs9IDIpIHtcblx0XHRcdGNvbnN0IG5leHQgICA9IGl4ICsgMiA8IGNvdW50ID8gaXggKyAyIDogMDtcblx0XHRcdGNvbnN0IHggICAgICA9IGNvb3Jkc1tuZXh0XSAtIGNvb3Jkc1tpeF07XG5cdFx0XHRjb25zdCB5ICAgICAgPSBjb29yZHNbbmV4dCArIDFdIC0gY29vcmRzW2l5XTtcblx0XHRcdGNvbnN0IGxlbmd0aCA9IHggfHwgeSA/IE1hdGguc3FydCh4ICogeCArIHkgKiB5KSA6IDA7XG5cblx0XHRcdGVkZ2VzW2l4XSAgID0geDtcblx0XHRcdGVkZ2VzW2l5XSAgID0geTtcblx0XHRcdG5vcm1hbHNbaXhdID0gbGVuZ3RoID8geSAvIGxlbmd0aCA6IDA7XG5cdFx0XHRub3JtYWxzW2l5XSA9IGxlbmd0aCA/IC14IC8gbGVuZ3RoIDogMDtcblx0XHR9XG5cblx0XHR0aGlzLl9kaXJ0eV9ub3JtYWxzID0gZmFsc2U7XG5cdH1cbn07XG4iLCJpbXBvcnQgUG9seWdvbiBmcm9tICcuL1BvbHlnb24ubWpzJztcblxuLyoqXG4gKiBBIHBvaW50IHVzZWQgdG8gZGV0ZWN0IGNvbGxpc2lvbnNcbiAqIEBjbGFzc1xuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBQb2ludCBleHRlbmRzIFBvbHlnb24ge1xuXHQvKipcblx0ICogQGNvbnN0cnVjdG9yXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbeCA9IDBdIFRoZSBzdGFydGluZyBYIGNvb3JkaW5hdGVcblx0ICogQHBhcmFtIHtOdW1iZXJ9IFt5ID0gMF0gVGhlIHN0YXJ0aW5nIFkgY29vcmRpbmF0ZVxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3BhZGRpbmcgPSAwXSBUaGUgYW1vdW50IHRvIHBhZCB0aGUgYm91bmRpbmcgdm9sdW1lIHdoZW4gdGVzdGluZyBmb3IgcG90ZW50aWFsIGNvbGxpc2lvbnNcblx0ICovXG5cdGNvbnN0cnVjdG9yKHggPSAwLCB5ID0gMCwgcGFkZGluZyA9IDApIHtcblx0XHRzdXBlcih4LCB5LCBbWzAsIDBdXSwgMCwgMSwgMSwgcGFkZGluZyk7XG5cblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9wb2ludCA9IHRydWU7XG5cdH1cbn07XG5cblBvaW50LnByb3RvdHlwZS5zZXRQb2ludHMgPSB1bmRlZmluZWQ7XG4iLCJpbXBvcnQgQlZIICAgICBmcm9tICcuL21vZHVsZXMvQlZILm1qcyc7XG5pbXBvcnQgQ2lyY2xlICBmcm9tICcuL21vZHVsZXMvQ2lyY2xlLm1qcyc7XG5pbXBvcnQgUG9seWdvbiBmcm9tICcuL21vZHVsZXMvUG9seWdvbi5tanMnO1xuaW1wb3J0IFBvaW50ICAgZnJvbSAnLi9tb2R1bGVzL1BvaW50Lm1qcyc7XG5pbXBvcnQgUmVzdWx0ICBmcm9tICcuL21vZHVsZXMvUmVzdWx0Lm1qcyc7XG5pbXBvcnQgU0FUICAgICBmcm9tICcuL21vZHVsZXMvU0FULm1qcyc7XG5cbi8qKlxuICogQSBjb2xsaXNpb24gc3lzdGVtIHVzZWQgdG8gdHJhY2sgYm9kaWVzIGluIG9yZGVyIHRvIGltcHJvdmUgY29sbGlzaW9uIGRldGVjdGlvbiBwZXJmb3JtYW5jZVxuICogQGNsYXNzXG4gKi9cbmNsYXNzIENvbGxpc2lvbnMge1xuXHQvKipcblx0ICogQGNvbnN0cnVjdG9yXG5cdCAqL1xuXHRjb25zdHJ1Y3RvcigpIHtcblx0XHQvKiogQHByaXZhdGUgKi9cblx0XHR0aGlzLl9idmggPSBuZXcgQlZIKCk7XG5cdH1cblxuXHQvKipcblx0ICogQ3JlYXRlcyBhIHtAbGluayBDaXJjbGV9IGFuZCBpbnNlcnRzIGl0IGludG8gdGhlIGNvbGxpc2lvbiBzeXN0ZW1cblx0ICogQHBhcmFtIHtOdW1iZXJ9IFt4ID0gMF0gVGhlIHN0YXJ0aW5nIFggY29vcmRpbmF0ZVxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3kgPSAwXSBUaGUgc3RhcnRpbmcgWSBjb29yZGluYXRlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcmFkaXVzID0gMF0gVGhlIHJhZGl1c1xuXHQgKiBAcGFyYW0ge051bWJlcn0gW3NjYWxlID0gMV0gVGhlIHNjYWxlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcGFkZGluZyA9IDBdIFRoZSBhbW91bnQgdG8gcGFkIHRoZSBib3VuZGluZyB2b2x1bWUgd2hlbiB0ZXN0aW5nIGZvciBwb3RlbnRpYWwgY29sbGlzaW9uc1xuXHQgKiBAcmV0dXJucyB7Q2lyY2xlfVxuXHQgKi9cblx0Y3JlYXRlQ2lyY2xlKHggPSAwLCB5ID0gMCwgcmFkaXVzID0gMCwgc2NhbGUgPSAxLCBwYWRkaW5nID0gMCkge1xuXHRcdGNvbnN0IGJvZHkgPSBuZXcgQ2lyY2xlKHgsIHksIHJhZGl1cywgc2NhbGUsIHBhZGRpbmcpO1xuXG5cdFx0dGhpcy5fYnZoLmluc2VydChib2R5KTtcblxuXHRcdHJldHVybiBib2R5O1xuXHR9XG5cblx0LyoqXG5cdCAqIENyZWF0ZXMgYSB7QGxpbmsgUG9seWdvbn0gYW5kIGluc2VydHMgaXQgaW50byB0aGUgY29sbGlzaW9uIHN5c3RlbVxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3ggPSAwXSBUaGUgc3RhcnRpbmcgWCBjb29yZGluYXRlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbeSA9IDBdIFRoZSBzdGFydGluZyBZIGNvb3JkaW5hdGVcblx0ICogQHBhcmFtIHtBcnJheTxOdW1iZXJbXT59IFtwb2ludHMgPSBbXV0gQW4gYXJyYXkgb2YgY29vcmRpbmF0ZSBwYWlycyBtYWtpbmcgdXAgdGhlIHBvbHlnb24gLSBbW3gxLCB5MV0sIFt4MiwgeTJdLCAuLi5dXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbYW5nbGUgPSAwXSBUaGUgc3RhcnRpbmcgcm90YXRpb24gaW4gcmFkaWFuc1xuXHQgKiBAcGFyYW0ge051bWJlcn0gW3NjYWxlX3ggPSAxXSBUaGUgc3RhcnRpbmcgc2NhbGUgYWxvbmcgdGhlIFggYXhpc1xuXHQgKiBAcGFyYW0ge051bWJlcn0gW3NjYWxlX3kgPSAxXSBUaGUgc3RhcnRpbmcgc2NhbGUgbG9uZyB0aGUgWSBheGlzXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcGFkZGluZyA9IDBdIFRoZSBhbW91bnQgdG8gcGFkIHRoZSBib3VuZGluZyB2b2x1bWUgd2hlbiB0ZXN0aW5nIGZvciBwb3RlbnRpYWwgY29sbGlzaW9uc1xuXHQgKiBAcmV0dXJucyB7UG9seWdvbn1cblx0ICovXG5cdGNyZWF0ZVBvbHlnb24oeCA9IDAsIHkgPSAwLCBwb2ludHMgPSBbWzAsIDBdXSwgYW5nbGUgPSAwLCBzY2FsZV94ID0gMSwgc2NhbGVfeSA9IDEsIHBhZGRpbmcgPSAwKSB7XG5cdFx0Y29uc3QgYm9keSA9IG5ldyBQb2x5Z29uKHgsIHksIHBvaW50cywgYW5nbGUsIHNjYWxlX3gsIHNjYWxlX3ksIHBhZGRpbmcpO1xuXG5cdFx0dGhpcy5fYnZoLmluc2VydChib2R5KTtcblxuXHRcdHJldHVybiBib2R5O1xuXHR9XG5cblx0LyoqXG5cdCAqIENyZWF0ZXMgYSB7QGxpbmsgUG9pbnR9IGFuZCBpbnNlcnRzIGl0IGludG8gdGhlIGNvbGxpc2lvbiBzeXN0ZW1cblx0ICogQHBhcmFtIHtOdW1iZXJ9IFt4ID0gMF0gVGhlIHN0YXJ0aW5nIFggY29vcmRpbmF0ZVxuXHQgKiBAcGFyYW0ge051bWJlcn0gW3kgPSAwXSBUaGUgc3RhcnRpbmcgWSBjb29yZGluYXRlXG5cdCAqIEBwYXJhbSB7TnVtYmVyfSBbcGFkZGluZyA9IDBdIFRoZSBhbW91bnQgdG8gcGFkIHRoZSBib3VuZGluZyB2b2x1bWUgd2hlbiB0ZXN0aW5nIGZvciBwb3RlbnRpYWwgY29sbGlzaW9uc1xuXHQgKiBAcmV0dXJucyB7UG9pbnR9XG5cdCAqL1xuXHRjcmVhdGVQb2ludCh4ID0gMCwgeSA9IDAsIHBhZGRpbmcgPSAwKSB7XG5cdFx0Y29uc3QgYm9keSA9IG5ldyBQb2ludCh4LCB5LCBwYWRkaW5nKTtcblxuXHRcdHRoaXMuX2J2aC5pbnNlcnQoYm9keSk7XG5cblx0XHRyZXR1cm4gYm9keTtcblx0fVxuXG5cdC8qKlxuXHQgKiBDcmVhdGVzIGEge0BsaW5rIFJlc3VsdH0gdXNlZCB0byBjb2xsZWN0IHRoZSBkZXRhaWxlZCByZXN1bHRzIG9mIGEgY29sbGlzaW9uIHRlc3Rcblx0ICovXG5cdGNyZWF0ZVJlc3VsdCgpIHtcblx0XHRyZXR1cm4gbmV3IFJlc3VsdCgpO1xuXHR9XG5cblx0LyoqXG5cdCAqIENyZWF0ZXMgYSBSZXN1bHQgdXNlZCB0byBjb2xsZWN0IHRoZSBkZXRhaWxlZCByZXN1bHRzIG9mIGEgY29sbGlzaW9uIHRlc3Rcblx0ICovXG5cdHN0YXRpYyBjcmVhdGVSZXN1bHQoKSB7XG5cdFx0cmV0dXJuIG5ldyBSZXN1bHQoKTtcblx0fVxuXG5cdC8qKlxuXHQgKiBJbnNlcnRzIGJvZGllcyBpbnRvIHRoZSBjb2xsaXNpb24gc3lzdGVtXG5cdCAqIEBwYXJhbSB7Li4uQ2lyY2xlfC4uLlBvbHlnb258Li4uUG9pbnR9IGJvZGllc1xuXHQgKi9cblx0aW5zZXJ0KC4uLmJvZGllcykge1xuXHRcdGZvcihjb25zdCBib2R5IG9mIGJvZGllcykge1xuXHRcdFx0dGhpcy5fYnZoLmluc2VydChib2R5LCBmYWxzZSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH1cblxuXHQvKipcblx0ICogUmVtb3ZlcyBib2RpZXMgZnJvbSB0aGUgY29sbGlzaW9uIHN5c3RlbVxuXHQgKiBAcGFyYW0gey4uLkNpcmNsZXwuLi5Qb2x5Z29ufC4uLlBvaW50fSBib2RpZXNcblx0ICovXG5cdHJlbW92ZSguLi5ib2RpZXMpIHtcblx0XHRmb3IoY29uc3QgYm9keSBvZiBib2RpZXMpIHtcblx0XHRcdHRoaXMuX2J2aC5yZW1vdmUoYm9keSwgZmFsc2UpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9XG5cblx0LyoqXG5cdCAqIFVwZGF0ZXMgdGhlIGNvbGxpc2lvbiBzeXN0ZW0uIFRoaXMgc2hvdWxkIGJlIGNhbGxlZCBiZWZvcmUgYW55IGNvbGxpc2lvbnMgYXJlIHRlc3RlZC5cblx0ICovXG5cdHVwZGF0ZSgpIHtcblx0XHR0aGlzLl9idmgudXBkYXRlKCk7XG5cblx0XHRyZXR1cm4gdGhpcztcblx0fVxuXG5cdC8qKlxuXHQgKiBEcmF3cyB0aGUgYm9kaWVzIHdpdGhpbiB0aGUgc3lzdGVtIHRvIGEgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEJ3MgY3VycmVudCBwYXRoXG5cdCAqIEBwYXJhbSB7Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEfSBjb250ZXh0IFRoZSBjb250ZXh0IHRvIGRyYXcgdG9cblx0ICovXG5cdGRyYXcoY29udGV4dCkge1xuXHRcdHJldHVybiB0aGlzLl9idmguZHJhdyhjb250ZXh0KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBEcmF3cyB0aGUgc3lzdGVtJ3MgQlZIIHRvIGEgQ2FudmFzUmVuZGVyaW5nQ29udGV4dDJEJ3MgY3VycmVudCBwYXRoLiBUaGlzIGlzIHVzZWZ1bCBmb3IgdGVzdGluZyBvdXQgZGlmZmVyZW50IHBhZGRpbmcgdmFsdWVzIGZvciBib2RpZXMuXG5cdCAqIEBwYXJhbSB7Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEfSBjb250ZXh0IFRoZSBjb250ZXh0IHRvIGRyYXcgdG9cblx0ICovXG5cdGRyYXdCVkgoY29udGV4dCkge1xuXHRcdHJldHVybiB0aGlzLl9idmguZHJhd0JWSChjb250ZXh0KTtcblx0fVxuXG5cdC8qKlxuXHQgKiBSZXR1cm5zIGEgbGlzdCBvZiBwb3RlbnRpYWwgY29sbGlzaW9ucyBmb3IgYSBib2R5XG5cdCAqIEBwYXJhbSB7Q2lyY2xlfFBvbHlnb258UG9pbnR9IGJvZHkgVGhlIGJvZHkgdG8gdGVzdCBmb3IgcG90ZW50aWFsIGNvbGxpc2lvbnMgYWdhaW5zdFxuXHQgKiBAcmV0dXJucyB7QXJyYXk8Qm9keT59XG5cdCAqL1xuXHRwb3RlbnRpYWxzKGJvZHkpIHtcblx0XHRyZXR1cm4gdGhpcy5fYnZoLnBvdGVudGlhbHMoYm9keSk7XG5cdH1cblxuXHQvKipcblx0ICogRGV0ZXJtaW5lcyBpZiB0d28gYm9kaWVzIGFyZSBjb2xsaWRpbmdcblx0ICogQHBhcmFtIHtDaXJjbGV8UG9seWdvbnxQb2ludH0gdGFyZ2V0IFRoZSB0YXJnZXQgYm9keSB0byB0ZXN0IGFnYWluc3Rcblx0ICogQHBhcmFtIHtSZXN1bHR9IFtyZXN1bHQgPSBudWxsXSBBIFJlc3VsdCBvYmplY3Qgb24gd2hpY2ggdG8gc3RvcmUgaW5mb3JtYXRpb24gYWJvdXQgdGhlIGNvbGxpc2lvblxuXHQgKiBAcGFyYW0ge0Jvb2xlYW59IFthYWJiID0gdHJ1ZV0gU2V0IHRvIGZhbHNlIHRvIHNraXAgdGhlIEFBQkIgdGVzdCAodXNlZnVsIGlmIHlvdSB1c2UgeW91ciBvd24gcG90ZW50aWFsIGNvbGxpc2lvbiBoZXVyaXN0aWMpXG5cdCAqIEByZXR1cm5zIHtCb29sZWFufVxuXHQgKi9cblx0Y29sbGlkZXMoc291cmNlLCB0YXJnZXQsIHJlc3VsdCA9IG51bGwsIGFhYmIgPSB0cnVlKSB7XG5cdFx0cmV0dXJuIFNBVChzb3VyY2UsIHRhcmdldCwgcmVzdWx0LCBhYWJiKTtcblx0fVxufTtcblxuZXhwb3J0IHtcblx0Q29sbGlzaW9ucyBhcyBkZWZhdWx0LFxuXHRDb2xsaXNpb25zLFxuXHRSZXN1bHQsXG5cdENpcmNsZSxcblx0UG9seWdvbixcblx0UG9pbnQsXG59O1xuIiwidmFyIF9leHRlbmRzID0gT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbiAodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV07IGZvciAodmFyIGtleSBpbiBzb3VyY2UpIHsgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzb3VyY2UsIGtleSkpIHsgdGFyZ2V0W2tleV0gPSBzb3VyY2Vba2V5XTsgfSB9IH0gcmV0dXJuIHRhcmdldDsgfTtcblxuZnVuY3Rpb24gX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzKG9iaiwga2V5cykgeyB2YXIgdGFyZ2V0ID0ge307IGZvciAodmFyIGkgaW4gb2JqKSB7IGlmIChrZXlzLmluZGV4T2YoaSkgPj0gMCkgY29udGludWU7IGlmICghT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgaSkpIGNvbnRpbnVlOyB0YXJnZXRbaV0gPSBvYmpbaV07IH0gcmV0dXJuIHRhcmdldDsgfVxuXG52YXIgdG9Qb2ludHMgPSBmdW5jdGlvbiB0b1BvaW50cyhfcmVmKSB7XG4gIHZhciB0eXBlID0gX3JlZi50eXBlLFxuICAgICAgcHJvcHMgPSBfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMoX3JlZiwgWyd0eXBlJ10pO1xuXG4gIHN3aXRjaCAodHlwZSkge1xuICAgIGNhc2UgJ2NpcmNsZSc6XG4gICAgICByZXR1cm4gZ2V0UG9pbnRzRnJvbUNpcmNsZShwcm9wcyk7XG4gICAgY2FzZSAnZWxsaXBzZSc6XG4gICAgICByZXR1cm4gZ2V0UG9pbnRzRnJvbUVsbGlwc2UocHJvcHMpO1xuICAgIGNhc2UgJ2xpbmUnOlxuICAgICAgcmV0dXJuIGdldFBvaW50c0Zyb21MaW5lKHByb3BzKTtcbiAgICBjYXNlICdwYXRoJzpcbiAgICAgIHJldHVybiBnZXRQb2ludHNGcm9tUGF0aChwcm9wcyk7XG4gICAgY2FzZSAncG9seWdvbic6XG4gICAgICByZXR1cm4gZ2V0UG9pbnRzRnJvbVBvbHlnb24ocHJvcHMpO1xuICAgIGNhc2UgJ3BvbHlsaW5lJzpcbiAgICAgIHJldHVybiBnZXRQb2ludHNGcm9tUG9seWxpbmUocHJvcHMpO1xuICAgIGNhc2UgJ3JlY3QnOlxuICAgICAgcmV0dXJuIGdldFBvaW50c0Zyb21SZWN0KHByb3BzKTtcbiAgICBjYXNlICdnJzpcbiAgICAgIHJldHVybiBnZXRQb2ludHNGcm9tRyhwcm9wcyk7XG4gICAgZGVmYXVsdDpcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm90IGEgdmFsaWQgc2hhcGUgdHlwZScpO1xuICB9XG59O1xuXG52YXIgZ2V0UG9pbnRzRnJvbUNpcmNsZSA9IGZ1bmN0aW9uIGdldFBvaW50c0Zyb21DaXJjbGUoX3JlZjIpIHtcbiAgdmFyIGN4ID0gX3JlZjIuY3gsXG4gICAgICBjeSA9IF9yZWYyLmN5LFxuICAgICAgciA9IF9yZWYyLnI7XG5cbiAgcmV0dXJuIFt7IHg6IGN4LCB5OiBjeSAtIHIsIG1vdmVUbzogdHJ1ZSB9LCB7IHg6IGN4LCB5OiBjeSArIHIsIGN1cnZlOiB7IHR5cGU6ICdhcmMnLCByeDogciwgcnk6IHIsIHN3ZWVwRmxhZzogMSB9IH0sIHsgeDogY3gsIHk6IGN5IC0gciwgY3VydmU6IHsgdHlwZTogJ2FyYycsIHJ4OiByLCByeTogciwgc3dlZXBGbGFnOiAxIH0gfV07XG59O1xuXG52YXIgZ2V0UG9pbnRzRnJvbUVsbGlwc2UgPSBmdW5jdGlvbiBnZXRQb2ludHNGcm9tRWxsaXBzZShfcmVmMykge1xuICB2YXIgY3ggPSBfcmVmMy5jeCxcbiAgICAgIGN5ID0gX3JlZjMuY3ksXG4gICAgICByeCA9IF9yZWYzLnJ4LFxuICAgICAgcnkgPSBfcmVmMy5yeTtcblxuICByZXR1cm4gW3sgeDogY3gsIHk6IGN5IC0gcnksIG1vdmVUbzogdHJ1ZSB9LCB7IHg6IGN4LCB5OiBjeSArIHJ5LCBjdXJ2ZTogeyB0eXBlOiAnYXJjJywgcng6IHJ4LCByeTogcnksIHN3ZWVwRmxhZzogMSB9IH0sIHsgeDogY3gsIHk6IGN5IC0gcnksIGN1cnZlOiB7IHR5cGU6ICdhcmMnLCByeDogcngsIHJ5OiByeSwgc3dlZXBGbGFnOiAxIH0gfV07XG59O1xuXG52YXIgZ2V0UG9pbnRzRnJvbUxpbmUgPSBmdW5jdGlvbiBnZXRQb2ludHNGcm9tTGluZShfcmVmNCkge1xuICB2YXIgeDEgPSBfcmVmNC54MSxcbiAgICAgIHgyID0gX3JlZjQueDIsXG4gICAgICB5MSA9IF9yZWY0LnkxLFxuICAgICAgeTIgPSBfcmVmNC55MjtcblxuICByZXR1cm4gW3sgeDogeDEsIHk6IHkxLCBtb3ZlVG86IHRydWUgfSwgeyB4OiB4MiwgeTogeTIgfV07XG59O1xuXG52YXIgdmFsaWRDb21tYW5kcyA9IC9bTW1MbEhoVnZDY1NzUXFUdEFhWnpdL2c7XG5cbnZhciBjb21tYW5kTGVuZ3RocyA9IHtcbiAgQTogNyxcbiAgQzogNixcbiAgSDogMSxcbiAgTDogMixcbiAgTTogMixcbiAgUTogNCxcbiAgUzogNCxcbiAgVDogMixcbiAgVjogMSxcbiAgWjogMFxufTtcblxudmFyIHJlbGF0aXZlQ29tbWFuZHMgPSBbJ2EnLCAnYycsICdoJywgJ2wnLCAnbScsICdxJywgJ3MnLCAndCcsICd2J107XG5cbnZhciBpc1JlbGF0aXZlID0gZnVuY3Rpb24gaXNSZWxhdGl2ZShjb21tYW5kKSB7XG4gIHJldHVybiByZWxhdGl2ZUNvbW1hbmRzLmluZGV4T2YoY29tbWFuZCkgIT09IC0xO1xufTtcblxudmFyIG9wdGlvbmFsQXJjS2V5cyA9IFsneEF4aXNSb3RhdGlvbicsICdsYXJnZUFyY0ZsYWcnLCAnc3dlZXBGbGFnJ107XG5cbnZhciBnZXRDb21tYW5kcyA9IGZ1bmN0aW9uIGdldENvbW1hbmRzKGQpIHtcbiAgcmV0dXJuIGQubWF0Y2godmFsaWRDb21tYW5kcyk7XG59O1xuXG52YXIgZ2V0UGFyYW1zID0gZnVuY3Rpb24gZ2V0UGFyYW1zKGQpIHtcbiAgcmV0dXJuIGQuc3BsaXQodmFsaWRDb21tYW5kcykubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgcmV0dXJuIHYucmVwbGFjZSgvWzAtOV0rLS9nLCBmdW5jdGlvbiAobSkge1xuICAgICAgcmV0dXJuIG0uc2xpY2UoMCwgLTEpICsgJyAtJztcbiAgICB9KTtcbiAgfSkubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgcmV0dXJuIHYucmVwbGFjZSgvXFwuWzAtOV0rL2csIGZ1bmN0aW9uIChtKSB7XG4gICAgICByZXR1cm4gbSArICcgJztcbiAgICB9KTtcbiAgfSkubWFwKGZ1bmN0aW9uICh2KSB7XG4gICAgcmV0dXJuIHYudHJpbSgpO1xuICB9KS5maWx0ZXIoZnVuY3Rpb24gKHYpIHtcbiAgICByZXR1cm4gdi5sZW5ndGggPiAwO1xuICB9KS5tYXAoZnVuY3Rpb24gKHYpIHtcbiAgICByZXR1cm4gdi5zcGxpdCgvWyAsXSsvKS5tYXAocGFyc2VGbG9hdCkuZmlsdGVyKGZ1bmN0aW9uIChuKSB7XG4gICAgICByZXR1cm4gIWlzTmFOKG4pO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbnZhciBnZXRQb2ludHNGcm9tUGF0aCA9IGZ1bmN0aW9uIGdldFBvaW50c0Zyb21QYXRoKF9yZWY1KSB7XG4gIHZhciBkID0gX3JlZjUuZDtcblxuICB2YXIgY29tbWFuZHMgPSBnZXRDb21tYW5kcyhkKTtcbiAgdmFyIHBhcmFtcyA9IGdldFBhcmFtcyhkKTtcblxuICB2YXIgcG9pbnRzID0gW107XG5cbiAgdmFyIG1vdmVUbyA9IHZvaWQgMDtcblxuICBmb3IgKHZhciBpID0gMCwgbCA9IGNvbW1hbmRzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIHZhciBjb21tYW5kID0gY29tbWFuZHNbaV07XG4gICAgdmFyIHVwcGVyQ2FzZUNvbW1hbmQgPSBjb21tYW5kLnRvVXBwZXJDYXNlKCk7XG4gICAgdmFyIGNvbW1hbmRMZW5ndGggPSBjb21tYW5kTGVuZ3Roc1t1cHBlckNhc2VDb21tYW5kXTtcbiAgICB2YXIgcmVsYXRpdmUgPSBpc1JlbGF0aXZlKGNvbW1hbmQpO1xuXG4gICAgaWYgKGNvbW1hbmRMZW5ndGggPiAwKSB7XG4gICAgICB2YXIgY29tbWFuZFBhcmFtcyA9IHBhcmFtcy5zaGlmdCgpO1xuICAgICAgdmFyIGl0ZXJhdGlvbnMgPSBjb21tYW5kUGFyYW1zLmxlbmd0aCAvIGNvbW1hbmRMZW5ndGg7XG5cbiAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaXRlcmF0aW9uczsgaisrKSB7XG4gICAgICAgIHZhciBwcmV2UG9pbnQgPSBwb2ludHNbcG9pbnRzLmxlbmd0aCAtIDFdIHx8IHsgeDogMCwgeTogMCB9O1xuXG4gICAgICAgIHN3aXRjaCAodXBwZXJDYXNlQ29tbWFuZCkge1xuICAgICAgICAgIGNhc2UgJ00nOlxuICAgICAgICAgICAgdmFyIHggPSAocmVsYXRpdmUgPyBwcmV2UG9pbnQueCA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpO1xuICAgICAgICAgICAgdmFyIHkgPSAocmVsYXRpdmUgPyBwcmV2UG9pbnQueSA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpO1xuXG4gICAgICAgICAgICBpZiAoaiA9PT0gMCkge1xuICAgICAgICAgICAgICBtb3ZlVG8gPSB7IHg6IHgsIHk6IHkgfTtcbiAgICAgICAgICAgICAgcG9pbnRzLnB1c2goeyB4OiB4LCB5OiB5LCBtb3ZlVG86IHRydWUgfSk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBwb2ludHMucHVzaCh7IHg6IHgsIHk6IHkgfSk7XG4gICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAnTCc6XG4gICAgICAgICAgICBwb2ludHMucHVzaCh7XG4gICAgICAgICAgICAgIHg6IChyZWxhdGl2ZSA/IHByZXZQb2ludC54IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KCksXG4gICAgICAgICAgICAgIHk6IChyZWxhdGl2ZSA/IHByZXZQb2ludC55IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KClcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgJ0gnOlxuICAgICAgICAgICAgcG9pbnRzLnB1c2goe1xuICAgICAgICAgICAgICB4OiAocmVsYXRpdmUgPyBwcmV2UG9pbnQueCA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpLFxuICAgICAgICAgICAgICB5OiBwcmV2UG9pbnQueVxuICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuXG4gICAgICAgICAgY2FzZSAnVic6XG4gICAgICAgICAgICBwb2ludHMucHVzaCh7XG4gICAgICAgICAgICAgIHg6IHByZXZQb2ludC54LFxuICAgICAgICAgICAgICB5OiAocmVsYXRpdmUgPyBwcmV2UG9pbnQueSA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpXG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlICdBJzpcbiAgICAgICAgICAgIHBvaW50cy5wdXNoKHtcbiAgICAgICAgICAgICAgY3VydmU6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnYXJjJyxcbiAgICAgICAgICAgICAgICByeDogY29tbWFuZFBhcmFtcy5zaGlmdCgpLFxuICAgICAgICAgICAgICAgIHJ5OiBjb21tYW5kUGFyYW1zLnNoaWZ0KCksXG4gICAgICAgICAgICAgICAgeEF4aXNSb3RhdGlvbjogY29tbWFuZFBhcmFtcy5zaGlmdCgpLFxuICAgICAgICAgICAgICAgIGxhcmdlQXJjRmxhZzogY29tbWFuZFBhcmFtcy5zaGlmdCgpLFxuICAgICAgICAgICAgICAgIHN3ZWVwRmxhZzogY29tbWFuZFBhcmFtcy5zaGlmdCgpXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHg6IChyZWxhdGl2ZSA/IHByZXZQb2ludC54IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KCksXG4gICAgICAgICAgICAgIHk6IChyZWxhdGl2ZSA/IHByZXZQb2ludC55IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KClcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gICAgICAgICAgICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgICAgICAgICAgIHZhciBfaXRlcmF0b3JFcnJvciA9IHVuZGVmaW5lZDtcblxuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gb3B0aW9uYWxBcmNLZXlzW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgICAgICAgICAgIHZhciBrID0gX3N0ZXAudmFsdWU7XG5cbiAgICAgICAgICAgICAgICBpZiAocG9pbnRzW3BvaW50cy5sZW5ndGggLSAxXVsnY3VydmUnXVtrXSA9PT0gMCkge1xuICAgICAgICAgICAgICAgICAgZGVsZXRlIHBvaW50c1twb2ludHMubGVuZ3RoIC0gMV1bJ2N1cnZlJ11ba107XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgICAgICAgICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgICAgICAgICAgICBfaXRlcmF0b3JFcnJvciA9IGVycjtcbiAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgaWYgKCFfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uICYmIF9pdGVyYXRvci5yZXR1cm4pIHtcbiAgICAgICAgICAgICAgICAgIF9pdGVyYXRvci5yZXR1cm4oKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0gZmluYWxseSB7XG4gICAgICAgICAgICAgICAgaWYgKF9kaWRJdGVyYXRvckVycm9yKSB7XG4gICAgICAgICAgICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgYnJlYWs7XG5cbiAgICAgICAgICBjYXNlICdDJzpcbiAgICAgICAgICAgIHBvaW50cy5wdXNoKHtcbiAgICAgICAgICAgICAgY3VydmU6IHtcbiAgICAgICAgICAgICAgICB0eXBlOiAnY3ViaWMnLFxuICAgICAgICAgICAgICAgIHgxOiAocmVsYXRpdmUgPyBwcmV2UG9pbnQueCA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpLFxuICAgICAgICAgICAgICAgIHkxOiAocmVsYXRpdmUgPyBwcmV2UG9pbnQueSA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpLFxuICAgICAgICAgICAgICAgIHgyOiAocmVsYXRpdmUgPyBwcmV2UG9pbnQueCA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpLFxuICAgICAgICAgICAgICAgIHkyOiAocmVsYXRpdmUgPyBwcmV2UG9pbnQueSA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHg6IChyZWxhdGl2ZSA/IHByZXZQb2ludC54IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KCksXG4gICAgICAgICAgICAgIHk6IChyZWxhdGl2ZSA/IHByZXZQb2ludC55IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KClcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgJ1MnOlxuICAgICAgICAgICAgdmFyIHN4MiA9IChyZWxhdGl2ZSA/IHByZXZQb2ludC54IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KCk7XG4gICAgICAgICAgICB2YXIgc3kyID0gKHJlbGF0aXZlID8gcHJldlBvaW50LnkgOiAwKSArIGNvbW1hbmRQYXJhbXMuc2hpZnQoKTtcbiAgICAgICAgICAgIHZhciBzeCA9IChyZWxhdGl2ZSA/IHByZXZQb2ludC54IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KCk7XG4gICAgICAgICAgICB2YXIgc3kgPSAocmVsYXRpdmUgPyBwcmV2UG9pbnQueSA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpO1xuXG4gICAgICAgICAgICB2YXIgZGlmZiA9IHt9O1xuXG4gICAgICAgICAgICB2YXIgc3gxID0gdm9pZCAwO1xuICAgICAgICAgICAgdmFyIHN5MSA9IHZvaWQgMDtcblxuICAgICAgICAgICAgaWYgKHByZXZQb2ludC5jdXJ2ZSAmJiBwcmV2UG9pbnQuY3VydmUudHlwZSA9PT0gJ2N1YmljJykge1xuICAgICAgICAgICAgICBkaWZmLnggPSBNYXRoLmFicyhwcmV2UG9pbnQueCAtIHByZXZQb2ludC5jdXJ2ZS54Mik7XG4gICAgICAgICAgICAgIGRpZmYueSA9IE1hdGguYWJzKHByZXZQb2ludC55IC0gcHJldlBvaW50LmN1cnZlLnkyKTtcbiAgICAgICAgICAgICAgc3gxID0gcHJldlBvaW50LnggPCBwcmV2UG9pbnQuY3VydmUueDIgPyBwcmV2UG9pbnQueCAtIGRpZmYueCA6IHByZXZQb2ludC54ICsgZGlmZi54O1xuICAgICAgICAgICAgICBzeTEgPSBwcmV2UG9pbnQueSA8IHByZXZQb2ludC5jdXJ2ZS55MiA/IHByZXZQb2ludC55IC0gZGlmZi55IDogcHJldlBvaW50LnkgKyBkaWZmLnk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICBkaWZmLnggPSBNYXRoLmFicyhzeCAtIHN4Mik7XG4gICAgICAgICAgICAgIGRpZmYueSA9IE1hdGguYWJzKHN5IC0gc3kyKTtcbiAgICAgICAgICAgICAgc3gxID0gcHJldlBvaW50Lng7XG4gICAgICAgICAgICAgIHN5MSA9IHByZXZQb2ludC55O1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBwb2ludHMucHVzaCh7IGN1cnZlOiB7IHR5cGU6ICdjdWJpYycsIHgxOiBzeDEsIHkxOiBzeTEsIHgyOiBzeDIsIHkyOiBzeTIgfSwgeDogc3gsIHk6IHN5IH0pO1xuXG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgJ1EnOlxuICAgICAgICAgICAgcG9pbnRzLnB1c2goe1xuICAgICAgICAgICAgICBjdXJ2ZToge1xuICAgICAgICAgICAgICAgIHR5cGU6ICdxdWFkcmF0aWMnLFxuICAgICAgICAgICAgICAgIHgxOiAocmVsYXRpdmUgPyBwcmV2UG9pbnQueCA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpLFxuICAgICAgICAgICAgICAgIHkxOiAocmVsYXRpdmUgPyBwcmV2UG9pbnQueSA6IDApICsgY29tbWFuZFBhcmFtcy5zaGlmdCgpXG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIHg6IChyZWxhdGl2ZSA/IHByZXZQb2ludC54IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KCksXG4gICAgICAgICAgICAgIHk6IChyZWxhdGl2ZSA/IHByZXZQb2ludC55IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KClcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBicmVhaztcblxuICAgICAgICAgIGNhc2UgJ1QnOlxuICAgICAgICAgICAgdmFyIHR4ID0gKHJlbGF0aXZlID8gcHJldlBvaW50LnggOiAwKSArIGNvbW1hbmRQYXJhbXMuc2hpZnQoKTtcbiAgICAgICAgICAgIHZhciB0eSA9IChyZWxhdGl2ZSA/IHByZXZQb2ludC55IDogMCkgKyBjb21tYW5kUGFyYW1zLnNoaWZ0KCk7XG5cbiAgICAgICAgICAgIHZhciB0eDEgPSB2b2lkIDA7XG4gICAgICAgICAgICB2YXIgdHkxID0gdm9pZCAwO1xuXG4gICAgICAgICAgICBpZiAocHJldlBvaW50LmN1cnZlICYmIHByZXZQb2ludC5jdXJ2ZS50eXBlID09PSAncXVhZHJhdGljJykge1xuICAgICAgICAgICAgICB2YXIgX2RpZmYgPSB7XG4gICAgICAgICAgICAgICAgeDogTWF0aC5hYnMocHJldlBvaW50LnggLSBwcmV2UG9pbnQuY3VydmUueDEpLFxuICAgICAgICAgICAgICAgIHk6IE1hdGguYWJzKHByZXZQb2ludC55IC0gcHJldlBvaW50LmN1cnZlLnkxKVxuICAgICAgICAgICAgICB9O1xuXG4gICAgICAgICAgICAgIHR4MSA9IHByZXZQb2ludC54IDwgcHJldlBvaW50LmN1cnZlLngxID8gcHJldlBvaW50LnggLSBfZGlmZi54IDogcHJldlBvaW50LnggKyBfZGlmZi54O1xuICAgICAgICAgICAgICB0eTEgPSBwcmV2UG9pbnQueSA8IHByZXZQb2ludC5jdXJ2ZS55MSA/IHByZXZQb2ludC55IC0gX2RpZmYueSA6IHByZXZQb2ludC55ICsgX2RpZmYueTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgIHR4MSA9IHByZXZQb2ludC54O1xuICAgICAgICAgICAgICB0eTEgPSBwcmV2UG9pbnQueTtcbiAgICAgICAgICAgIH1cblxuICAgICAgICAgICAgcG9pbnRzLnB1c2goeyBjdXJ2ZTogeyB0eXBlOiAncXVhZHJhdGljJywgeDE6IHR4MSwgeTE6IHR5MSB9LCB4OiB0eCwgeTogdHkgfSk7XG5cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHZhciBfcHJldlBvaW50ID0gcG9pbnRzW3BvaW50cy5sZW5ndGggLSAxXSB8fCB7IHg6IDAsIHk6IDAgfTtcblxuICAgICAgaWYgKF9wcmV2UG9pbnQueCAhPT0gbW92ZVRvLnggfHwgX3ByZXZQb2ludC55ICE9PSBtb3ZlVG8ueSkge1xuICAgICAgICBwb2ludHMucHVzaCh7IHg6IG1vdmVUby54LCB5OiBtb3ZlVG8ueSB9KTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gcG9pbnRzO1xufTtcblxudmFyIGdldFBvaW50c0Zyb21Qb2x5Z29uID0gZnVuY3Rpb24gZ2V0UG9pbnRzRnJvbVBvbHlnb24oX3JlZjYpIHtcbiAgdmFyIHBvaW50cyA9IF9yZWY2LnBvaW50cztcblxuICByZXR1cm4gZ2V0UG9pbnRzRnJvbVBvaW50cyh7IGNsb3NlZDogdHJ1ZSwgcG9pbnRzOiBwb2ludHMgfSk7XG59O1xuXG52YXIgZ2V0UG9pbnRzRnJvbVBvbHlsaW5lID0gZnVuY3Rpb24gZ2V0UG9pbnRzRnJvbVBvbHlsaW5lKF9yZWY3KSB7XG4gIHZhciBwb2ludHMgPSBfcmVmNy5wb2ludHM7XG5cbiAgcmV0dXJuIGdldFBvaW50c0Zyb21Qb2ludHMoeyBjbG9zZWQ6IGZhbHNlLCBwb2ludHM6IHBvaW50cyB9KTtcbn07XG5cbnZhciBnZXRQb2ludHNGcm9tUG9pbnRzID0gZnVuY3Rpb24gZ2V0UG9pbnRzRnJvbVBvaW50cyhfcmVmOCkge1xuICB2YXIgY2xvc2VkID0gX3JlZjguY2xvc2VkLFxuICAgICAgcG9pbnRzID0gX3JlZjgucG9pbnRzO1xuXG4gIHZhciBudW1iZXJzID0gcG9pbnRzLnNwbGl0KC9bXFxzLF0rLykubWFwKGZ1bmN0aW9uIChuKSB7XG4gICAgcmV0dXJuIHBhcnNlRmxvYXQobik7XG4gIH0pO1xuXG4gIHZhciBwID0gbnVtYmVycy5yZWR1Y2UoZnVuY3Rpb24gKGFyciwgcG9pbnQsIGkpIHtcbiAgICBpZiAoaSAlIDIgPT09IDApIHtcbiAgICAgIGFyci5wdXNoKHsgeDogcG9pbnQgfSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFyclsoaSAtIDEpIC8gMl0ueSA9IHBvaW50O1xuICAgIH1cblxuICAgIHJldHVybiBhcnI7XG4gIH0sIFtdKTtcblxuICBpZiAoY2xvc2VkKSB7XG4gICAgcC5wdXNoKF9leHRlbmRzKHt9LCBwWzBdKSk7XG4gIH1cblxuICBwWzBdLm1vdmVUbyA9IHRydWU7XG5cbiAgcmV0dXJuIHA7XG59O1xuXG52YXIgZ2V0UG9pbnRzRnJvbVJlY3QgPSBmdW5jdGlvbiBnZXRQb2ludHNGcm9tUmVjdChfcmVmOSkge1xuICB2YXIgaGVpZ2h0ID0gX3JlZjkuaGVpZ2h0LFxuICAgICAgcnggPSBfcmVmOS5yeCxcbiAgICAgIHJ5ID0gX3JlZjkucnksXG4gICAgICB3aWR0aCA9IF9yZWY5LndpZHRoLFxuICAgICAgeCA9IF9yZWY5LngsXG4gICAgICB5ID0gX3JlZjkueTtcblxuICBpZiAocnggfHwgcnkpIHtcbiAgICByZXR1cm4gZ2V0UG9pbnRzRnJvbVJlY3RXaXRoQ29ybmVyUmFkaXVzKHtcbiAgICAgIGhlaWdodDogaGVpZ2h0LFxuICAgICAgcng6IHJ4IHx8IHJ5LFxuICAgICAgcnk6IHJ5IHx8IHJ4LFxuICAgICAgd2lkdGg6IHdpZHRoLFxuICAgICAgeDogeCxcbiAgICAgIHk6IHlcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBnZXRQb2ludHNGcm9tQmFzaWNSZWN0KHsgaGVpZ2h0OiBoZWlnaHQsIHdpZHRoOiB3aWR0aCwgeDogeCwgeTogeSB9KTtcbn07XG5cbnZhciBnZXRQb2ludHNGcm9tQmFzaWNSZWN0ID0gZnVuY3Rpb24gZ2V0UG9pbnRzRnJvbUJhc2ljUmVjdChfcmVmMTApIHtcbiAgdmFyIGhlaWdodCA9IF9yZWYxMC5oZWlnaHQsXG4gICAgICB3aWR0aCA9IF9yZWYxMC53aWR0aCxcbiAgICAgIHggPSBfcmVmMTAueCxcbiAgICAgIHkgPSBfcmVmMTAueTtcblxuICByZXR1cm4gW3sgeDogeCwgeTogeSwgbW92ZVRvOiB0cnVlIH0sIHsgeDogeCArIHdpZHRoLCB5OiB5IH0sIHsgeDogeCArIHdpZHRoLCB5OiB5ICsgaGVpZ2h0IH0sIHsgeDogeCwgeTogeSArIGhlaWdodCB9LCB7IHg6IHgsIHk6IHkgfV07XG59O1xuXG52YXIgZ2V0UG9pbnRzRnJvbVJlY3RXaXRoQ29ybmVyUmFkaXVzID0gZnVuY3Rpb24gZ2V0UG9pbnRzRnJvbVJlY3RXaXRoQ29ybmVyUmFkaXVzKF9yZWYxMSkge1xuICB2YXIgaGVpZ2h0ID0gX3JlZjExLmhlaWdodCxcbiAgICAgIHJ4ID0gX3JlZjExLnJ4LFxuICAgICAgcnkgPSBfcmVmMTEucnksXG4gICAgICB3aWR0aCA9IF9yZWYxMS53aWR0aCxcbiAgICAgIHggPSBfcmVmMTEueCxcbiAgICAgIHkgPSBfcmVmMTEueTtcblxuICB2YXIgY3VydmUgPSB7IHR5cGU6ICdhcmMnLCByeDogcngsIHJ5OiByeSwgc3dlZXBGbGFnOiAxIH07XG5cbiAgcmV0dXJuIFt7IHg6IHggKyByeCwgeTogeSwgbW92ZVRvOiB0cnVlIH0sIHsgeDogeCArIHdpZHRoIC0gcngsIHk6IHkgfSwgeyB4OiB4ICsgd2lkdGgsIHk6IHkgKyByeSwgY3VydmU6IGN1cnZlIH0sIHsgeDogeCArIHdpZHRoLCB5OiB5ICsgaGVpZ2h0IC0gcnkgfSwgeyB4OiB4ICsgd2lkdGggLSByeCwgeTogeSArIGhlaWdodCwgY3VydmU6IGN1cnZlIH0sIHsgeDogeCArIHJ4LCB5OiB5ICsgaGVpZ2h0IH0sIHsgeDogeCwgeTogeSArIGhlaWdodCAtIHJ5LCBjdXJ2ZTogY3VydmUgfSwgeyB4OiB4LCB5OiB5ICsgcnkgfSwgeyB4OiB4ICsgcngsIHk6IHksIGN1cnZlOiBjdXJ2ZSB9XTtcbn07XG5cbnZhciBnZXRQb2ludHNGcm9tRyA9IGZ1bmN0aW9uIGdldFBvaW50c0Zyb21HKF9yZWYxMikge1xuICB2YXIgc2hhcGVzID0gX3JlZjEyLnNoYXBlcztcbiAgcmV0dXJuIHNoYXBlcy5tYXAoZnVuY3Rpb24gKHMpIHtcbiAgICByZXR1cm4gdG9Qb2ludHMocyk7XG4gIH0pO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdG9Qb2ludHM7IiwiaW1wb3J0IHRvUG9pbnRzIGZyb20gJy4vdG9Qb2ludHMnO1xuXG52YXIgcG9pbnRzVG9EID0gZnVuY3Rpb24gcG9pbnRzVG9EKHApIHtcbiAgdmFyIGQgPSAnJztcbiAgdmFyIGkgPSAwO1xuICB2YXIgZmlyc3RQb2ludCA9IHZvaWQgMDtcblxuICB2YXIgX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IHRydWU7XG4gIHZhciBfZGlkSXRlcmF0b3JFcnJvciA9IGZhbHNlO1xuICB2YXIgX2l0ZXJhdG9yRXJyb3IgPSB1bmRlZmluZWQ7XG5cbiAgdHJ5IHtcbiAgICBmb3IgKHZhciBfaXRlcmF0b3IgPSBwW1N5bWJvbC5pdGVyYXRvcl0oKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgdmFyIHBvaW50ID0gX3N0ZXAudmFsdWU7XG4gICAgICB2YXIgX3BvaW50JGN1cnZlID0gcG9pbnQuY3VydmUsXG4gICAgICAgICAgY3VydmUgPSBfcG9pbnQkY3VydmUgPT09IHVuZGVmaW5lZCA/IGZhbHNlIDogX3BvaW50JGN1cnZlLFxuICAgICAgICAgIG1vdmVUbyA9IHBvaW50Lm1vdmVUbyxcbiAgICAgICAgICB4ID0gcG9pbnQueCxcbiAgICAgICAgICB5ID0gcG9pbnQueTtcblxuICAgICAgdmFyIGlzRmlyc3RQb2ludCA9IGkgPT09IDAgfHwgbW92ZVRvO1xuICAgICAgdmFyIGlzTGFzdFBvaW50ID0gaSA9PT0gcC5sZW5ndGggLSAxIHx8IHBbaSArIDFdLm1vdmVUbztcbiAgICAgIHZhciBwcmV2UG9pbnQgPSBpID09PSAwID8gbnVsbCA6IHBbaSAtIDFdO1xuXG4gICAgICBpZiAoaXNGaXJzdFBvaW50KSB7XG4gICAgICAgIGZpcnN0UG9pbnQgPSBwb2ludDtcblxuICAgICAgICBpZiAoIWlzTGFzdFBvaW50KSB7XG4gICAgICAgICAgZCArPSAnTScgKyB4ICsgJywnICsgeTtcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChjdXJ2ZSkge1xuICAgICAgICBzd2l0Y2ggKGN1cnZlLnR5cGUpIHtcbiAgICAgICAgICBjYXNlICdhcmMnOlxuICAgICAgICAgICAgdmFyIF9wb2ludCRjdXJ2ZTIgPSBwb2ludC5jdXJ2ZSxcbiAgICAgICAgICAgICAgICBfcG9pbnQkY3VydmUyJGxhcmdlQXIgPSBfcG9pbnQkY3VydmUyLmxhcmdlQXJjRmxhZyxcbiAgICAgICAgICAgICAgICBsYXJnZUFyY0ZsYWcgPSBfcG9pbnQkY3VydmUyJGxhcmdlQXIgPT09IHVuZGVmaW5lZCA/IDAgOiBfcG9pbnQkY3VydmUyJGxhcmdlQXIsXG4gICAgICAgICAgICAgICAgcnggPSBfcG9pbnQkY3VydmUyLnJ4LFxuICAgICAgICAgICAgICAgIHJ5ID0gX3BvaW50JGN1cnZlMi5yeSxcbiAgICAgICAgICAgICAgICBfcG9pbnQkY3VydmUyJHN3ZWVwRmwgPSBfcG9pbnQkY3VydmUyLnN3ZWVwRmxhZyxcbiAgICAgICAgICAgICAgICBzd2VlcEZsYWcgPSBfcG9pbnQkY3VydmUyJHN3ZWVwRmwgPT09IHVuZGVmaW5lZCA/IDAgOiBfcG9pbnQkY3VydmUyJHN3ZWVwRmwsXG4gICAgICAgICAgICAgICAgX3BvaW50JGN1cnZlMiR4QXhpc1JvID0gX3BvaW50JGN1cnZlMi54QXhpc1JvdGF0aW9uLFxuICAgICAgICAgICAgICAgIHhBeGlzUm90YXRpb24gPSBfcG9pbnQkY3VydmUyJHhBeGlzUm8gPT09IHVuZGVmaW5lZCA/IDAgOiBfcG9pbnQkY3VydmUyJHhBeGlzUm87XG5cbiAgICAgICAgICAgIGQgKz0gJ0EnICsgcnggKyAnLCcgKyByeSArICcsJyArIHhBeGlzUm90YXRpb24gKyAnLCcgKyBsYXJnZUFyY0ZsYWcgKyAnLCcgKyBzd2VlcEZsYWcgKyAnLCcgKyB4ICsgJywnICsgeTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ2N1YmljJzpcbiAgICAgICAgICAgIHZhciBfcG9pbnQkY3VydmUzID0gcG9pbnQuY3VydmUsXG4gICAgICAgICAgICAgICAgY3gxID0gX3BvaW50JGN1cnZlMy54MSxcbiAgICAgICAgICAgICAgICBjeTEgPSBfcG9pbnQkY3VydmUzLnkxLFxuICAgICAgICAgICAgICAgIGN4MiA9IF9wb2ludCRjdXJ2ZTMueDIsXG4gICAgICAgICAgICAgICAgY3kyID0gX3BvaW50JGN1cnZlMy55MjtcblxuICAgICAgICAgICAgZCArPSAnQycgKyBjeDEgKyAnLCcgKyBjeTEgKyAnLCcgKyBjeDIgKyAnLCcgKyBjeTIgKyAnLCcgKyB4ICsgJywnICsgeTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIGNhc2UgJ3F1YWRyYXRpYyc6XG4gICAgICAgICAgICB2YXIgX3BvaW50JGN1cnZlNCA9IHBvaW50LmN1cnZlLFxuICAgICAgICAgICAgICAgIHF4MSA9IF9wb2ludCRjdXJ2ZTQueDEsXG4gICAgICAgICAgICAgICAgcXkxID0gX3BvaW50JGN1cnZlNC55MTtcblxuICAgICAgICAgICAgZCArPSAnUScgKyBxeDEgKyAnLCcgKyBxeTEgKyAnLCcgKyB4ICsgJywnICsgeTtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGlzTGFzdFBvaW50ICYmIHggPT09IGZpcnN0UG9pbnQueCAmJiB5ID09PSBmaXJzdFBvaW50LnkpIHtcbiAgICAgICAgICBkICs9ICdaJztcbiAgICAgICAgfVxuICAgICAgfSBlbHNlIGlmIChpc0xhc3RQb2ludCAmJiB4ID09PSBmaXJzdFBvaW50LnggJiYgeSA9PT0gZmlyc3RQb2ludC55KSB7XG4gICAgICAgIGQgKz0gJ1onO1xuICAgICAgfSBlbHNlIGlmICh4ICE9PSBwcmV2UG9pbnQueCAmJiB5ICE9PSBwcmV2UG9pbnQueSkge1xuICAgICAgICBkICs9ICdMJyArIHggKyAnLCcgKyB5O1xuICAgICAgfSBlbHNlIGlmICh4ICE9PSBwcmV2UG9pbnQueCkge1xuICAgICAgICBkICs9ICdIJyArIHg7XG4gICAgICB9IGVsc2UgaWYgKHkgIT09IHByZXZQb2ludC55KSB7XG4gICAgICAgIGQgKz0gJ1YnICsgeTtcbiAgICAgIH1cblxuICAgICAgaSsrO1xuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gZDtcbn07XG5cbnZhciB0b1BhdGggPSBmdW5jdGlvbiB0b1BhdGgocykge1xuICB2YXIgaXNQb2ludHMgPSBBcnJheS5pc0FycmF5KHMpO1xuICB2YXIgaXNHcm91cCA9IGlzUG9pbnRzID8gQXJyYXkuaXNBcnJheShzWzBdKSA6IHMudHlwZSA9PT0gJ2cnO1xuICB2YXIgcG9pbnRzID0gaXNQb2ludHMgPyBzIDogaXNHcm91cCA/IHMuc2hhcGVzLm1hcChmdW5jdGlvbiAoc2hwKSB7XG4gICAgcmV0dXJuIHRvUG9pbnRzKHNocCk7XG4gIH0pIDogdG9Qb2ludHMocyk7XG5cbiAgaWYgKGlzR3JvdXApIHtcbiAgICByZXR1cm4gcG9pbnRzLm1hcChmdW5jdGlvbiAocCkge1xuICAgICAgcmV0dXJuIHBvaW50c1RvRChwKTtcbiAgICB9KTtcbiAgfVxuXG4gIHJldHVybiBwb2ludHNUb0QocG9pbnRzKTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHRvUGF0aDsiLCJ2YXIgX3R5cGVvZiA9IHR5cGVvZiBTeW1ib2wgPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2YgU3ltYm9sLml0ZXJhdG9yID09PSBcInN5bWJvbFwiID8gZnVuY3Rpb24gKG9iaikgeyByZXR1cm4gdHlwZW9mIG9iajsgfSA6IGZ1bmN0aW9uIChvYmopIHsgcmV0dXJuIG9iaiAmJiB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgJiYgb2JqLmNvbnN0cnVjdG9yID09PSBTeW1ib2wgJiYgb2JqICE9PSBTeW1ib2wucHJvdG90eXBlID8gXCJzeW1ib2xcIiA6IHR5cGVvZiBvYmo7IH07XG5cbnZhciBnZXRFcnJvcnMgPSBmdW5jdGlvbiBnZXRFcnJvcnMoc2hhcGUpIHtcbiAgdmFyIHJ1bGVzID0gZ2V0UnVsZXMoc2hhcGUpO1xuICB2YXIgZXJyb3JzID0gW107XG5cbiAgcnVsZXMubWFwKGZ1bmN0aW9uIChfcmVmKSB7XG4gICAgdmFyIG1hdGNoID0gX3JlZi5tYXRjaCxcbiAgICAgICAgcHJvcCA9IF9yZWYucHJvcCxcbiAgICAgICAgcmVxdWlyZWQgPSBfcmVmLnJlcXVpcmVkLFxuICAgICAgICB0eXBlID0gX3JlZi50eXBlO1xuXG4gICAgaWYgKHR5cGVvZiBzaGFwZVtwcm9wXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIGlmIChyZXF1aXJlZCkge1xuICAgICAgICBlcnJvcnMucHVzaChwcm9wICsgJyBwcm9wIGlzIHJlcXVpcmVkJyArIChwcm9wID09PSAndHlwZScgPyAnJyA6ICcgb24gYSAnICsgc2hhcGUudHlwZSkpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBpZiAodHlwZW9mIHR5cGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGlmICh0eXBlID09PSAnYXJyYXknKSB7XG4gICAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KHNoYXBlW3Byb3BdKSkge1xuICAgICAgICAgICAgZXJyb3JzLnB1c2gocHJvcCArICcgcHJvcCBtdXN0IGJlIG9mIHR5cGUgYXJyYXknKTtcbiAgICAgICAgICB9XG4gICAgICAgIH0gZWxzZSBpZiAoX3R5cGVvZihzaGFwZVtwcm9wXSkgIT09IHR5cGUpIHtcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIHZhbGlkLXR5cGVvZlxuICAgICAgICAgIGVycm9ycy5wdXNoKHByb3AgKyAnIHByb3AgbXVzdCBiZSBvZiB0eXBlICcgKyB0eXBlKTtcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICBpZiAoQXJyYXkuaXNBcnJheShtYXRjaCkpIHtcbiAgICAgICAgaWYgKG1hdGNoLmluZGV4T2Yoc2hhcGVbcHJvcF0pID09PSAtMSkge1xuICAgICAgICAgIGVycm9ycy5wdXNoKHByb3AgKyAnIHByb3AgbXVzdCBiZSBvbmUgb2YgJyArIG1hdGNoLmpvaW4oJywgJykpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICB9KTtcblxuICBpZiAoc2hhcGUudHlwZSA9PT0gJ2cnICYmIEFycmF5LmlzQXJyYXkoc2hhcGUuc2hhcGVzKSkge1xuICAgIHZhciBjaGlsZEVycm9ycyA9IHNoYXBlLnNoYXBlcy5tYXAoZnVuY3Rpb24gKHMpIHtcbiAgICAgIHJldHVybiBnZXRFcnJvcnMocyk7XG4gICAgfSk7XG4gICAgcmV0dXJuIFtdLmNvbmNhdC5hcHBseShlcnJvcnMsIGNoaWxkRXJyb3JzKTtcbiAgfVxuXG4gIHJldHVybiBlcnJvcnM7XG59O1xuXG52YXIgZ2V0UnVsZXMgPSBmdW5jdGlvbiBnZXRSdWxlcyhzaGFwZSkge1xuICB2YXIgcnVsZXMgPSBbe1xuICAgIG1hdGNoOiBbJ2NpcmNsZScsICdlbGxpcHNlJywgJ2xpbmUnLCAncGF0aCcsICdwb2x5Z29uJywgJ3BvbHlsaW5lJywgJ3JlY3QnLCAnZyddLFxuICAgIHByb3A6ICd0eXBlJyxcbiAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICB0eXBlOiAnc3RyaW5nJ1xuICB9XTtcblxuICBzd2l0Y2ggKHNoYXBlLnR5cGUpIHtcbiAgICBjYXNlICdjaXJjbGUnOlxuICAgICAgcnVsZXMucHVzaCh7IHByb3A6ICdjeCcsIHJlcXVpcmVkOiB0cnVlLCB0eXBlOiAnbnVtYmVyJyB9KTtcbiAgICAgIHJ1bGVzLnB1c2goeyBwcm9wOiAnY3knLCByZXF1aXJlZDogdHJ1ZSwgdHlwZTogJ251bWJlcicgfSk7XG4gICAgICBydWxlcy5wdXNoKHsgcHJvcDogJ3InLCByZXF1aXJlZDogdHJ1ZSwgdHlwZTogJ251bWJlcicgfSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ2VsbGlwc2UnOlxuICAgICAgcnVsZXMucHVzaCh7IHByb3A6ICdjeCcsIHJlcXVpcmVkOiB0cnVlLCB0eXBlOiAnbnVtYmVyJyB9KTtcbiAgICAgIHJ1bGVzLnB1c2goeyBwcm9wOiAnY3knLCByZXF1aXJlZDogdHJ1ZSwgdHlwZTogJ251bWJlcicgfSk7XG4gICAgICBydWxlcy5wdXNoKHsgcHJvcDogJ3J4JywgcmVxdWlyZWQ6IHRydWUsIHR5cGU6ICdudW1iZXInIH0pO1xuICAgICAgcnVsZXMucHVzaCh7IHByb3A6ICdyeScsIHJlcXVpcmVkOiB0cnVlLCB0eXBlOiAnbnVtYmVyJyB9KTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAnbGluZSc6XG4gICAgICBydWxlcy5wdXNoKHsgcHJvcDogJ3gxJywgcmVxdWlyZWQ6IHRydWUsIHR5cGU6ICdudW1iZXInIH0pO1xuICAgICAgcnVsZXMucHVzaCh7IHByb3A6ICd4MicsIHJlcXVpcmVkOiB0cnVlLCB0eXBlOiAnbnVtYmVyJyB9KTtcbiAgICAgIHJ1bGVzLnB1c2goeyBwcm9wOiAneTEnLCByZXF1aXJlZDogdHJ1ZSwgdHlwZTogJ251bWJlcicgfSk7XG4gICAgICBydWxlcy5wdXNoKHsgcHJvcDogJ3kyJywgcmVxdWlyZWQ6IHRydWUsIHR5cGU6ICdudW1iZXInIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdwYXRoJzpcbiAgICAgIHJ1bGVzLnB1c2goeyBwcm9wOiAnZCcsIHJlcXVpcmVkOiB0cnVlLCB0eXBlOiAnc3RyaW5nJyB9KTtcbiAgICAgIGJyZWFrO1xuXG4gICAgY2FzZSAncG9seWdvbic6XG4gICAgY2FzZSAncG9seWxpbmUnOlxuICAgICAgcnVsZXMucHVzaCh7IHByb3A6ICdwb2ludHMnLCByZXF1aXJlZDogdHJ1ZSwgdHlwZTogJ3N0cmluZycgfSk7XG4gICAgICBicmVhaztcblxuICAgIGNhc2UgJ3JlY3QnOlxuICAgICAgcnVsZXMucHVzaCh7IHByb3A6ICdoZWlnaHQnLCByZXF1aXJlZDogdHJ1ZSwgdHlwZTogJ251bWJlcicgfSk7XG4gICAgICBydWxlcy5wdXNoKHsgcHJvcDogJ3J4JywgdHlwZTogJ251bWJlcicgfSk7XG4gICAgICBydWxlcy5wdXNoKHsgcHJvcDogJ3J5JywgdHlwZTogJ251bWJlcicgfSk7XG4gICAgICBydWxlcy5wdXNoKHsgcHJvcDogJ3dpZHRoJywgcmVxdWlyZWQ6IHRydWUsIHR5cGU6ICdudW1iZXInIH0pO1xuICAgICAgcnVsZXMucHVzaCh7IHByb3A6ICd4JywgcmVxdWlyZWQ6IHRydWUsIHR5cGU6ICdudW1iZXInIH0pO1xuICAgICAgcnVsZXMucHVzaCh7IHByb3A6ICd5JywgcmVxdWlyZWQ6IHRydWUsIHR5cGU6ICdudW1iZXInIH0pO1xuICAgICAgYnJlYWs7XG5cbiAgICBjYXNlICdnJzpcbiAgICAgIHJ1bGVzLnB1c2goeyBwcm9wOiAnc2hhcGVzJywgcmVxdWlyZWQ6IHRydWUsIHR5cGU6ICdhcnJheScgfSk7XG4gICAgICBicmVhaztcbiAgfVxuXG4gIHJldHVybiBydWxlcztcbn07XG5cbnZhciB2YWxpZCA9IGZ1bmN0aW9uIHZhbGlkKHNoYXBlKSB7XG4gIHZhciBlcnJvcnMgPSBnZXRFcnJvcnMoc2hhcGUpO1xuXG4gIHJldHVybiB7XG4gICAgZXJyb3JzOiBlcnJvcnMsXG4gICAgdmFsaWQ6IGVycm9ycy5sZW5ndGggPT09IDBcbiAgfTtcbn07XG5cbmV4cG9ydCBkZWZhdWx0IHZhbGlkOyIsIi8qKiBAbW9kdWxlIERMQSAqL1xyXG5cclxuaW1wb3J0IERlZmF1bHRzIGZyb20gJy4vRGVmYXVsdHMnO1xyXG5pbXBvcnQgQ29sbGlzaW9ucyBmcm9tICdjb2xsaXNpb25zJztcclxuaW1wb3J0IHsgdG9QYXRoIH0gZnJvbSAnc3ZnLXBvaW50cyc7XHJcbmltcG9ydCB7IHNhdmVBcyB9IGZyb20gJ2ZpbGUtc2F2ZXInO1xyXG5cclxuLyoqIFN0cnVjdHVyZSBmb3IgbWFuYWdpbmcgc3RhdGUgYW5kIHByb3BlcnRpZXMgb2YgYWxsIHdhbGtlcnMsIGNsdXN0ZXJzLCBzaGFwZXMsIGFuZCB0aGUgY29sbGlzaW9uIHN5c3RlbS4gKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRExBIHtcclxuICAvKipcclxuICAgKiBDcmVhdGUgYSBuZXcgRExBIG9iamVjdCB3aXRoIHJlZmVyZW5jZSB0byBnbG9iYWwgUDUgaW5zdGFuY2UgYW5kIGFueSBsb2NhbCBza2V0Y2ggU2V0dGluZ3NcclxuICAgKiBAcGFyYW0ge29iamVjdH0gcDUgLSBHbG9iYWwgcDUuanMgaW5zdGFuY2UgcGFzc2VkIGZyb20gbWFpbiBza2V0Y2hcclxuICAgKiBAcGFyYW0ge29iamVjdH0gc2V0dGluZ3MgIC0gT2JqZWN0IGNvbnRhaW5pbmcgYW55IG92ZXJyaWRlIHZhbHVlcyBwYXNzZWQgZnJvbSBza2V0Y2ggdG8gYmUgbWVyZ2VkIHdpdGggZ2xvYmFsIERlZmF1bHRzXHJcbiAgICovXHJcbiAgY29uc3RydWN0b3IocDUsIHNldHRpbmdzKSB7XHJcbiAgICB0aGlzLnA1ID0gcDU7XHJcbiAgICB0aGlzLnNldHRpbmdzID0gT2JqZWN0LmFzc2lnbih7fSwgRGVmYXVsdHMsIHNldHRpbmdzKTtcclxuXHJcbiAgICAvLyBTdGF0ZSBmbGFnc1xyXG4gICAgdGhpcy5wYXVzZWQgPSBmYWxzZTtcclxuICAgIHRoaXMuc2hvd1dhbGtlcnMgPSB0aGlzLnNldHRpbmdzLlNob3dXYWxrZXJzO1xyXG4gICAgdGhpcy5zaG93Q2x1c3RlcnMgPSB0aGlzLnNldHRpbmdzLlNob3dDbHVzdGVycztcclxuICAgIHRoaXMuc2hvd1NoYXBlcyA9IHRoaXMuc2V0dGluZ3MuU2hvd1NoYXBlcztcclxuICAgIHRoaXMudXNlRnJhbWUgPSB0aGlzLnNldHRpbmdzLlVzZUZyYW1lO1xyXG4gICAgdGhpcy5yZW5kZXJNb2RlID0gdGhpcy5zZXR0aW5ncy5SZW5kZXJNb2RlO1xyXG5cclxuICAgIC8vIE51bWJlciBvZiBhY3RpdmUgd2Fsa2Vyc1xyXG4gICAgdGhpcy5udW1XYWxrZXJzID0gMDtcclxuXHJcbiAgICAvLyBDdXN0b20gbW92ZW1lbnQgZnVuY3Rpb24gZm9yIGRpcmVjdGVkIGdyb3d0aCBwYXR0ZXJuc1xyXG4gICAgdGhpcy5jdXN0b21Nb3ZlbWVudEZ1bmN0aW9uID0gdW5kZWZpbmVkO1xyXG5cclxuICAgIC8vIE91dGVyIGVkZ2VzIG9mIGFjdGl2ZSBza2V0Y2ggYXJlYSAoc2NyZWVuIG9yIGNvbmZpbmVkIFwiZnJhbWVcIilcclxuICAgIHRoaXMuZWRnZU1hcmdpbiA9IHRoaXMuc2V0dGluZ3MuRWRnZU1hcmdpbjtcclxuICAgIHRoaXMuZWRnZXMgPSB7fTtcclxuICAgIHRoaXMuZnJhbWUgPSB7fTtcclxuXHJcbiAgICBpZiAodHlwZW9mIHRoaXMuc2V0dGluZ3MuRnJhbWVTaXplID09ICdudW1iZXInKSB7XHJcbiAgICAgIHRoaXMuZnJhbWUubGVmdCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gMiAtIHRoaXMuc2V0dGluZ3MuRnJhbWVTaXplIC8gMjtcclxuICAgICAgdGhpcy5mcmFtZS5yaWdodCA9IHdpbmRvdy5pbm5lcldpZHRoIC8gMiArIHRoaXMuc2V0dGluZ3MuRnJhbWVTaXplIC8gMjtcclxuICAgICAgdGhpcy5mcmFtZS50b3AgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyIC0gdGhpcy5zZXR0aW5ncy5GcmFtZVNpemUgLyAyO1xyXG4gICAgICB0aGlzLmZyYW1lLmJvdHRvbSA9IHdpbmRvdy5pbm5lckhlaWdodCAvIDIgKyB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZSAvIDI7XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZSA9PSAnb2JqZWN0Jykge1xyXG4gICAgICB0aGlzLmZyYW1lLmxlZnQgPSB3aW5kb3cuaW5uZXJXaWR0aCAvIDIgLSB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZVswXSAvIDI7XHJcbiAgICAgIHRoaXMuZnJhbWUucmlnaHQgPSB3aW5kb3cuaW5uZXJXaWR0aCAvIDIgKyB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZVswXSAvIDI7XHJcbiAgICAgIHRoaXMuZnJhbWUudG9wID0gd2luZG93LmlubmVySGVpZ2h0IC8gMiAtIHRoaXMuc2V0dGluZ3MuRnJhbWVTaXplWzFdIC8gMjtcclxuICAgICAgdGhpcy5mcmFtZS5ib3R0b20gPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyICsgdGhpcy5zZXR0aW5ncy5GcmFtZVNpemVbMV0gLyAyO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMucmVzZXRFZGdlcygpO1xyXG5cclxuICAgIC8vIFByZWNhbGN1bGF0ZSB0aGUgbGFyZ2VzdCBwb3NzaWJsZSBkaXN0YW5jZSBvZiBhbnkgcGFydGljbGUgdG8gY2VudGVyIGZvciB1c2UgaW4gZGlzdGFuY2UtYmFzZWQgZWZmZWN0cyBsYXRlclxyXG4gICAgdGhpcy5tYXhEaXN0YW5jZSA9IHRoaXMucDUuZGlzdCh0aGlzLmVkZ2VzLmxlZnQsIHRoaXMuZWRnZXMudG9wLCB3aW5kb3cuaW5uZXJXaWR0aCAvIDIsIHdpbmRvdy5pbm5lckhlaWdodCAvIDIpO1xyXG5cclxuICAgIC8vIENvbGxpc2lvbiBzeXN0ZW1cclxuICAgIHRoaXMuc3lzdGVtID0gbmV3IENvbGxpc2lvbnMoKTtcclxuICAgIHRoaXMuYm9kaWVzID0gW107XHJcbiAgICB0aGlzLnNoYXBlcyA9IFtdO1xyXG4gICAgdGhpcy5saW5lcyA9IFtdO1xyXG4gIH1cclxuXHJcbiAgLyoqIFJ1biBvbmUgXCJ0aWNrXCIgb2YgdGhlIHNpbXVsYXRpb24gKi9cclxuICBpdGVyYXRlKCkge1xyXG4gICAgLy8gU2tpcCB0aGlzIGl0ZXJhdGlvbiB3aGVuIHRoZSBzaW11bGF0aW9uIGlzIHBhdXNlZFxyXG4gICAgaWYgKHRoaXMucGF1c2VkKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZXBsZW5pc2ggYW55IHdhbGtlcnMgdGhhdCBzdHVjayB0byB0aGUgY2x1c3RlcihzKSBpbiB0aGUgbGFzdCBpdGVyYXRpb25cclxuICAgIGlmICh0aGlzLnNldHRpbmdzLlJlcGxlbmlzaFdhbGtlcnMgJiYgdGhpcy5udW1XYWxrZXJzIDwgdGhpcy5zZXR0aW5ncy5NYXhXYWxrZXJzKSB7XHJcbiAgICAgIHRoaXMuY3JlYXRlRGVmYXVsdFdhbGtlcnModGhpcy5zZXR0aW5ncy5NYXhXYWxrZXJzIC0gdGhpcy5udW1XYWxrZXJzLCB0aGlzLnNldHRpbmdzLlJlcGxlbmlzaG1lbnRTb3VyY2UpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIE1vdmUgYWxsIHRoZSB3YWxrZXJzXHJcbiAgICB0aGlzLm1vdmVXYWxrZXJzKCk7XHJcblxyXG4gICAgLy8gVXBkYXRlIHRoZSBjb2xsaXNpb24gc3lzdGVtXHJcbiAgICB0aGlzLnN5c3RlbS51cGRhdGUoKTtcclxuXHJcbiAgICAvLyBDaGVjayBmb3IgY29sbGlzaW9ucyBhbmQgY29udmVydCB3YWxrZXJzIHRvIGNsdXN0ZXIgcGFydGljbGVzIGFzIG5lZWRlZFxyXG4gICAgdGhpcy5oYW5kbGVDb2xsaXNpb25zKCk7XHJcblxyXG4gICAgLy8gUmVtb3ZlIGFueSB3YWxrZXJzIHRoYXQgaGF2ZSBiZWVuIHdhbGtpbmcgYXJvdW5kIGZvciB0b28gbG9uZ1xyXG4gICAgdGhpcy5wcnVuZVdhbGtlcnMoKTtcclxuICB9XHJcblxyXG5cclxuICAvKiogRHJhdyBhbGwgb2JqZWN0cyBiYXNlZCBvbiBjdXJyZW50IHZpc2liaWxpdHkgZmxhZ3MgYW5kIGNvbG9ycyAqL1xyXG4gIGRyYXcoKSB7XHJcbiAgICBpZih0aGlzLnNldHRpbmdzLlVzZUNvbG9ycykge1xyXG4gICAgICB0aGlzLnA1LmJhY2tncm91bmQodGhpcy5nZXRDb2xvclN0cmluZ0Zyb21PYmplY3QodGhpcy5zZXR0aW5ncy5CYWNrZ3JvdW5kQ29sb3IpKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMucDUuYmFja2dyb3VuZCgyNTUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIERyYXcgYWxsIGN1c3RvbSBzaGFwZXNcclxuICAgIGlmKHRoaXMuc2hvd1NoYXBlcykge1xyXG4gICAgICBmb3IgKGxldCBzaGFwZSBvZiB0aGlzLnNoYXBlcykge1xyXG4gICAgICAgIGlmKHRoaXMuc2V0dGluZ3MuVXNlQ29sb3JzKSB7XHJcbiAgICAgICAgICB0aGlzLnA1LmZpbGwodGhpcy5nZXRDb2xvclN0cmluZ0Zyb21PYmplY3QodGhpcy5zZXR0aW5ncy5TaGFwZUNvbG9yKSk7XHJcbiAgICAgICAgICB0aGlzLnA1LnN0cm9rZSh0aGlzLmdldENvbG9yU3RyaW5nRnJvbU9iamVjdCh0aGlzLnNldHRpbmdzLlNoYXBlQ29sb3IpKTsgIFxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICB0aGlzLnA1Lm5vRmlsbCgpO1xyXG4gICAgICAgICAgdGhpcy5wNS5zdHJva2UoMTAwKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgXHJcbiAgICAgICAgdGhpcy5wNS5iZWdpblNoYXBlKCk7XHJcblxyXG4gICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzaGFwZS5fY29vcmRzLmxlbmd0aDsgaSArPSAyKSB7XHJcbiAgICAgICAgICAgIHRoaXMucDUudmVydGV4KHNoYXBlLl9jb29yZHNbaV0sIHNoYXBlLl9jb29yZHNbaSArIDFdKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5wNS5lbmRTaGFwZSgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRHJhdyBhbGwgd2Fsa2VycyBhbmQgY2x1c3RlcmVkIHBhcnRpY2xlc1xyXG4gICAgaWYodGhpcy5yZW5kZXJNb2RlID09ICdMaW5lcycpIHtcclxuICAgICAgaWYodGhpcy5zZXR0aW5ncy5Vc2VDb2xvcnMpIHtcclxuICAgICAgICB0aGlzLnA1LnN0cm9rZSh0aGlzLmdldENvbG9yU3RyaW5nRnJvbU9iamVjdCh0aGlzLnNldHRpbmdzLkxpbmVDb2xvcikpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHRoaXMucDUuc3Ryb2tlKDc1KTtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYodGhpcy5saW5lcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgZm9yKGxldCBsaW5lIG9mIHRoaXMubGluZXMpIHtcclxuICAgICAgICAgIHRoaXMucDUubGluZShsaW5lLnAxLngsIGxpbmUucDEueSwgbGluZS5wMi54LCBsaW5lLnAyLnkpO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfSBlbHNlIHtcclxuICAgICAgZm9yIChsZXQgYm9keSBvZiB0aGlzLmJvZGllcykge1xyXG4gICAgICAgIC8vIFBvaW50c1xyXG4gICAgICAgIGlmIChib2R5Ll9wb2ludCkge1xyXG4gICAgICAgICAgdGhpcy5wNS5ub0ZpbGwoKTtcclxuXHJcbiAgICAgICAgICBpZiAoYm9keS5zdHVjayAmJiB0aGlzLnNob3dDbHVzdGVycykge1xyXG4gICAgICAgICAgICB0aGlzLnA1Lm5vU3Ryb2tlKCk7XHJcblxyXG4gICAgICAgICAgICBpZih0aGlzLnNldHRpbmdzLlVzZUNvbG9ycykge1xyXG4gICAgICAgICAgICAgIHRoaXMucDUuZmlsbCh0aGlzLmdldENvbG9yU3RyaW5nRnJvbU9iamVjdCh0aGlzLnNldHRpbmdzLkNsdXN0ZXJDb2xvcikpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHRoaXMucDUuZmlsbCgyMDApO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLnA1LmVsbGlwc2UoYm9keS54LCBib2R5LnksIDUpO1xyXG5cclxuICAgICAgICAgIH0gZWxzZSBpZiAoIWJvZHkuc3R1Y2sgJiYgdGhpcy5zaG93V2Fsa2Vycykge1xyXG4gICAgICAgICAgICBpZih0aGlzLnNldHRpbmdzLlVzZUNvbG9ycykge1xyXG4gICAgICAgICAgICAgIHRoaXMucDUuc3Ryb2tlKHRoaXMuZ2V0Q29sb3JTdHJpbmdGcm9tT2JqZWN0KHRoaXMuc2V0dGluZ3MuV2Fsa2VyQ29sb3IpKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0aGlzLnA1LnN0cm9rZSgwKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnA1Lm5vU3Ryb2tlKCk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgdGhpcy5wNS5wb2ludChib2R5LngsIGJvZHkueSk7XHJcblxyXG4gICAgICAgIC8vIENpcmNsZXNcclxuICAgICAgICB9IGVsc2UgaWYgKGJvZHkuX2NpcmNsZSkge1xyXG4gICAgICAgICAgaWYodGhpcy5zZXR0aW5ncy5Vc2VTdHJva2UpIHtcclxuICAgICAgICAgICAgaWYodGhpcy5zZXR0aW5ncy5Vc2VDb2xvcnMpIHtcclxuICAgICAgICAgICAgICB0aGlzLnA1LnN0cm9rZSh0aGlzLmdldENvbG9yU3RyaW5nRnJvbU9iamVjdCh0aGlzLnNldHRpbmdzLkJhY2tncm91bmRDb2xvcikpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHRoaXMucDUuc3Ryb2tlKDI1NSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucDUubm9TdHJva2UoKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICBpZiAoYm9keS5zdHVjayAmJiB0aGlzLnNob3dDbHVzdGVycykge1xyXG4gICAgICAgICAgICBpZih0aGlzLnNldHRpbmdzLlVzZUNvbG9ycykge1xyXG4gICAgICAgICAgICAgIHRoaXMucDUuZmlsbCh0aGlzLmdldENvbG9yU3RyaW5nRnJvbU9iamVjdCh0aGlzLnNldHRpbmdzLkNsdXN0ZXJDb2xvcikpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHRoaXMucDUuZmlsbCgxMjApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2UgaWYgKCFib2R5LnN0dWNrICYmIHRoaXMuc2hvd1dhbGtlcnMpIHtcclxuICAgICAgICAgICAgaWYodGhpcy5zZXR0aW5ncy5Vc2VDb2xvcnMpIHtcclxuICAgICAgICAgICAgICB0aGlzLnA1LmZpbGwodGhpcy5nZXRDb2xvclN0cmluZ0Zyb21PYmplY3QodGhpcy5zZXR0aW5ncy5XYWxrZXJDb2xvcikpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgIHRoaXMucDUuZmlsbCgyMzApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnA1Lm5vRmlsbCgpO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHRoaXMucDUuZWxsaXBzZShib2R5LngsIGJvZHkueSwgYm9keS5yYWRpdXMgKiAyKTtcclxuXHJcbiAgICAgICAgLy8gUG9seWdvbnNcclxuICAgICAgICB9IGVsc2UgaWYgKGJvZHkuX3BvbHlnb24pIHtcclxuICAgICAgICAgIGlmKHRoaXMuc2V0dGluZ3MuVXNlU3Ryb2tlKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuc2V0dGluZ3MuVXNlQ29sb3JzKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5wNS5zdHJva2UodGhpcy5nZXRDb2xvclN0cmluZ0Zyb21PYmplY3QodGhpcy5zZXR0aW5ncy5CYWNrZ3JvdW5kQ29sb3IpKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0aGlzLnA1LnN0cm9rZSgyNTUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnA1Lm5vU3Ryb2tlKCk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgaWYgKGJvZHkuc3R1Y2sgJiYgdGhpcy5zaG93Q2x1c3RlcnMpIHtcclxuICAgICAgICAgICAgaWYodGhpcy5zZXR0aW5ncy5Vc2VDb2xvcnMpIHtcclxuICAgICAgICAgICAgICB0aGlzLnA1LmZpbGwodGhpcy5nZXRDb2xvclN0cmluZ0Zyb21PYmplY3QodGhpcy5zZXR0aW5ncy5DbHVzdGVyQ29sb3IpKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0aGlzLnA1LmZpbGwoMTIwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSBlbHNlIGlmICghYm9keS5zdHVjayAmJiB0aGlzLnNob3dXYWxrZXJzKSB7XHJcbiAgICAgICAgICAgIGlmKHRoaXMuc2V0dGluZ3MuVXNlQ29sb3JzKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5wNS5maWxsKHRoaXMuZ2V0Q29sb3JTdHJpbmdGcm9tT2JqZWN0KHRoaXMuc2V0dGluZ3MuV2Fsa2VyQ29sb3IpKTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICB0aGlzLnA1LmZpbGwoMjMwKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5wNS5ub0ZpbGwoKTtcclxuICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICB0aGlzLnA1LmJlZ2luU2hhcGUoKTtcclxuXHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYm9keS5fY29vcmRzLmxlbmd0aCAtIDE7IGkgKz0gMikge1xyXG4gICAgICAgICAgICAgIHRoaXMucDUudmVydGV4KGJvZHkuX2Nvb3Jkc1tpXSwgYm9keS5fY29vcmRzW2kgKyAxXSk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICB0aGlzLnA1LmVuZFNoYXBlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRHJhdyBhIHNxdWFyZSBhcm91bmQgdGhlIGFjdGl2ZSBhcmVhLCBpZiBzZXRcclxuICAgIGlmICh0aGlzLnVzZUZyYW1lKSB7XHJcbiAgICAgIHRoaXMuZHJhd0ZyYW1lKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKiogRHJhdyBhIHJlY3RhbmdsZSB0byByZXByZXNlbnQgdGhlIGZyYW1lIChib3VuZGluZyBib3gpLCBpZiBhY3RpdmUgKi9cclxuICBkcmF3RnJhbWUoKSB7XHJcbiAgICB0aGlzLnA1Lm5vRmlsbCgpO1xyXG5cclxuICAgIGlmKHRoaXMuc2V0dGluZ3MuVXNlQ29sb3JzKSB7XHJcbiAgICAgIHRoaXMucDUuc3Ryb2tlKHRoaXMuZ2V0Q29sb3JTdHJpbmdGcm9tT2JqZWN0KHRoaXMuc2V0dGluZ3MuRnJhbWVDb2xvcikpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5wNS5zdHJva2UoMCk7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKHR5cGVvZiB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZSA9PSAnbnVtYmVyJykge1xyXG4gICAgICB0aGlzLnA1LnJlY3QoXHJcbiAgICAgICAgd2luZG93LmlubmVyV2lkdGggLyAyIC0gdGhpcy5zZXR0aW5ncy5GcmFtZVNpemUgLyAyIC0gMSxcclxuICAgICAgICB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyIC0gdGhpcy5zZXR0aW5ncy5GcmFtZVNpemUgLyAyIC0gMSxcclxuICAgICAgICB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZSArIDIsXHJcbiAgICAgICAgdGhpcy5zZXR0aW5ncy5GcmFtZVNpemUgKyAyXHJcbiAgICAgICk7XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZSA9PSAnb2JqZWN0Jykge1xyXG4gICAgICB0aGlzLnA1LnJlY3QoXHJcbiAgICAgICAgd2luZG93LmlubmVyV2lkdGggLyAyIC0gdGhpcy5zZXR0aW5ncy5GcmFtZVNpemVbMF0gLyAyIC0gMSxcclxuICAgICAgICB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyIC0gdGhpcy5zZXR0aW5ncy5GcmFtZVNpemVbMV0gLyAyIC0gMSxcclxuICAgICAgICB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZVswXSArIDIsXHJcbiAgICAgICAgdGhpcy5zZXR0aW5ncy5GcmFtZVNpemVbMV0gKyAyXHJcbiAgICAgIClcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKiBSZWNhbGN1bGF0ZSB0aGUgcG9zaXRpb25zIG9mIHRoZSBmb3VyIGVkZ2VzIG9mIHRoZSBzaW11bGF0aW9uIGJhc2VkIG9uIHdoZXRoZXIgdGhlIGZyYW1lIGlzIGluIHVzZSBvciBub3QuICovXHJcbiAgcmVzZXRFZGdlcygpIHtcclxuICAgIHRoaXMuZWRnZXMubGVmdCA9IHRoaXMudXNlRnJhbWUgPyB0aGlzLmZyYW1lLmxlZnQgOiAwO1xyXG4gICAgdGhpcy5lZGdlcy5yaWdodCA9IHRoaXMudXNlRnJhbWUgPyB0aGlzLmZyYW1lLnJpZ2h0IDogd2luZG93LmlubmVyV2lkdGg7XHJcbiAgICB0aGlzLmVkZ2VzLnRvcCA9IHRoaXMudXNlRnJhbWUgPyB0aGlzLmZyYW1lLnRvcCA6IDA7XHJcbiAgICB0aGlzLmVkZ2VzLmJvdHRvbSA9IHRoaXMudXNlRnJhbWUgPyB0aGlzLmZyYW1lLmJvdHRvbSA6IHdpbmRvdy5pbm5lckhlaWdodDtcclxuICB9XHJcblxyXG4gIFxyXG4gIC8qKiBBcHBseSBCcm93bmlhbiBtb3Rpb24gYW5kIGJpYXMgZm9yY2VzIHRvIGFsbCB3YWxrZXJzIHRvIG1ha2UgdGhlbSBtb3ZlIGEgbGl0dGxlIGJpdC4gKi9cclxuICBtb3ZlV2Fsa2VycygpIHtcclxuICAgIGlmICh0aGlzLmJvZGllcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGZvciAobGV0IGJvZHkgb2YgdGhpcy5ib2RpZXMpIHtcclxuICAgICAgICBpZiAoIWJvZHkuc3R1Y2spIHtcclxuICAgICAgICAgIC8vIFN0YXJ0IHdpdGggYSByYW5kb21pemVkIG1vdmVtZW50IChCcm93bmlhbiBtb3Rpb24pXHJcbiAgICAgICAgICBsZXQgZGVsdGFYID0gdGhpcy5wNS5yYW5kb20oLTEsIDEpLFxyXG4gICAgICAgICAgICBkZWx0YVkgPSB0aGlzLnA1LnJhbmRvbSgtMSwgMSksXHJcbiAgICAgICAgICAgIGRlbHRhcztcclxuXHJcbiAgICAgICAgICAvLyBBZGQgaW4gcGVyLXdhbGtlciBiaWFzLCBpZiBlbmFibGVkXHJcbiAgICAgICAgICBpZih0aGlzLnNldHRpbmdzLlVzZVBlcldhbGtlckJpYXMgJiYgYm9keS5oYXNPd25Qcm9wZXJ0eSgnQmlhc1Rvd2FyZHMnKSkge1xyXG4gICAgICAgICAgICBkZWx0YXMgPSB0aGlzLmdldERlbHRhc1Rvd2FyZHMoYm9keS54LCBib2R5LnksIGJvZHkuQmlhc1Rvd2FyZHMueCwgYm9keS5CaWFzVG93YXJkcy55KTtcclxuICAgICAgICAgICAgZGVsdGFYICs9IGRlbHRhcy54O1xyXG4gICAgICAgICAgICBkZWx0YVkgKz0gZGVsdGFzLnk7XHJcblxyXG4gICAgICAgICAgLy8gT3RoZXJ3aXNlIGFkZCBpbiB1bmlmb3JtIGJpYXMgdG8gYWxsIHdhbGtlcnMgKGlmIGRlZmluZWQpXHJcbiAgICAgICAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgICAgICAgLy8gQWRkIGluIGEgYmlhcyB0b3dhcmRzIGEgc3BlY2lmaWMgZGlyZWN0aW9uLCBpZiBzZXRcclxuICAgICAgICAgICAgc3dpdGNoICh0aGlzLnNldHRpbmdzLkJpYXNUb3dhcmRzKSB7XHJcbiAgICAgICAgICAgICAgY2FzZSAnVG9wJzpcclxuICAgICAgICAgICAgICAgIGRlbHRhWSAtPSB0aGlzLnNldHRpbmdzLkJpYXNGb3JjZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlICdCb3R0b20nOlxyXG4gICAgICAgICAgICAgICAgZGVsdGFZICs9IHRoaXMuc2V0dGluZ3MuQmlhc0ZvcmNlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgIGNhc2UgJ0xlZnQnOlxyXG4gICAgICAgICAgICAgICAgZGVsdGFYIC09IHRoaXMuc2V0dGluZ3MuQmlhc0ZvcmNlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgIGNhc2UgJ1JpZ2h0JzpcclxuICAgICAgICAgICAgICAgIGRlbHRhWCArPSB0aGlzLnNldHRpbmdzLkJpYXNGb3JjZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlICdDZW50ZXInOlxyXG4gICAgICAgICAgICAgICAgZGVsdGFzID0gdGhpcy5nZXREZWx0YXNUb3dhcmRzKGJvZHkueCwgYm9keS55LCB3aW5kb3cuaW5uZXJXaWR0aCAvIDIsIHdpbmRvdy5pbm5lckhlaWdodCAvIDIpO1xyXG4gICAgICAgICAgICAgICAgZGVsdGFYICs9IGRlbHRhcy54O1xyXG4gICAgICAgICAgICAgICAgZGVsdGFZICs9IGRlbHRhcy55O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICAgIGNhc2UgJ0VkZ2VzJzpcclxuICAgICAgICAgICAgICAgIGRlbHRhcyA9IHRoaXMuZ2V0RGVsdGFzVG93YXJkcyhib2R5LngsIGJvZHkueSwgd2luZG93LmlubmVyV2lkdGggLyAyLCB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyKTtcclxuICAgICAgICAgICAgICAgIGRlbHRhWCAtPSBkZWx0YXMueDtcclxuICAgICAgICAgICAgICAgIGRlbHRhWSAtPSBkZWx0YXMueTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgICBjYXNlICdFcXVhdG9yJzpcclxuICAgICAgICAgICAgICAgIGlmIChib2R5LnkgPCB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyKSB7XHJcbiAgICAgICAgICAgICAgICAgIGRlbHRhWSArPSB0aGlzLnNldHRpbmdzLkJpYXNGb3JjZTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgIGRlbHRhWSAtPSB0aGlzLnNldHRpbmdzLkJpYXNGb3JjZTtcclxuICAgICAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAgICAgY2FzZSAnTWVyaWRpYW4nOlxyXG4gICAgICAgICAgICAgICAgaWYgKGJvZHkueCA8IHdpbmRvdy5pbm5lcldpZHRoIC8gMikge1xyXG4gICAgICAgICAgICAgICAgICBkZWx0YVggKz0gdGhpcy5zZXR0aW5ncy5CaWFzRm9yY2U7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICBkZWx0YVggLT0gdGhpcy5zZXR0aW5ncy5CaWFzRm9yY2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLy8gQXBwbHkgY3VzdG9tIG1vdmVtZW50IGZ1bmN0aW9uLCBpZiBpdCBoYXMgYmVlIHByb3ZpZGVkXHJcbiAgICAgICAgICBpZih0eXBlb2YgdGhpcy5jdXN0b21Nb3ZlbWVudEZ1bmN0aW9uICE9IHVuZGVmaW5lZCAmJiB0aGlzLmN1c3RvbU1vdmVtZW50RnVuY3Rpb24gaW5zdGFuY2VvZiBGdW5jdGlvbikge1xyXG4gICAgICAgICAgICBsZXQgZGVsdGFzID0gdGhpcy5jdXN0b21Nb3ZlbWVudEZ1bmN0aW9uKGJvZHkpO1xyXG4gICAgICAgICAgICBkZWx0YVggKz0gZGVsdGFzLmR4O1xyXG4gICAgICAgICAgICBkZWx0YVkgKz0gZGVsdGFzLmR5O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC8vIEVuc3VyZSBvbmx5IHdob2xlIG51bWJlcnMgZm9yIHNpbmdsZS1waXhlbCBwYXJ0aWNsZXMgc28gdGhleSBhcmUgYWx3YXlzIFwib24gbGF0dGljZVwiXHJcbiAgICAgICAgICBpZiAoYm9keS5fcG9pbnQpIHtcclxuICAgICAgICAgICAgZGVsdGFYID0gTWF0aC5yb3VuZChkZWx0YVgpO1xyXG4gICAgICAgICAgICBkZWx0YVkgPSBNYXRoLnJvdW5kKGRlbHRhWSk7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgLy8gQXBwbHkgZGVsdGFzIHRvIHdhbGtlclxyXG4gICAgICAgICAgYm9keS54ICs9IGRlbHRhWDtcclxuICAgICAgICAgIGJvZHkueSArPSBkZWx0YVk7XHJcblxyXG4gICAgICAgICAgLy8gSW5jcmVtZW50IGFnZSBvZiB0aGUgd2Fsa2VyXHJcbiAgICAgICAgICBib2R5LmFnZSsrO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ2FsY3VsYXRlcyBtb3ZlbWVudCBkZWx0YXMgZm9yIGEgZ2l2ZW4gd2Fsa2VyIGluIG9yZGVyIHRvIG1vdmUgaXQgdG93YXJkcyBhIGdpdmVuIHBvaW50IGluIHNwYWNlLlxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBib2R5WCAtIFggY29vcmRpbmF0ZSBvZiB3YWxrZXIgdG8gbW92ZVxyXG4gICAqIEBwYXJhbSB7bnVtYmVyfSBib2R5WSAgLSBZIGNvb3JkaW5hdGUgb2Ygd2Fsa2VyIHRvIG1vdmVcclxuICAgKiBAcGFyYW0ge251bWJlcn0gdGFyZ2V0WCAgLSBYIGNvb3JkaW5hdGUgb2YgdGFyZ2V0IHdlIHdhbnQgdG8gbW92ZSB0aGUgd2Fsa2VyIHRvd2FyZHNcclxuICAgKiBAcGFyYW0ge251bWJlcn0gdGFyZ2V0WSAgLSBZWSBjb29yZGluYXRlIG9mIHRhcmdldCB3ZSB3YW50IHRvIG1vdmUgdGhlIHdhbGtlciB0b3dhcmRzXHJcbiAgICogQHJldHVybnMge09iamVjdH0gT2JqZWN0IHdpdGggcHJvcGVydGllcyB4IGFuZCB5IHJlcHJlc2VudGluZyBkaXJlY3Rpb25hbCBmb3JjZXMgdG8gYXBwbHkgdG8gd2Fsa2VyXHJcbiAgICovXHJcbiAgZ2V0RGVsdGFzVG93YXJkcyhib2R5WCwgYm9keVksIHRhcmdldFgsIHRhcmdldFkpIHtcclxuICAgIGxldCBhbmdsZSA9IE1hdGguYXRhbjIodGFyZ2V0WSAtIGJvZHlZLCB0YXJnZXRYIC0gYm9keVgpO1xyXG5cclxuICAgIHJldHVybiB7XHJcbiAgICAgIHg6IE1hdGguY29zKGFuZ2xlKSAqIHRoaXMuc2V0dGluZ3MuQmlhc0ZvcmNlLFxyXG4gICAgICB5OiBNYXRoLnNpbihhbmdsZSkgKiB0aGlzLnNldHRpbmdzLkJpYXNGb3JjZVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqIExvb2sgZm9yIGNvbGxpc2lvbnMgYmV0d2VlbiB3YWxrZXJzIGFuZCBjbHVzdGVyZWQgZWxlbWVudHMsIGNvbnZlcnRpbmcgd2Fsa2VycyB0byBjbHVzdGVyZWQgcGFydGljbGVzIGFzIG5lZWRlZC4gKi9cclxuICBoYW5kbGVDb2xsaXNpb25zKCkge1xyXG4gICAgLy8gTG9vayBmb3IgY29sbGlzaW9ucyBiZXR3ZWVuIHdhbGtlcnMgYW5kIGN1c3RvbSBzaGFwZXNcclxuICAgIGZvciAobGV0IHNoYXBlIG9mIHRoaXMuc2hhcGVzKSB7XHJcbiAgICAgIGNvbnN0IHBvdGVudGlhbHMgPSBzaGFwZS5wb3RlbnRpYWxzKCk7XHJcblxyXG4gICAgICBmb3IgKGxldCBzZWNvbmRCb2R5IG9mIHBvdGVudGlhbHMpIHtcclxuICAgICAgICBpZiAoc2hhcGUuY29sbGlkZXMoc2Vjb25kQm9keSkpIHtcclxuICAgICAgICAgIHNlY29uZEJvZHkuc3R1Y2sgPSB0cnVlO1xyXG4gICAgICAgICAgdGhpcy5udW1XYWxrZXJzLS07XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gTG9vayBmb3IgY29sbGlzaW9ucyBiZXR3ZWVuIHdhbGtlcnMgYW5kIGNsdXN0ZXJlZCBwYXJ0aWNsZXNcclxuICAgIGZvciAobGV0IGJvZHkgb2YgdGhpcy5ib2RpZXMpIHtcclxuICAgICAgLy8gQ3V0IGRvd24gb24gZHVwbGljYXRlIGNvbXB1dGF0aW9ucyBieSBvbmx5IGxvb2tpbmcgZm9yIGNvbGxpc2lvbnMgb24gd2Fsa2Vyc1xyXG4gICAgICBpZiAoYm9keS5zdHVjaykge1xyXG4gICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBMb29rIGZvciBicm9hZHBoYXNlIGNvbGxpc2lvbnNcclxuICAgICAgY29uc3QgcG90ZW50aWFscyA9IGJvZHkucG90ZW50aWFscygpO1xyXG5cclxuICAgICAgZm9yIChsZXQgc2Vjb25kQm9keSBvZiBwb3RlbnRpYWxzKSB7XHJcblxyXG4gICAgICAgIC8vIFBvaW50cyBzaG91bGQgYmUgY2hlY2tlZCBmb3IgYWRqYWNlbmN5IHRvIGEgc3R1Y2sgcGFydGljbGUgXHJcbiAgICAgICAgaWYgKGJvZHkuX3BvaW50KSB7XHJcbiAgICAgICAgICBpZiAoc2Vjb25kQm9keS5zdHVjaykge1xyXG4gICAgICAgICAgICBib2R5LnN0dWNrID0gdHJ1ZTtcclxuICAgICAgICAgICAgdGhpcy5udW1XYWxrZXJzLS07XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENpcmNsZXMgYW5kIHBvbHlnb25zIHNob3VsZCBiZSBjaGVja2VkIGZvciBjb2xsaXNpb24gKG92ZXJsYXApIHdpdGggcG90ZW50aWFsc1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBpZiAoc2Vjb25kQm9keS5zdHVjayAmJiBib2R5LmNvbGxpZGVzKHNlY29uZEJvZHkpKSB7XHJcbiAgICAgICAgICAgIGJvZHkuc3R1Y2sgPSB0cnVlO1xyXG4gICAgICAgICAgICB0aGlzLm51bVdhbGtlcnMtLTtcclxuXHJcbiAgICAgICAgICAgIGlmKHRoaXMuc2V0dGluZ3MuQ2FwdHVyZUxpbmVzKSB7XHJcbiAgICAgICAgICAgICAgdGhpcy5saW5lcy5wdXNoKHtcclxuICAgICAgICAgICAgICAgIHAxOiB7IHg6IGJvZHkueCwgeTogYm9keS55IH0sXHJcbiAgICAgICAgICAgICAgICBwMjogeyB4OiBzZWNvbmRCb2R5LngsIHk6IHNlY29uZEJvZHkueSB9XHJcbiAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKiBSZW1vdmUgYW55IHdhbGtlcnMgdGhhdCBhcmUgbm8gbG9uZ2VyIFwidXNlZnVsXCIgaW4gYW4gZWZmb3J0IHRvIG1ha2UgdGhlIHNpbXVsYXRpb24gbW9yZSBlZmZpY2llbnQuICovXHJcbiAgcHJ1bmVXYWxrZXJzKCkge1xyXG4gICAgLy8gUmVtb3ZlIGFueSB3YWxrZXJzIHRoYXQgaGF2ZSBiZWVuIHdhbmRlcmluZyBhcm91bmQgZm9yIHRvbyBsb25nXHJcbiAgICBpZih0aGlzLnNldHRpbmdzLlBydW5lT2xkV2Fsa2VycyB8fCB0aGlzLnNldHRpbmdzLlBydW5lRGlzdGFudFdhbGtlcnMpIHtcclxuICAgICAgZm9yKGxldCBbaW5kZXgsIGJvZHldIG9mIHRoaXMuYm9kaWVzLmVudHJpZXMoKSkge1xyXG4gICAgICAgIGlmKFxyXG4gICAgICAgICAgIWJvZHkuc3R1Y2sgJiYgXHJcbiAgICAgICAgICAoXHJcbiAgICAgICAgICAgICh0aGlzLnNldHRpbmdzLlBydW5lT2xkV2Fsa2VycyAmJiBib2R5LmFnZSA+IHRoaXMuc2V0dGluZ3MuTWF4QWdlKSB8fFxyXG4gICAgICAgICAgICAodGhpcy5zZXR0aW5ncy5QcnVuZURpc3RhbnRXYWxrZXJzICYmIHRoaXMucDUuZGlzdChib2R5LngsIGJvZHkueSwgYm9keS5vcmlnaW5hbFgsIGJvZHkub3JpZ2luYWxZKSA+IHRoaXMuc2V0dGluZ3MuTWF4V2FuZGVyRGlzdGFuY2UpXHJcbiAgICAgICAgICApXHJcbiAgICAgICAgKSB7XHJcbiAgICAgICAgICBib2R5LnJlbW92ZSgpO1xyXG4gICAgICAgICAgdGhpcy5ib2RpZXMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgICAgICAgIHRoaXMubnVtV2Fsa2Vycy0tO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZXMgYSBuZXcgYm9keSAod2Fsa2VyIG9yIGNsdXN0ZXJlZCBwYXJ0aWNsZSkgdXNpbmcgdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMgaW4gdGhlIGNvbGxpc2lvbiBzeXN0ZW0gYW5kIHN0b3JlcyBpdCBpbiBhIHByaXZhdGUgYXJyYXkgZm9yIG1hbmlwdWxhdGlvbiBsYXRlci5cclxuICAgKiBAcGFyYW0ge29iamVjdH0gcGFyYW1zIC0gT2JqZWN0IG9mIHBhcnRpY2xlIHBhcmFtZXRlcnMgc3VjaCBhcyBYL1kgY29vcmRpbmF0ZXMsIHR5cGUsIHNoYXBlLCBhbmQgcm90YXRpb25cclxuICAgKi9cclxuICBjcmVhdGVQYXJ0aWNsZShwYXJhbXMpIHtcclxuICAgIGlmICh0eXBlb2YgcGFyYW1zID09ICd1bmRlZmluZWQnIHx8IHR5cGVvZiBwYXJhbXMgIT0gJ29iamVjdCcpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGxldCBib2R5O1xyXG5cclxuICAgIGlmIChwYXJhbXMuaGFzT3duUHJvcGVydHkoJ3R5cGUnKSkge1xyXG4gICAgICBzd2l0Y2ggKHBhcmFtcy50eXBlKSB7XHJcbiAgICAgICAgY2FzZSAnUG9pbnQnOlxyXG4gICAgICAgICAgYm9keSA9IHRoaXMuc3lzdGVtLmNyZWF0ZVBvaW50KE1hdGgucm91bmQocGFyYW1zLngpLCBNYXRoLnJvdW5kKHBhcmFtcy55KSk7XHJcbiAgICAgICAgICBib2R5Ll9wb2ludCA9IHRydWU7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgY2FzZSAnQ2lyY2xlJzpcclxuICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgYm9keSA9IHRoaXMuc3lzdGVtLmNyZWF0ZUNpcmNsZShwYXJhbXMueCwgcGFyYW1zLnksIHBhcmFtcy5kaWFtZXRlciAvIDIpO1xyXG4gICAgICAgICAgYm9keS5fY2lyY2xlID0gdHJ1ZTtcclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICBjYXNlICdQb2x5Z29uJzpcclxuICAgICAgICAgIGJvZHkgPSB0aGlzLnN5c3RlbS5jcmVhdGVQb2x5Z29uKHBhcmFtcy54LCBwYXJhbXMueSwgcGFyYW1zLnBvbHlnb24sIHBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgncm90YXRpb24nKSA/IHRoaXMucDUucmFkaWFucyhwYXJhbXMucm90YXRpb24pIDogMCk7XHJcbiAgICAgICAgICBib2R5Ll9wb2x5Z29uID0gdHJ1ZTtcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBjb25zdCBkaWFtZXRlciA9IHBhcmFtcy5oYXNPd25Qcm9wZXJ0eSgnZGlhbWV0ZXInKSA/IHBhcmFtcy5kaWFtZXRlciA6IHRoaXMuc2V0dGluZ3MuQ2lyY2xlRGlhbWV0ZXI7XHJcbiAgICAgIGJvZHkgPSB0aGlzLnN5c3RlbS5jcmVhdGVDaXJjbGUocGFyYW1zLngsIHBhcmFtcy55LCBkaWFtZXRlciAvIDIpO1xyXG4gICAgICBib2R5Ll9jaXJjbGUgPSB0cnVlO1xyXG4gICAgfVxyXG5cclxuICAgIGJvZHkuc3R1Y2sgPSBwYXJhbXMuaGFzT3duUHJvcGVydHkoJ3N0dWNrJykgPyBwYXJhbXMuc3R1Y2sgOiBmYWxzZTtcclxuICAgIGJvZHkuYWdlID0gMDtcclxuXHJcbiAgICBpZihwYXJhbXMuaGFzT3duUHJvcGVydHkoJ0JpYXNUb3dhcmRzJykpIHtcclxuICAgICAgYm9keS5CaWFzVG93YXJkcyA9IHBhcmFtcy5CaWFzVG93YXJkcztcclxuICAgIH1cclxuXHJcbiAgICBib2R5Lm9yaWdpbmFsWCA9IGJvZHkueDtcclxuICAgIGJvZHkub3JpZ2luYWxZID0gYm9keS55O1xyXG5cclxuICAgIHRoaXMuYm9kaWVzLnB1c2goYm9keSk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBXcmFwcGVyIGZvciBjcmVhdGVQYXJ0aWNsZSgpIHRoYXQgaW5jcmVtZW50cyBpbnRlcm5hbCBjb3VudCBvZiB3YWxrZXJzLlxyXG4gICAqIEBwYXJhbSB7T2JqZWN0fSBwYXJhbXMgLSBPYmplY3Qgb2YgcGFydGljbGUgcGFyYW1ldGVycyBzdWNoIGFzIFgvWSBjb29yZGluYXRlcywgdHlwZSwgc2hhcGUsIGFuZCByb3RhdGlvblxyXG4gICAqL1xyXG4gIGNyZWF0ZVdhbGtlcihwYXJhbXMpIHtcclxuICAgIHRoaXMuY3JlYXRlUGFydGljbGUocGFyYW1zKTtcclxuICAgIHRoaXMubnVtV2Fsa2VycysrO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgc2V0IG9mIHdhbGtlcnMgaW4gYSBzcGVjaWZpYyBhcmVhIGluIHRoZSBzaW11bGF0aW9uIChjZW50ZXIsIGVkZ2VzLCByYW5kb21seSwgZXRjKS5cclxuICAgKiBAcGFyYW0ge251bWJlcn0gY291bnQgLSBOdW1iZXIgb2Ygd2Fsa2VycyB0byBjcmVhdGVcclxuICAgKiBAcGFyYW0ge3N0cmluZ30gc291cmNlIC0gTG9jYXRpb24gd2hlcmUgd2Fsa2VycyBzaG91bGQgYmUgY3JlYXRlZC5cclxuICAgKi9cclxuICBjcmVhdGVEZWZhdWx0V2Fsa2Vycyhjb3VudCA9IHRoaXMuc2V0dGluZ3MuTWF4V2Fsa2Vycywgc291cmNlID0gdGhpcy5zZXR0aW5ncy5XYWxrZXJTb3VyY2UpIHtcclxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY291bnQ7IGkrKykge1xyXG4gICAgICBsZXQgcGFyYW1zID0ge307XHJcblxyXG4gICAgICBzd2l0Y2ggKHNvdXJjZSkge1xyXG4gICAgICAgIC8vIEVkZ2VzID0gc3Bhd24gd2Fsa2VycyBhdCBzY3JlZW4gZWRnZXNcclxuICAgICAgICBjYXNlICdFZGdlcyc6XHJcbiAgICAgICAgICBsZXQgZWRnZSA9IE1hdGgucm91bmQodGhpcy5wNS5yYW5kb20oMSwgNCkpO1xyXG5cclxuICAgICAgICAgIHN3aXRjaCAoZWRnZSkge1xyXG4gICAgICAgICAgICBjYXNlIDE6IC8vIHRvcFxyXG4gICAgICAgICAgICAgIHBhcmFtcy54ID0gdGhpcy5wNS5yYW5kb20odGhpcy5lZGdlcy5sZWZ0ICsgdGhpcy5lZGdlTWFyZ2luLCB0aGlzLmVkZ2VzLnJpZ2h0IC0gdGhpcy5lZGdlTWFyZ2luKTtcclxuICAgICAgICAgICAgICBwYXJhbXMueSA9IHRoaXMucDUucmFuZG9tKHRoaXMuZWRnZXMudG9wLCB0aGlzLmVkZ2VzLnRvcCArIHRoaXMuZWRnZU1hcmdpbik7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlIDM6IC8vIGJvdHRvbVxyXG4gICAgICAgICAgICAgIHBhcmFtcy54ID0gdGhpcy5wNS5yYW5kb20odGhpcy5lZGdlcy5sZWZ0ICsgdGhpcy5lZGdlTWFyZ2luLCB0aGlzLmVkZ2VzLnJpZ2h0IC0gdGhpcy5lZGdlTWFyZ2luKTtcclxuICAgICAgICAgICAgICBwYXJhbXMueSA9IHRoaXMucDUucmFuZG9tKHRoaXMuZWRnZXMuYm90dG9tIC0gdGhpcy5lZGdlTWFyZ2luLCB0aGlzLmVkZ2VzLmJvdHRvbSk7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlIDQ6IC8vIGxlZnRcclxuICAgICAgICAgICAgICBwYXJhbXMueCA9IHRoaXMucDUucmFuZG9tKHRoaXMuZWRnZXMubGVmdCwgdGhpcy5lZGdlcy5sZWZ0ICsgdGhpcy5lZGdlTWFyZ2luKTtcclxuICAgICAgICAgICAgICBwYXJhbXMueSA9IHRoaXMucDUucmFuZG9tKHRoaXMuZWRnZXMudG9wLCB0aGlzLmVkZ2VzLmJvdHRvbSk7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgICBjYXNlIDI6IC8vIHJpZ2h0XHJcbiAgICAgICAgICAgICAgcGFyYW1zLnggPSB0aGlzLnA1LnJhbmRvbSh0aGlzLmVkZ2VzLnJpZ2h0IC0gdGhpcy5lZGdlTWFyZ2luLCB0aGlzLmVkZ2VzLnJpZ2h0KTtcclxuICAgICAgICAgICAgICBwYXJhbXMueSA9IHRoaXMucDUucmFuZG9tKHRoaXMuZWRnZXMudG9wLCB0aGlzLmVkZ2VzLmJvdHRvbSk7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIC8vIENpcmNsZSA9IHNwYXduIHdhbGtlcnMgaW4gYSBjaXJjbGUgYXJvdW5kIHRoZSBjZW50ZXIgb2YgdGhlIHNjcmVlblxyXG4gICAgICAgIGNhc2UgJ0NpcmNsZSc6XHJcbiAgICAgICAgICAvLyBGaW5kIHRoZSBsYXJnZXN0IHJhZGl1cyB0aGF0IGZpdHMgaW50byB0aGUgY3VycmVudCBGcmFtZVNpemUgZGltZW5zaW9ucyAoc21hbGxlc3QgZGltZW5zaW9uKVxyXG4gICAgICAgICAgbGV0IG1heFJhZGl1cztcclxuICAgICAgICAgIHN3aXRjaCh0eXBlb2YgdGhpcy5zZXR0aW5ncy5GcmFtZVNpemUpIHtcclxuICAgICAgICAgICAgY2FzZSAnbnVtYmVyJzpcclxuICAgICAgICAgICAgICBtYXhSYWRpdXMgPSB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZS8yO1xyXG4gICAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgICAgY2FzZSAnb2JqZWN0JzpcclxuICAgICAgICAgICAgICBtYXhSYWRpdXMgPSB0aGlzLnNldHRpbmdzLkZyYW1lU2l6ZVswXSA+IHRoaXMuc2V0dGluZ3MuRnJhbWVTaXplWzFdID8gdGhpcy5zZXR0aW5ncy5GcmFtZVNpemVbMV0vMiA6IHRoaXMuc2V0dGluZ3MuRnJhbWVTaXplWzBdLzI7XHJcbiAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgbGV0IHJhZGl1cyA9IHRoaXMucDUucmFuZG9tKDUsIG1heFJhZGl1cyksXHJcbiAgICAgICAgICAgIGFuZ2xlID0gdGhpcy5wNS5yYW5kb20oMzYwKSxcclxuICAgICAgICAgICAgY2VudGVyID0gdGhpcy5zZXR0aW5ncy5oYXNPd25Qcm9wZXJ0eSgnQ2lyY2xlQ2VudGVyJykgPyB0aGlzLnNldHRpbmdzLkNpcmNsZUNlbnRlciA6IHt4OiB3aW5kb3cuaW5uZXJXaWR0aCAvIDIsIHk6IHdpbmRvdy5pbm5lckhlaWdodCAvIDJ9O1xyXG5cclxuICAgICAgICAgIHBhcmFtcy54ID0gY2VudGVyLnggKyByYWRpdXMgKiBNYXRoLmNvcyhhbmdsZSAqIE1hdGguUEkgLyAxODApO1xyXG4gICAgICAgICAgcGFyYW1zLnkgPSBjZW50ZXIueSArIHJhZGl1cyAqIE1hdGguc2luKGFuZ2xlICogTWF0aC5QSSAvIDE4MCk7XHJcbiAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgLy8gUmFuZG9tID0gc3Bhd24gd2Fsa2VycyByYW5kb21seSB0aHJvdWdob3V0IHRoZSBlbnRpcmUgc2NyZWVuXHJcbiAgICAgICAgY2FzZSAnUmFuZG9tJzpcclxuICAgICAgICAgIHBhcmFtcy54ID0gdGhpcy5wNS5yYW5kb20odGhpcy5lZGdlcy5sZWZ0LCB0aGlzLmVkZ2VzLnJpZ2h0KTtcclxuICAgICAgICAgIHBhcmFtcy55ID0gdGhpcy5wNS5yYW5kb20odGhpcy5lZGdlcy50b3AsIHRoaXMuZWRnZXMuYm90dG9tKTtcclxuICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAvLyBDZW50ZXIgPSBzcGF3biBhbGwgd2Fsa2VycyBhdCBzY3JlZW4gY2VudGVyXHJcbiAgICAgICAgY2FzZSAnQ2VudGVyJzpcclxuICAgICAgICAgIHBhcmFtcy54ID0gd2luZG93LmlubmVyV2lkdGggLyAyO1xyXG4gICAgICAgICAgcGFyYW1zLnkgPSB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyO1xyXG4gICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgIC8vIE9mZnNjcmVlbiA9IHNwYXduIGFsbCB3YWxrZXJzIG91dHNpZGUgb2YgdGhlIHNjcmVlbiBlZGdlc1xyXG4gICAgICAgIGNhc2UgJ09mZnNjcmVlbic6XHJcbiAgICAgICAgICBwYXJhbXMueCA9IHRoaXMucDUucmFuZG9tKHRoaXMuZWRnZXMubGVmdCAtIDIwMCwgdGhpcy5lZGdlcy5yaWdodCArIDIwMCk7XHJcbiAgICAgICAgICBwYXJhbXMueSA9IHRoaXMucDUucmFuZG9tKHRoaXMuZWRnZXMudG9wIC0gMjAwLCB0aGlzLmVkZ2VzLmJvdHRvbSArIDIwMCk7XHJcblxyXG4gICAgICAgICAgaWYoXHJcbiAgICAgICAgICAgIChwYXJhbXMueCA+IHRoaXMuZWRnZXMubGVmdCAmJiBwYXJhbXMueCA8IHRoaXMuZWRnZXMucmlnaHQpICYmXHJcbiAgICAgICAgICAgIChwYXJhbXMueSA+IHRoaXMuZWRnZXMudG9wICYmIHBhcmFtcy55IDwgdGhpcy5lZGdlcy5ib3R0b20pXHJcbiAgICAgICAgICApIHtcclxuICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICBcclxuICAgICAgICAgIGJyZWFrO1xyXG4gICAgICB9XHJcblxyXG4gICAgICAvLyBWYXJ5IGRpYW1ldGVyLCBpZiBlbmFibGVkXHJcbiAgICAgIGlmICh0aGlzLnNldHRpbmdzLlZhcnlEaWFtZXRlckJ5RGlzdGFuY2UpIHtcclxuICAgICAgICBsZXQgZGlzdCA9IHRoaXMucDUuZGlzdChwYXJhbXMueCwgcGFyYW1zLnksIHdpbmRvdy5pbm5lcldpZHRoIC8gMiwgd2luZG93LmlubmVySGVpZ2h0IC8gMik7XHJcbiAgICAgICAgcGFyYW1zLmRpYW1ldGVyID0gdGhpcy5wNS5tYXAoZGlzdCwgMCwgdGhpcy5tYXhEaXN0YW5jZSwgdGhpcy5zZXR0aW5ncy5DaXJjbGVEaWFtZXRlclJhbmdlWzBdLCB0aGlzLnNldHRpbmdzLkNpcmNsZURpYW1ldGVyUmFuZ2VbMV0pO1xyXG4gICAgICB9IGVsc2UgaWYgKHRoaXMuc2V0dGluZ3MuVmFyeURpYW1ldGVyUmFuZG9tbHkpIHtcclxuICAgICAgICBwYXJhbXMuZGlhbWV0ZXIgPSB0aGlzLnA1LnJhbmRvbSh0aGlzLnNldHRpbmdzLkNpcmNsZURpYW1ldGVyUmFuZ2VbMF0sIHRoaXMuc2V0dGluZ3MuQ2lyY2xlRGlhbWV0ZXJSYW5nZVsxXSk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIC8vIENyZWF0ZSBhIHdhbGtlciB3aXRoIHRoZSBjb29yZGluYXRlc1xyXG4gICAgICB0aGlzLmNyZWF0ZVdhbGtlcihwYXJhbXMpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgc2V0IG9mIGNsdXN0ZXJlZCBwYXJ0aWNsZXMgd2l0aCB0aGUgcHJvdmlkZWQgcGF0dGVybi5cclxuICAgKiBAcGFyYW0ge3N0cmluZ30gY2x1c3RlclR5cGUgLSBQYXR0ZXJuIHRvIGNyZWF0ZSBhbGwgY2x1c3RlcmVkIHBhcnRpY2xlcyB3aXRoLiBDYW4gYmUgUG9pbnQsIFJpbmcsIFJhbmRvbSwgb3IgV2FsbFxyXG4gICAqL1xyXG4gIGNyZWF0ZURlZmF1bHRDbHVzdGVycyhjbHVzdGVyVHlwZSA9IHRoaXMuc2V0dGluZ3MuSW5pdGlhbENsdXN0ZXJUeXBlKSB7XHJcbiAgICBsZXQgcGFyYW1zTGlzdCA9IFtdO1xyXG5cclxuICAgIHN3aXRjaCAoY2x1c3RlclR5cGUpIHtcclxuICAgICAgLy8gU2luZ2xlIHBhcnRpY2xlIGluIGNlbnRlciBvZiBzY3JlZW5cclxuICAgICAgY2FzZSAnUG9pbnQnOlxyXG4gICAgICAgIHBhcmFtc0xpc3QucHVzaCh7XHJcbiAgICAgICAgICB4OiB3aW5kb3cuaW5uZXJXaWR0aCAvIDIsXHJcbiAgICAgICAgICB5OiB3aW5kb3cuaW5uZXJIZWlnaHQgLyAyLFxyXG4gICAgICAgICAgZGlhbWV0ZXI6IHRoaXMuc2V0dGluZ3MuQ2lyY2xlRGlhbWV0ZXJcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAvLyBTZXJpZXMgb2YgcGFydGljbGVzIGV2ZW5seSBzcGFjZWQgaW4gYSBjaXJjbGUgYXJvdW5kIGNlbnRlciBvZiBzY3JlZW5cclxuICAgICAgY2FzZSAnUmluZyc6XHJcbiAgICAgICAgbGV0IHJhZGl1cyA9IDEwMCxcclxuICAgICAgICAgIG51bVBhcnRpY2xlcyA9IDIwO1xyXG5cclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG51bVBhcnRpY2xlczsgaSsrKSB7XHJcbiAgICAgICAgICBwYXJhbXNMaXN0LnB1c2goe1xyXG4gICAgICAgICAgICB4OiB3aW5kb3cuaW5uZXJXaWR0aCAvIDIgKyByYWRpdXMgKiBNYXRoLmNvcygoMzYwIC8gbnVtUGFydGljbGVzKSAqIGkgKiBNYXRoLlBJIC8gMTgwKSxcclxuICAgICAgICAgICAgeTogd2luZG93LmlubmVySGVpZ2h0IC8gMiArIHJhZGl1cyAqIE1hdGguc2luKCgzNjAgLyBudW1QYXJ0aWNsZXMpICogaSAqIE1hdGguUEkgLyAxODApLFxyXG4gICAgICAgICAgICBkaWFtZXRlcjogdGhpcy5zZXR0aW5ncy5DaXJjbGVEaWFtZXRlclxyXG4gICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBicmVhaztcclxuXHJcbiAgICAgIC8vIEluZGl2aWR1YWwgcGFydGljbGVzIHJhbmRvbWx5IGRpc3RyaWJ1dGVkIGFjcm9zcyBlbnRpcmUgc2NyZWVuXHJcbiAgICAgIGNhc2UgJ1JhbmRvbSc6XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCAxMDA7IGkrKykge1xyXG4gICAgICAgICAgcGFyYW1zTGlzdC5wdXNoKHtcclxuICAgICAgICAgICAgeDogdGhpcy5wNS5yYW5kb20odGhpcy5lZGdlcy5sZWZ0LCB0aGlzLmVkZ2VzLnJpZ2h0KSxcclxuICAgICAgICAgICAgeTogdGhpcy5wNS5yYW5kb20odGhpcy5lZGdlcy50b3AsIHRoaXMuZWRnZXMuYm90dG9tKSxcclxuICAgICAgICAgICAgZGlhbWV0ZXI6IHRoaXMuc2V0dGluZ3MuQ2lyY2xlRGlhbWV0ZXJcclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAvLyBMaW5lIG9mIHBhcnRpY2xlcyBhbG9uZyBhbiBlZGdlIG9mIHRoZSBzY3JlZW4gb3IgZnJhbWVcclxuICAgICAgY2FzZSAnV2FsbCc6XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLnNldHRpbmdzLkJpYXNUb3dhcmRzKSB7XHJcbiAgICAgICAgICBjYXNlICdUb3AnOlxyXG4gICAgICAgICAgICBwYXJhbXNMaXN0ID0gdGhpcy5jcmVhdGVIb3Jpem9udGFsQ2x1c3RlcldhbGwodGhpcy5lZGdlcy50b3ApO1xyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICBjYXNlICdCb3R0b20nOlxyXG4gICAgICAgICAgICBwYXJhbXNMaXN0ID0gdGhpcy5jcmVhdGVIb3Jpem9udGFsQ2x1c3RlcldhbGwodGhpcy5lZGdlcy5ib3R0b20pO1xyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICBjYXNlICdMZWZ0JzpcclxuICAgICAgICAgICAgcGFyYW1zTGlzdCA9IHRoaXMuY3JlYXRlVmVydGljYWxDbHVzdGVyV2FsbCh0aGlzLmVkZ2VzLmxlZnQpO1xyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICBjYXNlICdSaWdodCc6XHJcbiAgICAgICAgICAgIHBhcmFtc0xpc3QgPSB0aGlzLmNyZWF0ZVZlcnRpY2FsQ2x1c3RlcldhbGwodGhpcy5lZGdlcy5yaWdodCk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgIGNhc2UgJ0VkZ2VzJzpcclxuICAgICAgICAgICAgcGFyYW1zTGlzdCA9IHBhcmFtc0xpc3QuY29uY2F0KHRoaXMuY3JlYXRlSG9yaXpvbnRhbENsdXN0ZXJXYWxsKHRoaXMuZWRnZXMudG9wKSk7XHJcbiAgICAgICAgICAgIHBhcmFtc0xpc3QgPSBwYXJhbXNMaXN0LmNvbmNhdCh0aGlzLmNyZWF0ZUhvcml6b250YWxDbHVzdGVyV2FsbCh0aGlzLmVkZ2VzLmJvdHRvbSkpO1xyXG4gICAgICAgICAgICBwYXJhbXNMaXN0ID0gcGFyYW1zTGlzdC5jb25jYXQodGhpcy5jcmVhdGVWZXJ0aWNhbENsdXN0ZXJXYWxsKHRoaXMuZWRnZXMubGVmdCkpO1xyXG4gICAgICAgICAgICBwYXJhbXNMaXN0ID0gcGFyYW1zTGlzdC5jb25jYXQodGhpcy5jcmVhdGVWZXJ0aWNhbENsdXN0ZXJXYWxsKHRoaXMuZWRnZXMucmlnaHQpKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgY2FzZSAnRXF1YXRvcic6XHJcbiAgICAgICAgICAgIHBhcmFtc0xpc3QgPSBwYXJhbXNMaXN0LmNvbmNhdCh0aGlzLmNyZWF0ZUhvcml6b250YWxDbHVzdGVyV2FsbCh3aW5kb3cuaW5uZXJIZWlnaHQgLyAyKSk7XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgIGNhc2UgJ01lcmlkaWFuJzpcclxuICAgICAgICAgICAgcGFyYW1zTGlzdCA9IHBhcmFtc0xpc3QuY29uY2F0KHRoaXMuY3JlYXRlVmVydGljYWxDbHVzdGVyV2FsbCh3aW5kb3cuaW5uZXJXaWR0aCAvIDIpKTtcclxuICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNyZWF0ZUNsdXN0ZXJGcm9tUGFyYW1zKHBhcmFtc0xpc3QpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgaG9yaXpvbnRhbCBsaW5lIG9mIGNsdXN0ZXJlZCBwYXJ0aWNsZXMgYXQgYSBnaXZlbiBZIGNvb3JkaW5hdGVcclxuICAgKiBAcGFyYW0ge251bWJlcn0geVBvcyAtIHZlcnRpY2FsIGNvb3JkaW5hdGUgd2hlcmUgbGluZSBvZiBwYXJ0aWNsZXMgaXMgY3JlYXRlZFxyXG4gICAqIEByZXR1cm5zIHtPYmplY3R9IE9iamVjdCBjb250YWluaW5nIFggYW5kIFkgY29vcmRpbmF0ZXMgb2YgYWxsIGNsdXN0ZXJlZCBwYXJ0aWNsZXMgaW4gbGluZVxyXG4gICAqL1xyXG4gIGNyZWF0ZUhvcml6b250YWxDbHVzdGVyV2FsbCh5UG9zKSB7XHJcbiAgICBsZXQgY29vcmRzID0gW10sXHJcbiAgICAgIHdpZHRoID0gdGhpcy51c2VGcmFtZSA/IHRoaXMuZWRnZXMucmlnaHQgLSB0aGlzLmVkZ2VzLmxlZnQgOiB3aW5kb3cuaW5uZXJXaWR0aDtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8PSB3aWR0aCAvIHRoaXMuc2V0dGluZ3MuQ2lyY2xlRGlhbWV0ZXI7IGkrKykge1xyXG4gICAgICBjb29yZHMucHVzaCh7XHJcbiAgICAgICAgeDogdGhpcy5lZGdlcy5sZWZ0ICsgaSAqIHRoaXMuc2V0dGluZ3MuQ2lyY2xlRGlhbWV0ZXIsXHJcbiAgICAgICAgeTogeVBvcyxcclxuICAgICAgICBkaWFtZXRlcjogdGhpcy5zZXR0aW5ncy5DaXJjbGVEaWFtZXRlclxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gY29vcmRzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgdmVydGljYWwgbGluZSBvZiBjbHVzdGVyZWQgcGFydGljbGVzIGF0IGEgZ2l2ZW4gWCBjb29yZGluYXRlXHJcbiAgICogQHBhcmFtIHtudW1iZXJ9IHhQb3MgLSBob3Jpem9udGFsIGNvb3JkaW5hdGUgd2hlcmUgbGluZSBvZiBwYXJ0aWNsZXMgaXMgY3JlYXRlZCBcclxuICAgKiBAcmV0dXJuIHtPYmplY3R9IE9iamVjdCBjb250YWluaW5nIHRoZSBYIGFuZCBZIGNvb3JkaW5hdGVzIG9mIGFsbCBjbHVzdGVyZWQgcGFydGljbGVzIGluIGxpbmVcclxuICAgKi9cclxuICBjcmVhdGVWZXJ0aWNhbENsdXN0ZXJXYWxsKHhQb3MpIHtcclxuICAgIGxldCBjb29yZHMgPSBbXSxcclxuICAgICAgaGVpZ2h0ID0gdGhpcy51c2VGcmFtZSA/IHRoaXMuZWRnZXMuYm90dG9tIC0gdGhpcy5lZGdlcy50b3AgOiB3aW5kb3cuaW5uZXJIZWlnaHQ7XHJcblxyXG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPD0gaGVpZ2h0IC8gdGhpcy5zZXR0aW5ncy5DaXJjbGVEaWFtZXRlcjsgaSsrKSB7XHJcbiAgICAgIGNvb3Jkcy5wdXNoKHtcclxuICAgICAgICB4OiB4UG9zLFxyXG4gICAgICAgIHk6IHRoaXMuZWRnZXMudG9wICsgaSAqIHRoaXMuc2V0dGluZ3MuQ2lyY2xlRGlhbWV0ZXIsXHJcbiAgICAgICAgZGlhbWV0ZXI6IHRoaXMuc2V0dGluZ3MuQ2lyY2xlRGlhbWV0ZXJcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIGNvb3JkcztcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhIHNldCBvZiBjbHVzdGVyZWQgcGFydGljbGVzIGZyb20gYW4gYXJyYXkgb2YgaW5kaXZpZHVhbCBwYXJ0aWNsZSBwYXJhbWV0ZXJzXHJcbiAgICogQHBhcmFtIHtBcnJheX0gcGFyYW1zTGlzdCAtIEFycmF5IG9mIG9iamVjdHMgY29udGFpbmluZyBwYXJ0aWNsZSBwYXJhbWV0ZXJzLiAgXHJcbiAgICovXHJcbiAgY3JlYXRlQ2x1c3RlckZyb21QYXJhbXMocGFyYW1zTGlzdCkge1xyXG4gICAgaWYgKHBhcmFtc0xpc3QubGVuZ3RoID4gMCkge1xyXG4gICAgICBmb3IgKGxldCBwYXJhbXMgb2YgcGFyYW1zTGlzdCkge1xyXG4gICAgICAgIHBhcmFtcy5zdHVjayA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5jcmVhdGVQYXJ0aWNsZShwYXJhbXMpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBDcmVhdGUgc2hhcGVzIGluIHRoZSBpbnRlcm5hbCBjb2xsaXNpb24gZGV0ZWN0aW9uIHN5c3RlbSBmcm9tIGEgc2V0IG9mIHBhdGhzXHJcbiAgICogQHBhcmFtIHtBcnJheX0gcGF0aHMgLSBBcnJheSBvZiBvYmplY3RzIGRlZmluaW5nIHBvbHlnb25zICh0ZWNobmljYWxseSBwb2x5bGluZXMpIHdpdGggc3RhcnRpbmcgWCBhbmQgWSBjb29yZGluYXRlcyBhbmQgYSBsaXN0IG9mIHBvaW50c1xyXG4gICAqL1xyXG4gIGNyZWF0ZVNoYXBlc0Zyb21QYXRocyhwYXRocykge1xyXG4gICAgaWYgKCFwYXRocy5oYXNPd25Qcm9wZXJ0eSgncG9pbnRzJykgJiYgcGF0aHMubGVuZ3RoID09IDApIHtcclxuICAgICAgY29uc29sZS5lcnJvcignVW5hYmxlIHRvIGNyZWF0ZSBzaGFwZXMuIFBhdGhzIG11c3QgaGF2ZSBhbiBhcnJheSBvZiBwb2ludHMgW1t4LHldLC4uLl0nKTtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIGZvciAobGV0IHBhdGggb2YgcGF0aHMpIHtcclxuICAgICAgLy8gQ3JlYXRlIGEgc2luZ2xlIHBvbHlnb24gaWYgdGhlIHNoYXBlIGlzIG1hcmtlZCBhcyBcInNvbGlkXCJcclxuICAgICAgaWYgKHBhdGguc29saWQpIHtcclxuICAgICAgICBsZXQgc2hhcGUgPSB0aGlzLnN5c3RlbS5jcmVhdGVQb2x5Z29uKHBhdGgueCwgcGF0aC55LCBwYXRoLnBvaW50cyk7XHJcbiAgICAgICAgc2hhcGUuc29saWQgPSBwYXRoLnNvbGlkO1xyXG4gICAgICAgIHNoYXBlLmNsb3NlZCA9IHBhdGguY2xvc2VkO1xyXG4gICAgICAgIHRoaXMuc2hhcGVzLnB1c2goc2hhcGUpO1xyXG5cclxuICAgICAgLy8gQ3JlYXRlIGEgc2VyaWVzIG9mIHNlcGFyYXRlIGxpbmUgc2VnbWVudHMgaWYgc2hhcGUgaXMgbm90IFwic29saWRcIiwgcGVyIGh0dHBzOi8vZ2l0aHViLmNvbS9TaW5vdmEvQ29sbGlzaW9ucyNhbmNob3ItbGluZXNcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBmb3IgKGxldCBpID0gMTsgaSA8IHBhdGgucG9pbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICBsZXQgbGluZSA9IHRoaXMuc3lzdGVtLmNyZWF0ZVBvbHlnb24ocGF0aC54LCBwYXRoLnksIFtbcGF0aC5wb2ludHNbaSAtIDFdWzBdLCBwYXRoLnBvaW50c1tpIC0gMV1bMV1dLCBbcGF0aC5wb2ludHNbaV1bMF0sIHBhdGgucG9pbnRzW2ldWzFdXV0pO1xyXG4gICAgICAgICAgbGluZS5zb2xpZCA9IGZhbHNlO1xyXG4gICAgICAgICAgbGluZS5jbG9zZWQgPSBmYWxzZTtcclxuICAgICAgICAgIHRoaXMuc2hhcGVzLnB1c2gobGluZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuXHJcbiAgLy89PT09PT09PT09PT09PVxyXG4gIC8vICBSZW1vdmVyc1xyXG4gIC8vPT09PT09PT09PT09PT1cclxuICAvKiogUmVtb3ZlIGFsbCB3YWxrZXJzLCBjbHVzdGVyZWQgcGFydGljbGVzLCBzaGFwZXMsIGFuZCBsaW5lcyBmcm9tIHRoZSBzeXN0ZW0gKi9cclxuICByZW1vdmVBbGwoKSB7XHJcbiAgICBmb3IgKGxldCBib2R5IG9mIHRoaXMuYm9kaWVzKSB7XHJcbiAgICAgIHRoaXMuc3lzdGVtLnJlbW92ZShib2R5KTtcclxuICAgIH1cclxuXHJcbiAgICBmb3IgKGxldCBzaGFwZSBvZiB0aGlzLnNoYXBlcykge1xyXG4gICAgICB0aGlzLnN5c3RlbS5yZW1vdmUoc2hhcGUpO1xyXG4gICAgfVxyXG5cclxuICAgIHRoaXMuYm9kaWVzID0gW107XHJcbiAgICB0aGlzLnNoYXBlcyA9IFtdO1xyXG4gICAgdGhpcy5saW5lcyA9IFtdO1xyXG4gICAgdGhpcy5udW1XYWxrZXJzID0gMDtcclxuICB9XHJcblxyXG5cclxuICAvLz09PT09PT09PT09PT09XHJcbiAgLy8gIFRvZ2dsZXJzXHJcbiAgLy89PT09PT09PT09PT09PVxyXG4gIC8qKiBUb2dnbGUgYmV0d2VlbiBwYXVzZWQgb3IgdW5wYXVzZWQgc3RhdGUgKi9cclxuICB0b2dnbGVQYXVzZSgpIHtcclxuICAgIHRoaXMucGF1c2VkID0gIXRoaXMucGF1c2VkO1xyXG4gIH1cclxuXHJcbiAgLyoqIFRvZ2dsZSB0aGUgdmlzaWJpbGl0eSBvZiB3YWxrZXJzICovXHJcbiAgdG9nZ2xlU2hvd1dhbGtlcnMoKSB7XHJcbiAgICB0aGlzLnNob3dXYWxrZXJzID0gIXRoaXMuc2hvd1dhbGtlcnM7XHJcbiAgfVxyXG5cclxuICAvKiogVG9nZ2xlIHRoZSB2aXNpYmlsaXR5IG9mIGNsdXN0ZXJlZCBwYXJ0aWNsZXMgKi9cclxuICB0b2dnbGVTaG93Q2x1c3RlcnMoKSB7XHJcbiAgICB0aGlzLnNob3dDbHVzdGVycyA9ICF0aGlzLnNob3dDbHVzdGVycztcclxuICB9XHJcblxyXG4gIC8qKiBUb2dnbGUgdGhlIHZpc2liaWxpdHkgb2Ygc2hhcGVzICovXHJcbiAgdG9nZ2xlU2hvd1NoYXBlcygpIHtcclxuICAgIHRoaXMuc2hvd1NoYXBlcyA9ICF0aGlzLnNob3dTaGFwZXM7XHJcbiAgfVxyXG5cclxuICAvKiogVG9nZ2xlIHRoZSB1c2Ugb2YgYSBjdXN0b20tZGVmaW5lZCBmcmFtZSAoYm91bmRpbmcgYm94KSAqL1xyXG4gIHRvZ2dsZVVzZUZyYW1lKCkge1xyXG4gICAgdGhpcy51c2VGcmFtZSA9ICF0aGlzLnVzZUZyYW1lO1xyXG4gICAgdGhpcy5yZXNldEVkZ2VzKCk7XHJcbiAgfVxyXG5cclxuICAvKiogVG9nZ2xlIHRoZSBsaW5lLWJhc2VkIHJlbmRlcmluZyBtb2RlICovXHJcbiAgdG9nZ2xlTGluZVJlbmRlcmluZ01vZGUoKSB7XHJcbiAgICBpZih0aGlzLnJlbmRlck1vZGUgIT0gJ0xpbmVzJykge1xyXG4gICAgICBpZih0aGlzLnNldHRpbmdzLkNhcHR1cmVMaW5lcykge1xyXG4gICAgICAgIHRoaXMucmVuZGVyTW9kZSA9ICdMaW5lcyc7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgY29uc29sZS5lcnJvcignTGluZSByZW5kZXJpbmcgbW9kZSBvbmx5IGFsbG93ZWQgd2hlbiBDYXB0dXJlTGluZXMgaXMgc2V0LicpO1xyXG4gICAgICB9XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB0aGlzLnJlbmRlck1vZGUgPSAnU2hhcGVzJztcclxuICAgIH1cclxuICB9XHJcblxyXG5cclxuICAvLz09PT09PT09PT09PT09PT09PT1cclxuICAvLyAgUGF1c2UvdW5wYXVzZVxyXG4gIC8vPT09PT09PT09PT09PT09PT09PVxyXG4gIC8qKiBQYXVzZSB0aGUgc2ltdWxhdGlvbiAqL1xyXG4gIHBhdXNlKCkge1xyXG4gICAgdGhpcy5wYXVzZWQgPSB0cnVlO1xyXG4gIH1cclxuXHJcbiAgLyoqIFVucGF1c2UgdGhlIHNpbXVsYXRpb24gKi9cclxuICB1bnBhdXNlKCkge1xyXG4gICAgdGhpcy5wYXVzZWQgPSBmYWxzZTtcclxuICB9XHJcblxyXG5cclxuICAvLz09PT09PT09PT09PT09PT09PT09PT1cclxuICAvLyAgVXRpbGl0eSBmdW5jdGlvbnNcclxuICAvLz09PT09PT09PT09PT09PT09PT09PT1cclxuICAvKipcclxuICAgKiBDcmVhdGUgYW4gSFNMLWZvcm1hdHRlZCBzdHJpbmcgdGhhdCBwbGF5cyB3ZWxsIHdpdGggcDUuanMgZnJvbSBhbiBvYmplY3Qgd2l0aCBhcHByb3ByaWF0ZSBwcm9wZXJ0aWVzXHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGNvbG9yT2JqZWN0IC0gT2JqZWN0IHdpdGggdGhlIHByb3BlcnRpZXMgaCwgcywgYW5kIGIgKGFsbCBudW1iZXJzKSBcclxuICAgKiBAcmV0dXJucyB7c3RyaW5nfSAtIFN0cmluZyBpbiB0aGUgZm9ybWF0IG9mIGhzbCh7aH0sIHtzfSwge2J9KVxyXG4gICAqL1xyXG4gIGdldENvbG9yU3RyaW5nRnJvbU9iamVjdChjb2xvck9iamVjdCkge1xyXG4gICAgbGV0IGNvbG9yU3RyaW5nID0gJ2hzbGEoJyArXHJcbiAgICAgIGNvbG9yT2JqZWN0LmggKyAnLCAnICtcclxuICAgICAgY29sb3JPYmplY3QucyArICclLCAnICtcclxuICAgICAgY29sb3JPYmplY3QuYiArICclLCAnO1xyXG5cclxuICAgIGlmKGNvbG9yT2JqZWN0Lmhhc093blByb3BlcnR5KCdhJykpIHtcclxuICAgICAgY29sb3JTdHJpbmcgKz0gY29sb3JPYmplY3QuYSArICcpJztcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGNvbG9yU3RyaW5nICs9ICcxLjApJztcclxuICAgIH1cclxuICAgIFxyXG4gICAgcmV0dXJuIGNvbG9yU3RyaW5nO1xyXG4gIH1cclxuXHJcblxyXG4gIC8vPT09PT09PT09PT09XHJcbiAgLy8gIEV4cG9ydFxyXG4gIC8vPT09PT09PT09PT09XHJcbiAgLyoqIENvbnN0cnVjdHMgYW4gU1ZHIG5vZGUgd2l0aCBwYXRocyBiYXNlZCBvbiBjdXJyZW50IHJlbmRlcmluZyBtb2RlIG9mIHRoZSBzaW11bGF0aW9uLCB0aGVuIGluaXRpYXRlcyBhIGRvd25sb2FkIG9uIHRoZSB1c2VyJ3MgbWFjaGluZSBvZiB0aGUgZ2VuZXJhdGVkIGZpbGUgKi9cclxuICBleHBvcnQoKSB7XHJcbiAgICAvLyBTZXQgdXAgPHN2Zz4gZWxlbWVudFxyXG4gICAgbGV0IHN2ZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N2ZycpO1xyXG4gICAgc3ZnLnNldEF0dHJpYnV0ZSgneG1sbnMnLCAnaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnKTtcclxuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ3htbG5zOnhsaW5rJywgJ2h0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsnKTtcclxuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgd2luZG93LmlubmVyV2lkdGgpO1xyXG4gICAgc3ZnLnNldEF0dHJpYnV0ZSgnaGVpZ2h0Jywgd2luZG93LmlubmVySGVpZ2h0KTtcclxuICAgIHN2Zy5zZXRBdHRyaWJ1dGUoJ3ZpZXdCb3gnLCAnMCAwICcgKyB3aW5kb3cuaW5uZXJXaWR0aCArICcgJyArIHdpbmRvdy5pbm5lckhlaWdodCk7XHJcblxyXG4gICAgLy8gRXhwb3J0IGFsbCBib2RpZXMgYmFzZWQgb24gdGhlIGN1cnJlbnQgcmVuZGVyaW5nIG1vZGVcclxuICAgIHN3aXRjaCh0aGlzLnJlbmRlck1vZGUpIHtcclxuICAgICAgY2FzZSAnU2hhcGVzJzpcclxuICAgICAgZGVmYXVsdDpcclxuICAgICAgICBmb3IobGV0IGJvZHkgb2YgdGhpcy5ib2RpZXMpIHtcclxuICAgICAgICAgIGlmKCFib2R5LnN0dWNrICYmICF0aGlzLnNob3dXYWxrZXJzKSB7XHJcbiAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIGlmKGJvZHkuX2NpcmNsZSkge1xyXG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoIHRoaXMuY3JlYXRlQ2lyY2xlRWxGcm9tQm9keShib2R5KSApO1xyXG4gICAgICAgICAgfSBlbHNlIHsgIFxyXG4gICAgICAgICAgICBzdmcuYXBwZW5kQ2hpbGQoIHRoaXMuY3JlYXRlUGF0aEVsRnJvbVBvaW50cyggdGhpcy5nZXRQb2ludHNGcm9tQ29vcmRzKGJvZHkuX2Nvb3JkcykgKSApO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBjYXNlICdMaW5lcyc6XHJcbiAgICAgICAgaWYodGhpcy5saW5lcy5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICBmb3IobGV0IGxpbmUgb2YgdGhpcy5saW5lcykge1xyXG4gICAgICAgICAgICBsZXQgcG9pbnRzID0gW107XHJcbiAgICAgICAgICAgIFxyXG4gICAgICAgICAgICBwb2ludHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgeDogbGluZS5wMS54LCBcclxuICAgICAgICAgICAgICB5OiBsaW5lLnAxLnlcclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBwb2ludHMucHVzaCh7XHJcbiAgICAgICAgICAgICAgeDogbGluZS5wMi54LFxyXG4gICAgICAgICAgICAgIHk6IGxpbmUucDIueVxyXG4gICAgICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgICAgIHN2Zy5hcHBlbmRDaGlsZCggdGhpcy5jcmVhdGVQYXRoRWxGcm9tUG9pbnRzKHBvaW50cykgKTtcclxuICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGJyZWFrO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIEV4cG9ydCBhbGwgY3VzdG9tIGltcG9ydGVkIHNoYXBlcyBhcyBwYXRoc1xyXG4gICAgaWYodGhpcy5zaGFwZXMubGVuZ3RoID4gMCkge1xyXG4gICAgICBmb3IobGV0IHNoYXBlIG9mIHRoaXMuc2hhcGVzKSB7XHJcbiAgICAgICAgc3ZnLmFwcGVuZENoaWxkKCB0aGlzLmNyZWF0ZVBhdGhFbEZyb21Qb2ludHMoIHRoaXMuZ2V0UG9pbnRzRnJvbUNvb3JkcyhzaGFwZS5fY29vcmRzKSApICk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICAgIFxyXG4gICAgLy8gRm9yY2UgZG93bmxvYWQgb2YgLnN2ZyBmaWxlIGJhc2VkIG9uIGh0dHBzOi8vanNmaWRkbGUubmV0L2NoNzdlN3loLzFcclxuICAgIGxldCBzdmdEb2NUeXBlID0gZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlRG9jdW1lbnRUeXBlKCdzdmcnLCBcIi0vL1czQy8vRFREIFNWRyAxLjEvL0VOXCIsIFwiaHR0cDovL3d3dy53My5vcmcvR3JhcGhpY3MvU1ZHLzEuMS9EVEQvc3ZnMTEuZHRkXCIpO1xyXG4gICAgbGV0IHN2Z0RvYyA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZURvY3VtZW50KCdodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZycsICdzdmcnLCBzdmdEb2NUeXBlKTtcclxuICAgIHN2Z0RvYy5yZXBsYWNlQ2hpbGQoc3ZnLCBzdmdEb2MuZG9jdW1lbnRFbGVtZW50KTtcclxuICAgIGxldCBzdmdEYXRhID0gKG5ldyBYTUxTZXJpYWxpemVyKCkpLnNlcmlhbGl6ZVRvU3RyaW5nKHN2Z0RvYyk7XHJcblxyXG4gICAgbGV0IGJsb2IgPSBuZXcgQmxvYihbc3ZnRGF0YS5yZXBsYWNlKC8+PC9nLCAnPlxcblxccjwnKV0pO1xyXG4gICAgc2F2ZUFzKGJsb2IsICdkbGEtJyArIERhdGUubm93KCkgKyAnLnN2ZycpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ29udmVydCBhIGZsYXQgYXJyYXkgb2YgY29vcmRzIChbeDEsIHkxLCB4MiwgeTIsIC4uLl0pLCB1c2VkIGludGVybmFsbHkgYnkgY29sbGlzaW9ucyBwYWNrYWdlIGludG8gYW4gYXJyYXkgb2Ygb2JqZWN0cyBmb3IgZWFzaWVyIHRyYXZlcnNpbmdcclxuICAgKiBAcGFyYW0ge2FycmF5fSBjb29yZHMgXHJcbiAgICovXHJcbiAgZ2V0UG9pbnRzRnJvbUNvb3Jkcyhjb29yZHMpIHtcclxuICAgIGxldCBwb2ludHMgPSBbXTtcclxuXHJcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNvb3Jkcy5sZW5ndGggLSAxOyBpICs9IDIpIHtcclxuICAgICAgcG9pbnRzLnB1c2goe1xyXG4gICAgICAgIHg6IGNvb3Jkc1tpXSwgXHJcbiAgICAgICAgeTogY29vcmRzW2kgKyAxXVxyXG4gICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcG9pbnRzO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICogQ3JlYXRlIGEgPHBhdGg+IGVsZW1lbnQgd2l0aCBhIFwiZFwiIGF0dHJpYnV0ZSBjb250YWluaW5nIHByb3ZpZGVkIHBvaW50c1xyXG4gICAqIEBwYXJhbSB7YXJyYXl9IHBvaW50cyBcclxuICAgKiBAcmV0dXJucyB7bm9kZX0gU1ZHIDxwYXRoPiBlbGVtZW50IHdpdGggXCJkXCIgYXR0cmlidXRlIGNvbnRhaW5pbmcgcHJvdmlkZWQgcG9pbnRzXHJcbiAgICovXHJcbiAgY3JlYXRlUGF0aEVsRnJvbVBvaW50cyhwb2ludHMpIHtcclxuICAgIGxldCBwb2ludHNTdHJpbmcgPSAnJztcclxuXHJcbiAgICBmb3IobGV0IFtpbmRleCwgcG9pbnRdIG9mIHBvaW50cy5lbnRyaWVzKCkpIHtcclxuICAgICAgcG9pbnRzU3RyaW5nICs9IHBvaW50LnggKyAnLCcgKyBwb2ludC55O1xyXG5cclxuICAgICAgaWYoaW5kZXggPCBwb2ludHMubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgIHBvaW50c1N0cmluZyArPSAnICc7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBsZXQgZCA9IHRvUGF0aCh7XHJcbiAgICAgIHR5cGU6ICdwb2x5bGluZScsXHJcbiAgICAgIHBvaW50czogcG9pbnRzU3RyaW5nXHJcbiAgICB9KTtcclxuXHJcbiAgICBsZXQgcGF0aEVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncGF0aCcpO1xyXG4gICAgcGF0aEVsLnNldEF0dHJpYnV0ZSgnZCcsIGQpO1xyXG4gICAgcGF0aEVsLnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnZmlsbDogbm9uZTsgc3Ryb2tlOiBibGFjazsgc3Ryb2tlLXdpZHRoOiAxJyk7XHJcblxyXG4gICAgcmV0dXJuIHBhdGhFbDtcclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIENyZWF0ZSBhbiBTVkcgPGNpcmNsZT4gZWxlbWVudCB3aXRoIGF0dHJpYnV0ZXMgYGN4YCwgYGN5YCwgYW5kIGByYCBleHRyYWN0ZWQgZnJvbSBwcm92aWRlZCBib2R5XHJcbiAgICogQHBhcmFtIHtvYmplY3R9IGJvZHkgXHJcbiAgICogQHJldHVybnMge25vZGV9IFNWRyA8Y2lyY2xlPiBlbGVtZW50IHdpdGggYGN4YCwgYGN5YCwgYW5kIGByYCBhdHRyaWJ1dGVzIGZyb20gYm9keVxyXG4gICAqL1xyXG4gIGNyZWF0ZUNpcmNsZUVsRnJvbUJvZHkoYm9keSkge1xyXG4gICAgbGV0IGNpcmNsZUVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnY2lyY2xlJyk7XHJcbiAgICBjaXJjbGVFbC5zZXRBdHRyaWJ1dGUoJ2N4JywgYm9keS54KTtcclxuICAgIGNpcmNsZUVsLnNldEF0dHJpYnV0ZSgnY3knLCBib2R5LnkpO1xyXG4gICAgY2lyY2xlRWwuc2V0QXR0cmlidXRlKCdyJywgYm9keS5yYWRpdXMpO1xyXG4gICAgcmV0dXJuIGNpcmNsZUVsO1xyXG4gIH1cclxuXHJcbn0iLCJ2YXIgZztcblxuLy8gVGhpcyB3b3JrcyBpbiBub24tc3RyaWN0IG1vZGVcbmcgPSAoZnVuY3Rpb24oKSB7XG5cdHJldHVybiB0aGlzO1xufSkoKTtcblxudHJ5IHtcblx0Ly8gVGhpcyB3b3JrcyBpZiBldmFsIGlzIGFsbG93ZWQgKHNlZSBDU1ApXG5cdGcgPSBnIHx8IG5ldyBGdW5jdGlvbihcInJldHVybiB0aGlzXCIpKCk7XG59IGNhdGNoIChlKSB7XG5cdC8vIFRoaXMgd29ya3MgaWYgdGhlIHdpbmRvdyByZWZlcmVuY2UgaXMgYXZhaWxhYmxlXG5cdGlmICh0eXBlb2Ygd2luZG93ID09PSBcIm9iamVjdFwiKSBnID0gd2luZG93O1xufVxuXG4vLyBnIGNhbiBzdGlsbCBiZSB1bmRlZmluZWQsIGJ1dCBub3RoaW5nIHRvIGRvIGFib3V0IGl0Li4uXG4vLyBXZSByZXR1cm4gdW5kZWZpbmVkLCBpbnN0ZWFkIG9mIG5vdGhpbmcgaGVyZSwgc28gaXQnc1xuLy8gZWFzaWVyIHRvIGhhbmRsZSB0aGlzIGNhc2UuIGlmKCFnbG9iYWwpIHsgLi4ufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGc7XG4iLCJ2YXIgZXh0ZW5kU3RhdGljcz1PYmplY3Quc2V0UHJvdG90eXBlT2Z8fHtfX3Byb3RvX186W119aW5zdGFuY2VvZiBBcnJheSYmZnVuY3Rpb24odCxhKXt0Ll9fcHJvdG9fXz1hfXx8ZnVuY3Rpb24odCxhKXtmb3IodmFyIHIgaW4gYSlhLmhhc093blByb3BlcnR5KHIpJiYodFtyXT1hW3JdKX07ZnVuY3Rpb24gX19leHRlbmRzKHQsYSl7ZnVuY3Rpb24gcigpe3RoaXMuY29uc3RydWN0b3I9dH1leHRlbmRTdGF0aWNzKHQsYSksdC5wcm90b3R5cGU9bnVsbD09PWE/T2JqZWN0LmNyZWF0ZShhKTooci5wcm90b3R5cGU9YS5wcm90b3R5cGUsbmV3IHIpfWZ1bmN0aW9uIHJvdGF0ZSh0LGEpe3ZhciByPXRbMF0sZT10WzFdO3JldHVybltyKk1hdGguY29zKGEpLWUqTWF0aC5zaW4oYSkscipNYXRoLnNpbihhKStlKk1hdGguY29zKGEpXX1mdW5jdGlvbiBhc3NlcnROdW1iZXJzKCl7Zm9yKHZhciB0PVtdLGE9MDthPGFyZ3VtZW50cy5sZW5ndGg7YSsrKXRbYV09YXJndW1lbnRzW2FdO2Zvcih2YXIgcj0wO3I8dC5sZW5ndGg7cisrKWlmKFwibnVtYmVyXCIhPXR5cGVvZiB0W3JdKXRocm93IG5ldyBFcnJvcihcImFzc2VydE51bWJlcnMgYXJndW1lbnRzW1wiK3IrXCJdIGlzIG5vdCBhIG51bWJlci4gXCIrdHlwZW9mIHRbcl0rXCIgPT0gdHlwZW9mIFwiK3Rbcl0pO3JldHVybiEwfXZhciBQST1NYXRoLlBJO2Z1bmN0aW9uIGFubm90YXRlQXJjQ29tbWFuZCh0LGEscil7dC5sQXJjRmxhZz0wPT09dC5sQXJjRmxhZz8wOjEsdC5zd2VlcEZsYWc9MD09PXQuc3dlZXBGbGFnPzA6MTt2YXIgZT10LnJYLG49dC5yWSxpPXQueCxvPXQueTtlPU1hdGguYWJzKHQuclgpLG49TWF0aC5hYnModC5yWSk7dmFyIHM9cm90YXRlKFsoYS1pKS8yLChyLW8pLzJdLC10LnhSb3QvMTgwKlBJKSxoPXNbMF0sdT1zWzFdLGM9TWF0aC5wb3coaCwyKS9NYXRoLnBvdyhlLDIpK01hdGgucG93KHUsMikvTWF0aC5wb3cobiwyKTsxPGMmJihlKj1NYXRoLnNxcnQoYyksbio9TWF0aC5zcXJ0KGMpKSx0LnJYPWUsdC5yWT1uO3ZhciBtPU1hdGgucG93KGUsMikqTWF0aC5wb3codSwyKStNYXRoLnBvdyhuLDIpKk1hdGgucG93KGgsMiksXz0odC5sQXJjRmxhZyE9PXQuc3dlZXBGbGFnPzE6LTEpKk1hdGguc3FydChNYXRoLm1heCgwLChNYXRoLnBvdyhlLDIpKk1hdGgucG93KG4sMiktbSkvbSkpLFQ9ZSp1L24qXyxPPS1uKmgvZSpfLHA9cm90YXRlKFtULE9dLHQueFJvdC8xODAqUEkpO3QuY1g9cFswXSsoYStpKS8yLHQuY1k9cFsxXSsocitvKS8yLHQucGhpMT1NYXRoLmF0YW4yKCh1LU8pL24sKGgtVCkvZSksdC5waGkyPU1hdGguYXRhbjIoKC11LU8pL24sKC1oLVQpL2UpLDA9PT10LnN3ZWVwRmxhZyYmdC5waGkyPnQucGhpMSYmKHQucGhpMi09MipQSSksMT09PXQuc3dlZXBGbGFnJiZ0LnBoaTI8dC5waGkxJiYodC5waGkyKz0yKlBJKSx0LnBoaTEqPTE4MC9QSSx0LnBoaTIqPTE4MC9QSX1mdW5jdGlvbiBpbnRlcnNlY3Rpb25Vbml0Q2lyY2xlTGluZSh0LGEscil7YXNzZXJ0TnVtYmVycyh0LGEscik7dmFyIGU9dCp0K2EqYS1yKnI7aWYoMD5lKXJldHVybltdO2lmKDA9PT1lKXJldHVybltbdCpyLyh0KnQrYSphKSxhKnIvKHQqdCthKmEpXV07dmFyIG49TWF0aC5zcXJ0KGUpO3JldHVybltbKHQqcithKm4pLyh0KnQrYSphKSwoYSpyLXQqbikvKHQqdCthKmEpXSxbKHQqci1hKm4pLyh0KnQrYSphKSwoYSpyK3QqbikvKHQqdCthKmEpXV19dmFyIFNWR1BhdGhEYXRhVHJhbnNmb3JtZXIsREVHPU1hdGguUEkvMTgwO2Z1bmN0aW9uIGxlcnAodCxhLHIpe3JldHVybigxLXIpKnQrciphfWZ1bmN0aW9uIGFyY0F0KHQsYSxyLGUpe3JldHVybiB0K01hdGguY29zKGUvMTgwKlBJKSphK01hdGguc2luKGUvMTgwKlBJKSpyfWZ1bmN0aW9uIGJlemllclJvb3QodCxhLHIsZSl7dmFyIG49YS10LGk9ci1hLG89MypuKzMqKGUtciktNippLHM9NiooaS1uKSxoPTMqbjtyZXR1cm4gTWF0aC5hYnMobyk8MWUtNj9bLWgvc106cHFGb3JtdWxhKHMvbyxoL28sMWUtNil9ZnVuY3Rpb24gYmV6aWVyQXQodCxhLHIsZSxuKXt2YXIgaT0xLW47cmV0dXJuIHQqKGkqaSppKSthKigzKmkqaSpuKStyKigzKmkqbipuKStlKihuKm4qbil9ZnVuY3Rpb24gcHFGb3JtdWxhKHQsYSxyKXt2b2lkIDA9PT1yJiYocj0xZS02KTt2YXIgZT10KnQvNC1hO2lmKGU8LXIpcmV0dXJuW107aWYoZTw9cilyZXR1cm5bLXQvMl07dmFyIG49TWF0aC5zcXJ0KGUpO3JldHVyblstdC8yLW4sLXQvMituXX1mdW5jdGlvbiBhMmModCxhLHIpe3ZhciBlLG4saSxvO3QuY1h8fGFubm90YXRlQXJjQ29tbWFuZCh0LGEscik7Zm9yKHZhciBzPU1hdGgubWluKHQucGhpMSx0LnBoaTIpLGg9TWF0aC5tYXgodC5waGkxLHQucGhpMiktcyx1PU1hdGguY2VpbChoLzkwKSxjPW5ldyBBcnJheSh1KSxtPWEsXz1yLFQ9MDtUPHU7VCsrKXt2YXIgTz1sZXJwKHQucGhpMSx0LnBoaTIsVC91KSxwPWxlcnAodC5waGkxLHQucGhpMiwoVCsxKS91KSx5PXAtTyxTPTQvMypNYXRoLnRhbih5KkRFRy80KSxmPVtNYXRoLmNvcyhPKkRFRyktUypNYXRoLnNpbihPKkRFRyksTWF0aC5zaW4oTypERUcpK1MqTWF0aC5jb3MoTypERUcpXSxWPWZbMF0sTj1mWzFdLEQ9W01hdGguY29zKHAqREVHKSxNYXRoLnNpbihwKkRFRyldLFA9RFswXSxsPURbMV0sdj1bUCtTKk1hdGguc2luKHAqREVHKSxsLVMqTWF0aC5jb3MocCpERUcpXSxFPXZbMF0sQT12WzFdO2NbVF09e3JlbGF0aXZlOnQucmVsYXRpdmUsdHlwZTpTVkdQYXRoRGF0YS5DVVJWRV9UT307dmFyIGQ9ZnVuY3Rpb24oYSxyKXt2YXIgZT1yb3RhdGUoW2EqdC5yWCxyKnQuclldLHQueFJvdCksbj1lWzBdLGk9ZVsxXTtyZXR1cm5bdC5jWCtuLHQuY1kraV19O2U9ZChWLE4pLGNbVF0ueDE9ZVswXSxjW1RdLnkxPWVbMV0sbj1kKEUsQSksY1tUXS54Mj1uWzBdLGNbVF0ueTI9blsxXSxpPWQoUCxsKSxjW1RdLng9aVswXSxjW1RdLnk9aVsxXSx0LnJlbGF0aXZlJiYoY1tUXS54MS09bSxjW1RdLnkxLT1fLGNbVF0ueDItPW0sY1tUXS55Mi09XyxjW1RdLngtPW0sY1tUXS55LT1fKSxtPShvPVtjW1RdLngsY1tUXS55XSlbMF0sXz1vWzFdfXJldHVybiBjfSFmdW5jdGlvbih0KXtmdW5jdGlvbiBhKCl7cmV0dXJuIG4oZnVuY3Rpb24odCxhLHIpe3JldHVybiB0LnJlbGF0aXZlJiYodm9pZCAwIT09dC54MSYmKHQueDErPWEpLHZvaWQgMCE9PXQueTEmJih0LnkxKz1yKSx2b2lkIDAhPT10LngyJiYodC54Mis9YSksdm9pZCAwIT09dC55MiYmKHQueTIrPXIpLHZvaWQgMCE9PXQueCYmKHQueCs9YSksdm9pZCAwIT09dC55JiYodC55Kz1yKSx0LnJlbGF0aXZlPSExKSx0fSl9ZnVuY3Rpb24gcigpe3ZhciB0PU5hTixhPU5hTixyPU5hTixlPU5hTjtyZXR1cm4gbihmdW5jdGlvbihuLGksbyl7cmV0dXJuIG4udHlwZSZTVkdQYXRoRGF0YS5TTU9PVEhfQ1VSVkVfVE8mJihuLnR5cGU9U1ZHUGF0aERhdGEuQ1VSVkVfVE8sdD1pc05hTih0KT9pOnQsYT1pc05hTihhKT9vOmEsbi54MT1uLnJlbGF0aXZlP2ktdDoyKmktdCxuLnkxPW4ucmVsYXRpdmU/by1hOjIqby1hKSxuLnR5cGUmU1ZHUGF0aERhdGEuQ1VSVkVfVE8/KHQ9bi5yZWxhdGl2ZT9pK24ueDI6bi54MixhPW4ucmVsYXRpdmU/bytuLnkyOm4ueTIpOih0PU5hTixhPU5hTiksbi50eXBlJlNWR1BhdGhEYXRhLlNNT09USF9RVUFEX1RPJiYobi50eXBlPVNWR1BhdGhEYXRhLlFVQURfVE8scj1pc05hTihyKT9pOnIsZT1pc05hTihlKT9vOmUsbi54MT1uLnJlbGF0aXZlP2ktcjoyKmktcixuLnkxPW4ucmVsYXRpdmU/by1lOjIqby1lKSxuLnR5cGUmU1ZHUGF0aERhdGEuUVVBRF9UTz8ocj1uLnJlbGF0aXZlP2krbi54MTpuLngxLGU9bi5yZWxhdGl2ZT9vK24ueTE6bi55MSk6KHI9TmFOLGU9TmFOKSxufSl9ZnVuY3Rpb24gZSgpe3ZhciB0PU5hTixhPU5hTjtyZXR1cm4gbihmdW5jdGlvbihyLGUsbil7aWYoci50eXBlJlNWR1BhdGhEYXRhLlNNT09USF9RVUFEX1RPJiYoci50eXBlPVNWR1BhdGhEYXRhLlFVQURfVE8sdD1pc05hTih0KT9lOnQsYT1pc05hTihhKT9uOmEsci54MT1yLnJlbGF0aXZlP2UtdDoyKmUtdCxyLnkxPXIucmVsYXRpdmU/bi1hOjIqbi1hKSxyLnR5cGUmU1ZHUGF0aERhdGEuUVVBRF9UTyl7dD1yLnJlbGF0aXZlP2Urci54MTpyLngxLGE9ci5yZWxhdGl2ZT9uK3IueTE6ci55MTt2YXIgaT1yLngxLG89ci55MTtyLnR5cGU9U1ZHUGF0aERhdGEuQ1VSVkVfVE8sci54MT0oKHIucmVsYXRpdmU/MDplKSsyKmkpLzMsci55MT0oKHIucmVsYXRpdmU/MDpuKSsyKm8pLzMsci54Mj0oci54KzIqaSkvMyxyLnkyPShyLnkrMipvKS8zfWVsc2UgdD1OYU4sYT1OYU47cmV0dXJuIHJ9KX1mdW5jdGlvbiBuKHQpe3ZhciBhPTAscj0wLGU9TmFOLG49TmFOO3JldHVybiBmdW5jdGlvbihpKXtpZihpc05hTihlKSYmIShpLnR5cGUmU1ZHUGF0aERhdGEuTU9WRV9UTykpdGhyb3cgbmV3IEVycm9yKFwicGF0aCBtdXN0IHN0YXJ0IHdpdGggbW92ZXRvXCIpO3ZhciBvPXQoaSxhLHIsZSxuKTtyZXR1cm4gaS50eXBlJlNWR1BhdGhEYXRhLkNMT1NFX1BBVEgmJihhPWUscj1uKSx2b2lkIDAhPT1pLngmJihhPWkucmVsYXRpdmU/YStpLng6aS54KSx2b2lkIDAhPT1pLnkmJihyPWkucmVsYXRpdmU/citpLnk6aS55KSxpLnR5cGUmU1ZHUGF0aERhdGEuTU9WRV9UTyYmKGU9YSxuPXIpLG99fWZ1bmN0aW9uIGkodCxhLHIsZSxpLG8pe3JldHVybiBhc3NlcnROdW1iZXJzKHQsYSxyLGUsaSxvKSxuKGZ1bmN0aW9uKG4scyxoLHUpe3ZhciBjPW4ueDEsbT1uLngyLF89bi5yZWxhdGl2ZSYmIWlzTmFOKHUpLFQ9dm9pZCAwIT09bi54P24ueDpfPzA6cyxPPXZvaWQgMCE9PW4ueT9uLnk6Xz8wOmg7ZnVuY3Rpb24gcCh0KXtyZXR1cm4gdCp0fW4udHlwZSZTVkdQYXRoRGF0YS5IT1JJWl9MSU5FX1RPJiYwIT09YSYmKG4udHlwZT1TVkdQYXRoRGF0YS5MSU5FX1RPLG4ueT1uLnJlbGF0aXZlPzA6aCksbi50eXBlJlNWR1BhdGhEYXRhLlZFUlRfTElORV9UTyYmMCE9PXImJihuLnR5cGU9U1ZHUGF0aERhdGEuTElORV9UTyxuLng9bi5yZWxhdGl2ZT8wOnMpLHZvaWQgMCE9PW4ueCYmKG4ueD1uLngqdCtPKnIrKF8/MDppKSksdm9pZCAwIT09bi55JiYobi55PVQqYStuLnkqZSsoXz8wOm8pKSx2b2lkIDAhPT1uLngxJiYobi54MT1uLngxKnQrbi55MSpyKyhfPzA6aSkpLHZvaWQgMCE9PW4ueTEmJihuLnkxPWMqYStuLnkxKmUrKF8/MDpvKSksdm9pZCAwIT09bi54MiYmKG4ueDI9bi54Mip0K24ueTIqcisoXz8wOmkpKSx2b2lkIDAhPT1uLnkyJiYobi55Mj1tKmErbi55MiplKyhfPzA6bykpO3ZhciB5PXQqZS1hKnI7aWYodm9pZCAwIT09bi54Um90JiYoMSE9PXR8fDAhPT1hfHwwIT09cnx8MSE9PWUpKWlmKDA9PT15KWRlbGV0ZSBuLnJYLGRlbGV0ZSBuLnJZLGRlbGV0ZSBuLnhSb3QsZGVsZXRlIG4ubEFyY0ZsYWcsZGVsZXRlIG4uc3dlZXBGbGFnLG4udHlwZT1TVkdQYXRoRGF0YS5MSU5FX1RPO2Vsc2V7dmFyIFM9bi54Um90Kk1hdGguUEkvMTgwLGY9TWF0aC5zaW4oUyksVj1NYXRoLmNvcyhTKSxOPTEvcChuLnJYKSxEPTEvcChuLnJZKSxQPXAoVikqTitwKGYpKkQsbD0yKmYqViooTi1EKSx2PXAoZikqTitwKFYpKkQsRT1QKmUqZS1sKmEqZSt2KmEqYSxBPWwqKHQqZSthKnIpLTIqKFAqciplK3YqdCphKSxkPVAqcipyLWwqdCpyK3YqdCp0LEc9KE1hdGguYXRhbjIoQSxFLWQpK01hdGguUEkpJU1hdGguUEkvMixDPU1hdGguc2luKEcpLHg9TWF0aC5jb3MoRyk7bi5yWD1NYXRoLmFicyh5KS9NYXRoLnNxcnQoRSpwKHgpK0EqQyp4K2QqcChDKSksbi5yWT1NYXRoLmFicyh5KS9NYXRoLnNxcnQoRSpwKEMpLUEqQyp4K2QqcCh4KSksbi54Um90PTE4MCpHL01hdGguUEl9cmV0dXJuIHZvaWQgMCE9PW4uc3dlZXBGbGFnJiYwPnkmJihuLnN3ZWVwRmxhZz0rIW4uc3dlZXBGbGFnKSxufSl9ZnVuY3Rpb24gbygpe3JldHVybiBmdW5jdGlvbih0KXt2YXIgYT17fTtmb3IodmFyIHIgaW4gdClhW3JdPXRbcl07cmV0dXJuIGF9fXQuUk9VTkQ9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gYShhKXtyZXR1cm4gTWF0aC5yb3VuZChhKnQpL3R9cmV0dXJuIHZvaWQgMD09PXQmJih0PTFlMTMpLGFzc2VydE51bWJlcnModCksZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMCE9PXQueDEmJih0LngxPWEodC54MSkpLHZvaWQgMCE9PXQueTEmJih0LnkxPWEodC55MSkpLHZvaWQgMCE9PXQueDImJih0LngyPWEodC54MikpLHZvaWQgMCE9PXQueTImJih0LnkyPWEodC55MikpLHZvaWQgMCE9PXQueCYmKHQueD1hKHQueCkpLHZvaWQgMCE9PXQueSYmKHQueT1hKHQueSkpLHR9fSx0LlRPX0FCUz1hLHQuVE9fUkVMPWZ1bmN0aW9uKCl7cmV0dXJuIG4oZnVuY3Rpb24odCxhLHIpe3JldHVybiB0LnJlbGF0aXZlfHwodm9pZCAwIT09dC54MSYmKHQueDEtPWEpLHZvaWQgMCE9PXQueTEmJih0LnkxLT1yKSx2b2lkIDAhPT10LngyJiYodC54Mi09YSksdm9pZCAwIT09dC55MiYmKHQueTItPXIpLHZvaWQgMCE9PXQueCYmKHQueC09YSksdm9pZCAwIT09dC55JiYodC55LT1yKSx0LnJlbGF0aXZlPSEwKSx0fSl9LHQuTk9STUFMSVpFX0hWWj1mdW5jdGlvbih0LGEscil7cmV0dXJuIHZvaWQgMD09PXQmJih0PSEwKSx2b2lkIDA9PT1hJiYoYT0hMCksdm9pZCAwPT09ciYmKHI9ITApLG4oZnVuY3Rpb24oZSxuLGksbyxzKXtpZihpc05hTihvKSYmIShlLnR5cGUmU1ZHUGF0aERhdGEuTU9WRV9UTykpdGhyb3cgbmV3IEVycm9yKFwicGF0aCBtdXN0IHN0YXJ0IHdpdGggbW92ZXRvXCIpO3JldHVybiBhJiZlLnR5cGUmU1ZHUGF0aERhdGEuSE9SSVpfTElORV9UTyYmKGUudHlwZT1TVkdQYXRoRGF0YS5MSU5FX1RPLGUueT1lLnJlbGF0aXZlPzA6aSksciYmZS50eXBlJlNWR1BhdGhEYXRhLlZFUlRfTElORV9UTyYmKGUudHlwZT1TVkdQYXRoRGF0YS5MSU5FX1RPLGUueD1lLnJlbGF0aXZlPzA6biksdCYmZS50eXBlJlNWR1BhdGhEYXRhLkNMT1NFX1BBVEgmJihlLnR5cGU9U1ZHUGF0aERhdGEuTElORV9UTyxlLng9ZS5yZWxhdGl2ZT9vLW46byxlLnk9ZS5yZWxhdGl2ZT9zLWk6cyksZS50eXBlJlNWR1BhdGhEYXRhLkFSQyYmKDA9PT1lLnJYfHwwPT09ZS5yWSkmJihlLnR5cGU9U1ZHUGF0aERhdGEuTElORV9UTyxkZWxldGUgZS5yWCxkZWxldGUgZS5yWSxkZWxldGUgZS54Um90LGRlbGV0ZSBlLmxBcmNGbGFnLGRlbGV0ZSBlLnN3ZWVwRmxhZyksZX0pfSx0Lk5PUk1BTElaRV9TVD1yLHQuUVRfVE9fQz1lLHQuSU5GTz1uLHQuU0FOSVRJWkU9ZnVuY3Rpb24odCl7dm9pZCAwPT09dCYmKHQ9MCksYXNzZXJ0TnVtYmVycyh0KTt2YXIgYT1OYU4scj1OYU4sZT1OYU4saT1OYU47cmV0dXJuIG4oZnVuY3Rpb24obixvLHMsaCx1KXt2YXIgYz1NYXRoLmFicyxtPSExLF89MCxUPTA7aWYobi50eXBlJlNWR1BhdGhEYXRhLlNNT09USF9DVVJWRV9UTyYmKF89aXNOYU4oYSk/MDpvLWEsVD1pc05hTihyKT8wOnMtciksbi50eXBlJihTVkdQYXRoRGF0YS5DVVJWRV9UT3xTVkdQYXRoRGF0YS5TTU9PVEhfQ1VSVkVfVE8pPyhhPW4ucmVsYXRpdmU/bytuLngyOm4ueDIscj1uLnJlbGF0aXZlP3Mrbi55MjpuLnkyKTooYT1OYU4scj1OYU4pLG4udHlwZSZTVkdQYXRoRGF0YS5TTU9PVEhfUVVBRF9UTz8oZT1pc05hTihlKT9vOjIqby1lLGk9aXNOYU4oaSk/czoyKnMtaSk6bi50eXBlJlNWR1BhdGhEYXRhLlFVQURfVE8/KGU9bi5yZWxhdGl2ZT9vK24ueDE6bi54MSxpPW4ucmVsYXRpdmU/cytuLnkxOm4ueTIpOihlPU5hTixpPU5hTiksbi50eXBlJlNWR1BhdGhEYXRhLkxJTkVfQ09NTUFORFN8fG4udHlwZSZTVkdQYXRoRGF0YS5BUkMmJigwPT09bi5yWHx8MD09PW4ucll8fCFuLmxBcmNGbGFnKXx8bi50eXBlJlNWR1BhdGhEYXRhLkNVUlZFX1RPfHxuLnR5cGUmU1ZHUGF0aERhdGEuU01PT1RIX0NVUlZFX1RPfHxuLnR5cGUmU1ZHUGF0aERhdGEuUVVBRF9UT3x8bi50eXBlJlNWR1BhdGhEYXRhLlNNT09USF9RVUFEX1RPKXt2YXIgTz12b2lkIDA9PT1uLng/MDpuLnJlbGF0aXZlP24ueDpuLngtbyxwPXZvaWQgMD09PW4ueT8wOm4ucmVsYXRpdmU/bi55Om4ueS1zO189aXNOYU4oZSk/dm9pZCAwPT09bi54MT9fOm4ucmVsYXRpdmU/bi54Om4ueDEtbzplLW8sVD1pc05hTihpKT92b2lkIDA9PT1uLnkxP1Q6bi5yZWxhdGl2ZT9uLnk6bi55MS1zOmktczt2YXIgeT12b2lkIDA9PT1uLngyPzA6bi5yZWxhdGl2ZT9uLng6bi54Mi1vLFM9dm9pZCAwPT09bi55Mj8wOm4ucmVsYXRpdmU/bi55Om4ueTItcztjKE8pPD10JiZjKHApPD10JiZjKF8pPD10JiZjKFQpPD10JiZjKHkpPD10JiZjKFMpPD10JiYobT0hMCl9cmV0dXJuIG4udHlwZSZTVkdQYXRoRGF0YS5DTE9TRV9QQVRIJiZjKG8taCk8PXQmJmMocy11KTw9dCYmKG09ITApLG0/W106bn0pfSx0Lk1BVFJJWD1pLHQuUk9UQVRFPWZ1bmN0aW9uKHQsYSxyKXt2b2lkIDA9PT1hJiYoYT0wKSx2b2lkIDA9PT1yJiYocj0wKSxhc3NlcnROdW1iZXJzKHQsYSxyKTt2YXIgZT1NYXRoLnNpbih0KSxuPU1hdGguY29zKHQpO3JldHVybiBpKG4sZSwtZSxuLGEtYSpuK3IqZSxyLWEqZS1yKm4pfSx0LlRSQU5TTEFURT1mdW5jdGlvbih0LGEpe3JldHVybiB2b2lkIDA9PT1hJiYoYT0wKSxhc3NlcnROdW1iZXJzKHQsYSksaSgxLDAsMCwxLHQsYSl9LHQuU0NBTEU9ZnVuY3Rpb24odCxhKXtyZXR1cm4gdm9pZCAwPT09YSYmKGE9dCksYXNzZXJ0TnVtYmVycyh0LGEpLGkodCwwLDAsYSwwLDApfSx0LlNLRVdfWD1mdW5jdGlvbih0KXtyZXR1cm4gYXNzZXJ0TnVtYmVycyh0KSxpKDEsMCxNYXRoLmF0YW4odCksMSwwLDApfSx0LlNLRVdfWT1mdW5jdGlvbih0KXtyZXR1cm4gYXNzZXJ0TnVtYmVycyh0KSxpKDEsTWF0aC5hdGFuKHQpLDAsMSwwLDApfSx0LlhfQVhJU19TWU1NRVRSWT1mdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dCYmKHQ9MCksYXNzZXJ0TnVtYmVycyh0KSxpKC0xLDAsMCwxLHQsMCl9LHQuWV9BWElTX1NZTU1FVFJZPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10JiYodD0wKSxhc3NlcnROdW1iZXJzKHQpLGkoMSwwLDAsLTEsMCx0KX0sdC5BX1RPX0M9ZnVuY3Rpb24oKXtyZXR1cm4gbihmdW5jdGlvbih0LGEscil7cmV0dXJuIFNWR1BhdGhEYXRhLkFSQz09PXQudHlwZT9hMmModCx0LnJlbGF0aXZlPzA6YSx0LnJlbGF0aXZlPzA6cik6dH0pfSx0LkFOTk9UQVRFX0FSQ1M9ZnVuY3Rpb24oKXtyZXR1cm4gbihmdW5jdGlvbih0LGEscil7cmV0dXJuIHQucmVsYXRpdmUmJihhPTAscj0wKSxTVkdQYXRoRGF0YS5BUkM9PT10LnR5cGUmJmFubm90YXRlQXJjQ29tbWFuZCh0LGEsciksdH0pfSx0LkNMT05FPW8sdC5DQUxDVUxBVEVfQk9VTkRTPWZ1bmN0aW9uKCl7dmFyIHQ9ZnVuY3Rpb24odCl7dmFyIGE9e307Zm9yKHZhciByIGluIHQpYVtyXT10W3JdO3JldHVybiBhfSxpPWEoKSxvPWUoKSxzPXIoKSxoPW4oZnVuY3Rpb24oYSxyLGUpe3ZhciBuPXMobyhpKHQoYSkpKSk7ZnVuY3Rpb24gdSh0KXt0PmgubWF4WCYmKGgubWF4WD10KSx0PGgubWluWCYmKGgubWluWD10KX1mdW5jdGlvbiBjKHQpe3Q+aC5tYXhZJiYoaC5tYXhZPXQpLHQ8aC5taW5ZJiYoaC5taW5ZPXQpfWlmKG4udHlwZSZTVkdQYXRoRGF0YS5EUkFXSU5HX0NPTU1BTkRTJiYodShyKSxjKGUpKSxuLnR5cGUmU1ZHUGF0aERhdGEuSE9SSVpfTElORV9UTyYmdShuLngpLG4udHlwZSZTVkdQYXRoRGF0YS5WRVJUX0xJTkVfVE8mJmMobi55KSxuLnR5cGUmU1ZHUGF0aERhdGEuTElORV9UTyYmKHUobi54KSxjKG4ueSkpLG4udHlwZSZTVkdQYXRoRGF0YS5DVVJWRV9UTyl7dShuLngpLGMobi55KTtmb3IodmFyIG09MCxfPWJlemllclJvb3QocixuLngxLG4ueDIsbi54KTttPF8ubGVuZ3RoO20rKykwPChHPV9bbV0pJiYxPkcmJnUoYmV6aWVyQXQocixuLngxLG4ueDIsbi54LEcpKTtmb3IodmFyIFQ9MCxPPWJlemllclJvb3QoZSxuLnkxLG4ueTIsbi55KTtUPE8ubGVuZ3RoO1QrKykwPChHPU9bVF0pJiYxPkcmJmMoYmV6aWVyQXQoZSxuLnkxLG4ueTIsbi55LEcpKX1pZihuLnR5cGUmU1ZHUGF0aERhdGEuQVJDKXt1KG4ueCksYyhuLnkpLGFubm90YXRlQXJjQ29tbWFuZChuLHIsZSk7Zm9yKHZhciBwPW4ueFJvdC8xODAqTWF0aC5QSSx5PU1hdGguY29zKHApKm4uclgsUz1NYXRoLnNpbihwKSpuLnJYLGY9LU1hdGguc2luKHApKm4uclksVj1NYXRoLmNvcyhwKSpuLnJZLE49bi5waGkxPG4ucGhpMj9bbi5waGkxLG4ucGhpMl06LTE4MD5uLnBoaTI/W24ucGhpMiszNjAsbi5waGkxKzM2MF06W24ucGhpMixuLnBoaTFdLEQ9TlswXSxQPU5bMV0sbD1mdW5jdGlvbih0KXt2YXIgYT10WzBdLHI9dFsxXSxlPTE4MCpNYXRoLmF0YW4yKHIsYSkvTWF0aC5QSTtyZXR1cm4gZTxEP2UrMzYwOmV9LHY9MCxFPWludGVyc2VjdGlvblVuaXRDaXJjbGVMaW5lKGYsLXksMCkubWFwKGwpO3Y8RS5sZW5ndGg7disrKShHPUVbdl0pPkQmJkc8UCYmdShhcmNBdChuLmNYLHksZixHKSk7Zm9yKHZhciBBPTAsZD1pbnRlcnNlY3Rpb25Vbml0Q2lyY2xlTGluZShWLC1TLDApLm1hcChsKTtBPGQubGVuZ3RoO0ErKyl7dmFyIEc7KEc9ZFtBXSk+RCYmRzxQJiZjKGFyY0F0KG4uY1ksUyxWLEcpKX19cmV0dXJuIGF9KTtyZXR1cm4gaC5taW5YPTEvMCxoLm1heFg9LTEvMCxoLm1pblk9MS8wLGgubWF4WT0tMS8wLGh9fShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyfHwoU1ZHUGF0aERhdGFUcmFuc2Zvcm1lcj17fSkpO3ZhciBfYSxfYSQxLFRyYW5zZm9ybWFibGVTVkc9ZnVuY3Rpb24oKXtmdW5jdGlvbiB0KCl7fXJldHVybiB0LnByb3RvdHlwZS5yb3VuZD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50cmFuc2Zvcm0oU1ZHUGF0aERhdGFUcmFuc2Zvcm1lci5ST1VORCh0KSl9LHQucHJvdG90eXBlLnRvQWJzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJhbnNmb3JtKFNWR1BhdGhEYXRhVHJhbnNmb3JtZXIuVE9fQUJTKCkpfSx0LnByb3RvdHlwZS50b1JlbD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRyYW5zZm9ybShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyLlRPX1JFTCgpKX0sdC5wcm90b3R5cGUubm9ybWFsaXplSFZaPWZ1bmN0aW9uKHQsYSxyKXtyZXR1cm4gdGhpcy50cmFuc2Zvcm0oU1ZHUGF0aERhdGFUcmFuc2Zvcm1lci5OT1JNQUxJWkVfSFZaKHQsYSxyKSl9LHQucHJvdG90eXBlLm5vcm1hbGl6ZVNUPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudHJhbnNmb3JtKFNWR1BhdGhEYXRhVHJhbnNmb3JtZXIuTk9STUFMSVpFX1NUKCkpfSx0LnByb3RvdHlwZS5xdFRvQz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRyYW5zZm9ybShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyLlFUX1RPX0MoKSl9LHQucHJvdG90eXBlLmFUb0M9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy50cmFuc2Zvcm0oU1ZHUGF0aERhdGFUcmFuc2Zvcm1lci5BX1RPX0MoKSl9LHQucHJvdG90eXBlLnNhbml0aXplPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRyYW5zZm9ybShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyLlNBTklUSVpFKHQpKX0sdC5wcm90b3R5cGUudHJhbnNsYXRlPWZ1bmN0aW9uKHQsYSl7cmV0dXJuIHRoaXMudHJhbnNmb3JtKFNWR1BhdGhEYXRhVHJhbnNmb3JtZXIuVFJBTlNMQVRFKHQsYSkpfSx0LnByb3RvdHlwZS5zY2FsZT1mdW5jdGlvbih0LGEpe3JldHVybiB0aGlzLnRyYW5zZm9ybShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyLlNDQUxFKHQsYSkpfSx0LnByb3RvdHlwZS5yb3RhdGU9ZnVuY3Rpb24odCxhLHIpe3JldHVybiB0aGlzLnRyYW5zZm9ybShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyLlJPVEFURSh0LGEscikpfSx0LnByb3RvdHlwZS5tYXRyaXg9ZnVuY3Rpb24odCxhLHIsZSxuLGkpe3JldHVybiB0aGlzLnRyYW5zZm9ybShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyLk1BVFJJWCh0LGEscixlLG4saSkpfSx0LnByb3RvdHlwZS5za2V3WD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50cmFuc2Zvcm0oU1ZHUGF0aERhdGFUcmFuc2Zvcm1lci5TS0VXX1godCkpfSx0LnByb3RvdHlwZS5za2V3WT1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy50cmFuc2Zvcm0oU1ZHUGF0aERhdGFUcmFuc2Zvcm1lci5TS0VXX1kodCkpfSx0LnByb3RvdHlwZS54U3ltbWV0cnk9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudHJhbnNmb3JtKFNWR1BhdGhEYXRhVHJhbnNmb3JtZXIuWF9BWElTX1NZTU1FVFJZKHQpKX0sdC5wcm90b3R5cGUueVN5bW1ldHJ5PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnRyYW5zZm9ybShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyLllfQVhJU19TWU1NRVRSWSh0KSl9LHQucHJvdG90eXBlLmFubm90YXRlQXJjcz1mdW5jdGlvbigpe3JldHVybiB0aGlzLnRyYW5zZm9ybShTVkdQYXRoRGF0YVRyYW5zZm9ybWVyLkFOTk9UQVRFX0FSQ1MoKSl9LHR9KCksaXNXaGl0ZVNwYWNlPWZ1bmN0aW9uKHQpe3JldHVyblwiIFwiPT09dHx8XCJcXHRcIj09PXR8fFwiXFxyXCI9PT10fHxcIlxcblwiPT09dH0saXNEaWdpdD1mdW5jdGlvbih0KXtyZXR1cm5cIjBcIi5jaGFyQ29kZUF0KDApPD10LmNoYXJDb2RlQXQoMCkmJnQuY2hhckNvZGVBdCgwKTw9XCI5XCIuY2hhckNvZGVBdCgwKX0sU1ZHUGF0aERhdGFQYXJzZXIkJDE9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gYSgpe3ZhciBhPXQuY2FsbCh0aGlzKXx8dGhpcztyZXR1cm4gYS5jdXJOdW1iZXI9XCJcIixhLmN1ckNvbW1hbmRUeXBlPS0xLGEuY3VyQ29tbWFuZFJlbGF0aXZlPSExLGEuY2FuUGFyc2VDb21tYW5kT3JDb21tYT0hMCxhLmN1ck51bWJlckhhc0V4cD0hMSxhLmN1ck51bWJlckhhc0V4cERpZ2l0cz0hMSxhLmN1ck51bWJlckhhc0RlY2ltYWw9ITEsYS5jdXJBcmdzPVtdLGF9cmV0dXJuIF9fZXh0ZW5kcyhhLHQpLGEucHJvdG90eXBlLmZpbmlzaD1mdW5jdGlvbih0KXtpZih2b2lkIDA9PT10JiYodD1bXSksdGhpcy5wYXJzZShcIiBcIix0KSwwIT09dGhpcy5jdXJBcmdzLmxlbmd0aHx8IXRoaXMuY2FuUGFyc2VDb21tYW5kT3JDb21tYSl0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJVbnRlcm1pbmF0ZWQgY29tbWFuZCBhdCB0aGUgcGF0aCBlbmQuXCIpO3JldHVybiB0fSxhLnByb3RvdHlwZS5wYXJzZT1mdW5jdGlvbih0LGEpe3ZhciByPXRoaXM7dm9pZCAwPT09YSYmKGE9W10pO2Zvcih2YXIgZT1mdW5jdGlvbih0KXthLnB1c2godCksci5jdXJBcmdzLmxlbmd0aD0wLHIuY2FuUGFyc2VDb21tYW5kT3JDb21tYT0hMH0sbj0wO248dC5sZW5ndGg7bisrKXt2YXIgaT10W25dO2lmKGlzRGlnaXQoaSkpdGhpcy5jdXJOdW1iZXIrPWksdGhpcy5jdXJOdW1iZXJIYXNFeHBEaWdpdHM9dGhpcy5jdXJOdW1iZXJIYXNFeHA7ZWxzZSBpZihcImVcIiE9PWkmJlwiRVwiIT09aSlpZihcIi1cIiE9PWkmJlwiK1wiIT09aXx8IXRoaXMuY3VyTnVtYmVySGFzRXhwfHx0aGlzLmN1ck51bWJlckhhc0V4cERpZ2l0cylpZihcIi5cIiE9PWl8fHRoaXMuY3VyTnVtYmVySGFzRXhwfHx0aGlzLmN1ck51bWJlckhhc0RlY2ltYWwpe2lmKHRoaXMuY3VyTnVtYmVyJiYtMSE9PXRoaXMuY3VyQ29tbWFuZFR5cGUpe3ZhciBvPU51bWJlcih0aGlzLmN1ck51bWJlcik7aWYoaXNOYU4obykpdGhyb3cgbmV3IFN5bnRheEVycm9yKFwiSW52YWxpZCBudW1iZXIgZW5kaW5nIGF0IFwiK24pO2lmKHRoaXMuY3VyQ29tbWFuZFR5cGU9PT1TVkdQYXRoRGF0YS5BUkMpaWYoMD09PXRoaXMuY3VyQXJncy5sZW5ndGh8fDE9PT10aGlzLmN1ckFyZ3MubGVuZ3RoKXtpZigwPm8pdGhyb3cgbmV3IFN5bnRheEVycm9yKCdFeHBlY3RlZCBwb3NpdGl2ZSBudW1iZXIsIGdvdCBcIicrbysnXCIgYXQgaW5kZXggXCInK24rJ1wiJyl9ZWxzZSBpZigoMz09PXRoaXMuY3VyQXJncy5sZW5ndGh8fDQ9PT10aGlzLmN1ckFyZ3MubGVuZ3RoKSYmXCIwXCIhPT10aGlzLmN1ck51bWJlciYmXCIxXCIhPT10aGlzLmN1ck51bWJlcil0aHJvdyBuZXcgU3ludGF4RXJyb3IoJ0V4cGVjdGVkIGEgZmxhZywgZ290IFwiJyt0aGlzLmN1ck51bWJlcisnXCIgYXQgaW5kZXggXCInK24rJ1wiJyk7dGhpcy5jdXJBcmdzLnB1c2gobyksdGhpcy5jdXJBcmdzLmxlbmd0aD09PUNPTU1BTkRfQVJHX0NPVU5UU1t0aGlzLmN1ckNvbW1hbmRUeXBlXSYmKFNWR1BhdGhEYXRhLkhPUklaX0xJTkVfVE89PT10aGlzLmN1ckNvbW1hbmRUeXBlP2Uoe3R5cGU6U1ZHUGF0aERhdGEuSE9SSVpfTElORV9UTyxyZWxhdGl2ZTp0aGlzLmN1ckNvbW1hbmRSZWxhdGl2ZSx4Om99KTpTVkdQYXRoRGF0YS5WRVJUX0xJTkVfVE89PT10aGlzLmN1ckNvbW1hbmRUeXBlP2Uoe3R5cGU6U1ZHUGF0aERhdGEuVkVSVF9MSU5FX1RPLHJlbGF0aXZlOnRoaXMuY3VyQ29tbWFuZFJlbGF0aXZlLHk6b30pOnRoaXMuY3VyQ29tbWFuZFR5cGU9PT1TVkdQYXRoRGF0YS5NT1ZFX1RPfHx0aGlzLmN1ckNvbW1hbmRUeXBlPT09U1ZHUGF0aERhdGEuTElORV9UT3x8dGhpcy5jdXJDb21tYW5kVHlwZT09PVNWR1BhdGhEYXRhLlNNT09USF9RVUFEX1RPPyhlKHt0eXBlOnRoaXMuY3VyQ29tbWFuZFR5cGUscmVsYXRpdmU6dGhpcy5jdXJDb21tYW5kUmVsYXRpdmUseDp0aGlzLmN1ckFyZ3NbMF0seTp0aGlzLmN1ckFyZ3NbMV19KSxTVkdQYXRoRGF0YS5NT1ZFX1RPPT09dGhpcy5jdXJDb21tYW5kVHlwZSYmKHRoaXMuY3VyQ29tbWFuZFR5cGU9U1ZHUGF0aERhdGEuTElORV9UTykpOnRoaXMuY3VyQ29tbWFuZFR5cGU9PT1TVkdQYXRoRGF0YS5DVVJWRV9UTz9lKHt0eXBlOlNWR1BhdGhEYXRhLkNVUlZFX1RPLHJlbGF0aXZlOnRoaXMuY3VyQ29tbWFuZFJlbGF0aXZlLHgxOnRoaXMuY3VyQXJnc1swXSx5MTp0aGlzLmN1ckFyZ3NbMV0seDI6dGhpcy5jdXJBcmdzWzJdLHkyOnRoaXMuY3VyQXJnc1szXSx4OnRoaXMuY3VyQXJnc1s0XSx5OnRoaXMuY3VyQXJnc1s1XX0pOnRoaXMuY3VyQ29tbWFuZFR5cGU9PT1TVkdQYXRoRGF0YS5TTU9PVEhfQ1VSVkVfVE8/ZSh7dHlwZTpTVkdQYXRoRGF0YS5TTU9PVEhfQ1VSVkVfVE8scmVsYXRpdmU6dGhpcy5jdXJDb21tYW5kUmVsYXRpdmUseDI6dGhpcy5jdXJBcmdzWzBdLHkyOnRoaXMuY3VyQXJnc1sxXSx4OnRoaXMuY3VyQXJnc1syXSx5OnRoaXMuY3VyQXJnc1szXX0pOnRoaXMuY3VyQ29tbWFuZFR5cGU9PT1TVkdQYXRoRGF0YS5RVUFEX1RPP2Uoe3R5cGU6U1ZHUGF0aERhdGEuUVVBRF9UTyxyZWxhdGl2ZTp0aGlzLmN1ckNvbW1hbmRSZWxhdGl2ZSx4MTp0aGlzLmN1ckFyZ3NbMF0seTE6dGhpcy5jdXJBcmdzWzFdLHg6dGhpcy5jdXJBcmdzWzJdLHk6dGhpcy5jdXJBcmdzWzNdfSk6dGhpcy5jdXJDb21tYW5kVHlwZT09PVNWR1BhdGhEYXRhLkFSQyYmZSh7dHlwZTpTVkdQYXRoRGF0YS5BUkMscmVsYXRpdmU6dGhpcy5jdXJDb21tYW5kUmVsYXRpdmUsclg6dGhpcy5jdXJBcmdzWzBdLHJZOnRoaXMuY3VyQXJnc1sxXSx4Um90OnRoaXMuY3VyQXJnc1syXSxsQXJjRmxhZzp0aGlzLmN1ckFyZ3NbM10sc3dlZXBGbGFnOnRoaXMuY3VyQXJnc1s0XSx4OnRoaXMuY3VyQXJnc1s1XSx5OnRoaXMuY3VyQXJnc1s2XX0pKSx0aGlzLmN1ck51bWJlcj1cIlwiLHRoaXMuY3VyTnVtYmVySGFzRXhwRGlnaXRzPSExLHRoaXMuY3VyTnVtYmVySGFzRXhwPSExLHRoaXMuY3VyTnVtYmVySGFzRGVjaW1hbD0hMSx0aGlzLmNhblBhcnNlQ29tbWFuZE9yQ29tbWE9ITB9aWYoIWlzV2hpdGVTcGFjZShpKSlpZihcIixcIj09PWkmJnRoaXMuY2FuUGFyc2VDb21tYW5kT3JDb21tYSl0aGlzLmNhblBhcnNlQ29tbWFuZE9yQ29tbWE9ITE7ZWxzZSBpZihcIitcIiE9PWkmJlwiLVwiIT09aSYmXCIuXCIhPT1pKXtpZigwIT09dGhpcy5jdXJBcmdzLmxlbmd0aCl0aHJvdyBuZXcgU3ludGF4RXJyb3IoXCJVbnRlcm1pbmF0ZWQgY29tbWFuZCBhdCBpbmRleCBcIituK1wiLlwiKTtpZighdGhpcy5jYW5QYXJzZUNvbW1hbmRPckNvbW1hKXRocm93IG5ldyBTeW50YXhFcnJvcignVW5leHBlY3RlZCBjaGFyYWN0ZXIgXCInK2krJ1wiIGF0IGluZGV4ICcrbitcIi4gQ29tbWFuZCBjYW5ub3QgZm9sbG93IGNvbW1hXCIpO2lmKHRoaXMuY2FuUGFyc2VDb21tYW5kT3JDb21tYT0hMSxcInpcIiE9PWkmJlwiWlwiIT09aSlpZihcImhcIj09PWl8fFwiSFwiPT09aSl0aGlzLmN1ckNvbW1hbmRUeXBlPVNWR1BhdGhEYXRhLkhPUklaX0xJTkVfVE8sdGhpcy5jdXJDb21tYW5kUmVsYXRpdmU9XCJoXCI9PT1pO2Vsc2UgaWYoXCJ2XCI9PT1pfHxcIlZcIj09PWkpdGhpcy5jdXJDb21tYW5kVHlwZT1TVkdQYXRoRGF0YS5WRVJUX0xJTkVfVE8sdGhpcy5jdXJDb21tYW5kUmVsYXRpdmU9XCJ2XCI9PT1pO2Vsc2UgaWYoXCJtXCI9PT1pfHxcIk1cIj09PWkpdGhpcy5jdXJDb21tYW5kVHlwZT1TVkdQYXRoRGF0YS5NT1ZFX1RPLHRoaXMuY3VyQ29tbWFuZFJlbGF0aXZlPVwibVwiPT09aTtlbHNlIGlmKFwibFwiPT09aXx8XCJMXCI9PT1pKXRoaXMuY3VyQ29tbWFuZFR5cGU9U1ZHUGF0aERhdGEuTElORV9UTyx0aGlzLmN1ckNvbW1hbmRSZWxhdGl2ZT1cImxcIj09PWk7ZWxzZSBpZihcImNcIj09PWl8fFwiQ1wiPT09aSl0aGlzLmN1ckNvbW1hbmRUeXBlPVNWR1BhdGhEYXRhLkNVUlZFX1RPLHRoaXMuY3VyQ29tbWFuZFJlbGF0aXZlPVwiY1wiPT09aTtlbHNlIGlmKFwic1wiPT09aXx8XCJTXCI9PT1pKXRoaXMuY3VyQ29tbWFuZFR5cGU9U1ZHUGF0aERhdGEuU01PT1RIX0NVUlZFX1RPLHRoaXMuY3VyQ29tbWFuZFJlbGF0aXZlPVwic1wiPT09aTtlbHNlIGlmKFwicVwiPT09aXx8XCJRXCI9PT1pKXRoaXMuY3VyQ29tbWFuZFR5cGU9U1ZHUGF0aERhdGEuUVVBRF9UTyx0aGlzLmN1ckNvbW1hbmRSZWxhdGl2ZT1cInFcIj09PWk7ZWxzZSBpZihcInRcIj09PWl8fFwiVFwiPT09aSl0aGlzLmN1ckNvbW1hbmRUeXBlPVNWR1BhdGhEYXRhLlNNT09USF9RVUFEX1RPLHRoaXMuY3VyQ29tbWFuZFJlbGF0aXZlPVwidFwiPT09aTtlbHNle2lmKFwiYVwiIT09aSYmXCJBXCIhPT1pKXRocm93IG5ldyBTeW50YXhFcnJvcignVW5leHBlY3RlZCBjaGFyYWN0ZXIgXCInK2krJ1wiIGF0IGluZGV4ICcrbitcIi5cIik7dGhpcy5jdXJDb21tYW5kVHlwZT1TVkdQYXRoRGF0YS5BUkMsdGhpcy5jdXJDb21tYW5kUmVsYXRpdmU9XCJhXCI9PT1pfWVsc2UgYS5wdXNoKHt0eXBlOlNWR1BhdGhEYXRhLkNMT1NFX1BBVEh9KSx0aGlzLmNhblBhcnNlQ29tbWFuZE9yQ29tbWE9ITAsdGhpcy5jdXJDb21tYW5kVHlwZT0tMX1lbHNlIHRoaXMuY3VyTnVtYmVyPWksdGhpcy5jdXJOdW1iZXJIYXNEZWNpbWFsPVwiLlwiPT09aX1lbHNlIHRoaXMuY3VyTnVtYmVyKz1pLHRoaXMuY3VyTnVtYmVySGFzRGVjaW1hbD0hMDtlbHNlIHRoaXMuY3VyTnVtYmVyKz1pO2Vsc2UgdGhpcy5jdXJOdW1iZXIrPWksdGhpcy5jdXJOdW1iZXJIYXNFeHA9ITB9cmV0dXJuIGF9LGEucHJvdG90eXBlLnRyYW5zZm9ybT1mdW5jdGlvbih0KXtyZXR1cm4gT2JqZWN0LmNyZWF0ZSh0aGlzLHtwYXJzZTp7dmFsdWU6ZnVuY3Rpb24oYSxyKXt2b2lkIDA9PT1yJiYocj1bXSk7Zm9yKHZhciBlPTAsbj1PYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcykucGFyc2UuY2FsbCh0aGlzLGEpO2U8bi5sZW5ndGg7ZSsrKXt2YXIgaT1uW2VdLG89dChpKTtBcnJheS5pc0FycmF5KG8pP3IucHVzaC5hcHBseShyLG8pOnIucHVzaChvKX1yZXR1cm4gcn19fSl9LGF9KFRyYW5zZm9ybWFibGVTVkcpLFNWR1BhdGhEYXRhPWZ1bmN0aW9uKHQpe2Z1bmN0aW9uIGEocil7dmFyIGU9dC5jYWxsKHRoaXMpfHx0aGlzO3JldHVybiBlLmNvbW1hbmRzPVwic3RyaW5nXCI9PXR5cGVvZiByP2EucGFyc2Uocik6cixlfXJldHVybiBfX2V4dGVuZHMoYSx0KSxhLnByb3RvdHlwZS5lbmNvZGU9ZnVuY3Rpb24oKXtyZXR1cm4gYS5lbmNvZGUodGhpcy5jb21tYW5kcyl9LGEucHJvdG90eXBlLmdldEJvdW5kcz1mdW5jdGlvbigpe3ZhciB0PVNWR1BhdGhEYXRhVHJhbnNmb3JtZXIuQ0FMQ1VMQVRFX0JPVU5EUygpO3JldHVybiB0aGlzLnRyYW5zZm9ybSh0KSx0fSxhLnByb3RvdHlwZS50cmFuc2Zvcm09ZnVuY3Rpb24odCl7Zm9yKHZhciBhPVtdLHI9MCxlPXRoaXMuY29tbWFuZHM7cjxlLmxlbmd0aDtyKyspe3ZhciBuPXQoZVtyXSk7QXJyYXkuaXNBcnJheShuKT9hLnB1c2guYXBwbHkoYSxuKTphLnB1c2gobil9cmV0dXJuIHRoaXMuY29tbWFuZHM9YSx0aGlzfSxhLmVuY29kZT1mdW5jdGlvbih0KXtyZXR1cm4gZW5jb2RlU1ZHUGF0aCQkMSh0KX0sYS5wYXJzZT1mdW5jdGlvbih0KXt2YXIgYT1uZXcgU1ZHUGF0aERhdGFQYXJzZXIkJDEscj1bXTtyZXR1cm4gYS5wYXJzZSh0LHIpLGEuZmluaXNoKHIpLHJ9LGEuQ0xPU0VfUEFUSD0xLGEuTU9WRV9UTz0yLGEuSE9SSVpfTElORV9UTz00LGEuVkVSVF9MSU5FX1RPPTgsYS5MSU5FX1RPPTE2LGEuQ1VSVkVfVE89MzIsYS5TTU9PVEhfQ1VSVkVfVE89NjQsYS5RVUFEX1RPPTEyOCxhLlNNT09USF9RVUFEX1RPPTI1NixhLkFSQz01MTIsYS5MSU5FX0NPTU1BTkRTPWEuTElORV9UT3xhLkhPUklaX0xJTkVfVE98YS5WRVJUX0xJTkVfVE8sYS5EUkFXSU5HX0NPTU1BTkRTPWEuSE9SSVpfTElORV9UT3xhLlZFUlRfTElORV9UT3xhLkxJTkVfVE98YS5DVVJWRV9UT3xhLlNNT09USF9DVVJWRV9UT3xhLlFVQURfVE98YS5TTU9PVEhfUVVBRF9UT3xhLkFSQyxhfShUcmFuc2Zvcm1hYmxlU1ZHKSxDT01NQU5EX0FSR19DT1VOVFM9KChfYT17fSlbU1ZHUGF0aERhdGEuTU9WRV9UT109MixfYVtTVkdQYXRoRGF0YS5MSU5FX1RPXT0yLF9hW1NWR1BhdGhEYXRhLkhPUklaX0xJTkVfVE9dPTEsX2FbU1ZHUGF0aERhdGEuVkVSVF9MSU5FX1RPXT0xLF9hW1NWR1BhdGhEYXRhLkNMT1NFX1BBVEhdPTAsX2FbU1ZHUGF0aERhdGEuUVVBRF9UT109NCxfYVtTVkdQYXRoRGF0YS5TTU9PVEhfUVVBRF9UT109MixfYVtTVkdQYXRoRGF0YS5DVVJWRV9UT109NixfYVtTVkdQYXRoRGF0YS5TTU9PVEhfQ1VSVkVfVE9dPTQsX2FbU1ZHUGF0aERhdGEuQVJDXT03LF9hKSxXU1A9XCIgXCI7ZnVuY3Rpb24gZW5jb2RlU1ZHUGF0aCQkMSh0KXt2YXIgYT1cIlwiO0FycmF5LmlzQXJyYXkodCl8fCh0PVt0XSk7Zm9yKHZhciByPTA7cjx0Lmxlbmd0aDtyKyspe3ZhciBlPXRbcl07aWYoZS50eXBlPT09U1ZHUGF0aERhdGEuQ0xPU0VfUEFUSClhKz1cInpcIjtlbHNlIGlmKGUudHlwZT09PVNWR1BhdGhEYXRhLkhPUklaX0xJTkVfVE8pYSs9KGUucmVsYXRpdmU/XCJoXCI6XCJIXCIpK2UueDtlbHNlIGlmKGUudHlwZT09PVNWR1BhdGhEYXRhLlZFUlRfTElORV9UTylhKz0oZS5yZWxhdGl2ZT9cInZcIjpcIlZcIikrZS55O2Vsc2UgaWYoZS50eXBlPT09U1ZHUGF0aERhdGEuTU9WRV9UTylhKz0oZS5yZWxhdGl2ZT9cIm1cIjpcIk1cIikrZS54K1dTUCtlLnk7ZWxzZSBpZihlLnR5cGU9PT1TVkdQYXRoRGF0YS5MSU5FX1RPKWErPShlLnJlbGF0aXZlP1wibFwiOlwiTFwiKStlLngrV1NQK2UueTtlbHNlIGlmKGUudHlwZT09PVNWR1BhdGhEYXRhLkNVUlZFX1RPKWErPShlLnJlbGF0aXZlP1wiY1wiOlwiQ1wiKStlLngxK1dTUCtlLnkxK1dTUCtlLngyK1dTUCtlLnkyK1dTUCtlLngrV1NQK2UueTtlbHNlIGlmKGUudHlwZT09PVNWR1BhdGhEYXRhLlNNT09USF9DVVJWRV9UTylhKz0oZS5yZWxhdGl2ZT9cInNcIjpcIlNcIikrZS54MitXU1ArZS55MitXU1ArZS54K1dTUCtlLnk7ZWxzZSBpZihlLnR5cGU9PT1TVkdQYXRoRGF0YS5RVUFEX1RPKWErPShlLnJlbGF0aXZlP1wicVwiOlwiUVwiKStlLngxK1dTUCtlLnkxK1dTUCtlLngrV1NQK2UueTtlbHNlIGlmKGUudHlwZT09PVNWR1BhdGhEYXRhLlNNT09USF9RVUFEX1RPKWErPShlLnJlbGF0aXZlP1widFwiOlwiVFwiKStlLngrV1NQK2UueTtlbHNle2lmKGUudHlwZSE9PVNWR1BhdGhEYXRhLkFSQyl0aHJvdyBuZXcgRXJyb3IoJ1VuZXhwZWN0ZWQgY29tbWFuZCB0eXBlIFwiJytlLnR5cGUrJ1wiIGF0IGluZGV4ICcrcitcIi5cIik7YSs9KGUucmVsYXRpdmU/XCJhXCI6XCJBXCIpK2UuclgrV1NQK2UuclkrV1NQK2UueFJvdCtXU1ArICtlLmxBcmNGbGFnK1dTUCsgK2Uuc3dlZXBGbGFnK1dTUCtlLngrV1NQK2UueX19cmV0dXJuIGF9dmFyIFNWR1BhdGhEYXRhJDE9ZnVuY3Rpb24odCl7ZnVuY3Rpb24gYShyKXt2YXIgZT10LmNhbGwodGhpcyl8fHRoaXM7cmV0dXJuIGUuY29tbWFuZHM9XCJzdHJpbmdcIj09dHlwZW9mIHI/YS5wYXJzZShyKTpyLGV9cmV0dXJuIF9fZXh0ZW5kcyhhLHQpLGEucHJvdG90eXBlLmVuY29kZT1mdW5jdGlvbigpe3JldHVybiBhLmVuY29kZSh0aGlzLmNvbW1hbmRzKX0sYS5wcm90b3R5cGUuZ2V0Qm91bmRzPWZ1bmN0aW9uKCl7dmFyIHQ9U1ZHUGF0aERhdGFUcmFuc2Zvcm1lci5DQUxDVUxBVEVfQk9VTkRTKCk7cmV0dXJuIHRoaXMudHJhbnNmb3JtKHQpLHR9LGEucHJvdG90eXBlLnRyYW5zZm9ybT1mdW5jdGlvbih0KXtmb3IodmFyIGE9W10scj0wLGU9dGhpcy5jb21tYW5kcztyPGUubGVuZ3RoO3IrKyl7dmFyIG49dChlW3JdKTtBcnJheS5pc0FycmF5KG4pP2EucHVzaC5hcHBseShhLG4pOmEucHVzaChuKX1yZXR1cm4gdGhpcy5jb21tYW5kcz1hLHRoaXN9LGEuZW5jb2RlPWZ1bmN0aW9uKHQpe3JldHVybiBlbmNvZGVTVkdQYXRoJCQxKHQpfSxhLnBhcnNlPWZ1bmN0aW9uKHQpe3ZhciBhPW5ldyBTVkdQYXRoRGF0YVBhcnNlciQkMSxyPVtdO3JldHVybiBhLnBhcnNlKHQsciksYS5maW5pc2gocikscn0sYS5DTE9TRV9QQVRIPTEsYS5NT1ZFX1RPPTIsYS5IT1JJWl9MSU5FX1RPPTQsYS5WRVJUX0xJTkVfVE89OCxhLkxJTkVfVE89MTYsYS5DVVJWRV9UTz0zMixhLlNNT09USF9DVVJWRV9UTz02NCxhLlFVQURfVE89MTI4LGEuU01PT1RIX1FVQURfVE89MjU2LGEuQVJDPTUxMixhLkxJTkVfQ09NTUFORFM9YS5MSU5FX1RPfGEuSE9SSVpfTElORV9UT3xhLlZFUlRfTElORV9UTyxhLkRSQVdJTkdfQ09NTUFORFM9YS5IT1JJWl9MSU5FX1RPfGEuVkVSVF9MSU5FX1RPfGEuTElORV9UT3xhLkNVUlZFX1RPfGEuU01PT1RIX0NVUlZFX1RPfGEuUVVBRF9UT3xhLlNNT09USF9RVUFEX1RPfGEuQVJDLGF9KFRyYW5zZm9ybWFibGVTVkcpLENPTU1BTkRfQVJHX0NPVU5UUyQxPSgoX2EkMT17fSlbU1ZHUGF0aERhdGEkMS5NT1ZFX1RPXT0yLF9hJDFbU1ZHUGF0aERhdGEkMS5MSU5FX1RPXT0yLF9hJDFbU1ZHUGF0aERhdGEkMS5IT1JJWl9MSU5FX1RPXT0xLF9hJDFbU1ZHUGF0aERhdGEkMS5WRVJUX0xJTkVfVE9dPTEsX2EkMVtTVkdQYXRoRGF0YSQxLkNMT1NFX1BBVEhdPTAsX2EkMVtTVkdQYXRoRGF0YSQxLlFVQURfVE9dPTQsX2EkMVtTVkdQYXRoRGF0YSQxLlNNT09USF9RVUFEX1RPXT0yLF9hJDFbU1ZHUGF0aERhdGEkMS5DVVJWRV9UT109NixfYSQxW1NWR1BhdGhEYXRhJDEuU01PT1RIX0NVUlZFX1RPXT00LF9hJDFbU1ZHUGF0aERhdGEkMS5BUkNdPTcsX2EkMSk7ZXhwb3J0e1NWR1BhdGhEYXRhJDEgYXMgU1ZHUGF0aERhdGEsQ09NTUFORF9BUkdfQ09VTlRTJDEgYXMgQ09NTUFORF9BUkdfQ09VTlRTLGVuY29kZVNWR1BhdGgkJDEgYXMgZW5jb2RlU1ZHUGF0aCxTVkdQYXRoRGF0YVBhcnNlciQkMSBhcyBTVkdQYXRoRGF0YVBhcnNlcixTVkdQYXRoRGF0YVRyYW5zZm9ybWVyfTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPVNWR1BhdGhEYXRhLm1vZHVsZS5qcy5tYXBcbiIsIi8qKiBAbW9kdWxlIFNWR0xvYWRlciAqL1xyXG5cclxuaW1wb3J0IHtTVkdQYXRoRGF0YX0gZnJvbSAnc3ZnLXBhdGhkYXRhJztcclxuICBcclxuLyoqIFV0aWxpdHkgY2xhc3MgdG8gbG9hZCBhbiBleHRlcm5hbCBTVkcgZmlsZSBhbmQgZXh0cmFjdCBkaXNjcmV0ZSBwYXRocyBhcyBzaW1wbGUgYXJyYXlzIG9mIHBvaW50IGNvb3JkaW5hdGVzICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFNWR0xvYWRlciB7XHJcbiAgY29uc3RydWN0b3IoKSB7fVxyXG5cclxuICAvKipcclxuICAgKiBLaWNrIG9mIHBhcnNpbmcgb2YgYW4gU1ZHIGZpbGUgdGhhdCBoYXMgYmVlbiBpbXBvcnRlZCB2aWEgYHJlcXVpcmUoKWAgYXMgYSBmbGF0IHN0cmluZ1xyXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb250ZW50cyBFbnRpcmUgY29udGVudHMgb2YgYW4gU1ZHIGZpbGUgYXMgYSBmbGF0IHN0cmluZ1xyXG4gICAqIEByZXR1cm5zIHthcnJheX0gQXJyYXkgb2YgcGF0aHMgcHJvZHVjZWQgdmlhIGBsb2FkKClgXHJcbiAgICovXHJcbiAgc3RhdGljIGxvYWRGcm9tRmlsZUNvbnRlbnRzKGNvbnRlbnRzKSB7XHJcbiAgICBsZXQgcGFyc2VyID0gbmV3IERPTVBhcnNlcigpO1xyXG4gICAgbGV0IGRvYyA9IHBhcnNlci5wYXJzZUZyb21TdHJpbmcoY29udGVudHMsICdpbWFnZS9zdmcreG1sJyk7XHJcbiAgICByZXR1cm4gdGhpcy5sb2FkKGRvYyk7XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiBFeHRyYWN0IGFuIGFycmF5IG9mIHNpbXBsaWZpZWQgcGF0aHMgZnJvbSBhbiBTVkcgRE9NIG5vZGVcclxuICAgKiBAcGFyYW0ge25vZGV9IHN2Z05vZGUgLSBTVkcgRE9NIG5vZGUgY29udGFpbmluZyB0aGUgZG9jdW1lbnQgdG8gcGFyc2VcclxuICAgKiBAcmV0dXJucyB7YXJyYXl9IEFycmF5IG9mIHNpbXBsZSBvYmplY3RzIGNvbnRhaW5pbmcgdGhlIHN0YXJ0aW5nIFggYW5kIFkgY29vcmRpbmF0ZXMgYW5kIGFuIGFycmF5IG9mIHN1YnNlcXVlbnQgcG9pbnRzIHRoYXQgZGVmaW5lIHRoZSBwYXRoXHJcbiAgICovXHJcbiAgc3RhdGljIGxvYWQoc3ZnTm9kZSkge1xyXG4gICAgbGV0IGlucHV0UGF0aHMgPSBzdmdOb2RlLnF1ZXJ5U2VsZWN0b3JBbGwoJ3BhdGgnKSxcclxuICAgICAgICBjdXJyZW50UGF0aCA9IHt9LFxyXG4gICAgICAgIHBhdGhzID0gW107XHJcblxyXG4gICAgY3VycmVudFBhdGgucG9pbnRzID0gW11cclxuXHJcbiAgICAvLyBTY3JhcGUgYWxsIHBvaW50cyBmcm9tIGFsbCBwb2ludHMsIGFuZCByZWNvcmQgYnJlYWtwb2ludHNcclxuICAgIGZvcihsZXQgaW5wdXRQYXRoIG9mIGlucHV0UGF0aHMpIHtcclxuICAgICAgbGV0IHBhdGhEYXRhID0gbmV3IFNWR1BhdGhEYXRhKGlucHV0UGF0aC5nZXRBdHRyaWJ1dGUoJ2QnKSk7XHJcblxyXG4gICAgICBsZXQgcHJldmlvdXNDb29yZHMgPSB7XHJcbiAgICAgICAgeDogMCxcclxuICAgICAgICB5OiAwXHJcbiAgICAgIH07XHJcblxyXG4gICAgICBmb3IobGV0IFtpbmRleCwgY29tbWFuZF0gb2YgcGF0aERhdGEuY29tbWFuZHMuZW50cmllcygpKSB7XHJcbiAgICAgICAgc3dpdGNoKGNvbW1hbmQudHlwZSkge1xyXG4gICAgICAgICAgLy8gTW92ZSAoJ00nKSBhbmQgbGluZSAoJ0wnKSBjb21tYW5kcyBoYXZlIGJvdGggWCBhbmQgWVxyXG4gICAgICAgICAgY2FzZSBTVkdQYXRoRGF0YS5NT1ZFX1RPOlxyXG4gICAgICAgICAgY2FzZSBTVkdQYXRoRGF0YS5MSU5FX1RPOlxyXG4gICAgICAgICAgICBjdXJyZW50UGF0aC5wb2ludHMucHVzaChbXHJcbiAgICAgICAgICAgICAgY29tbWFuZC54LCBcclxuICAgICAgICAgICAgICBjb21tYW5kLnlcclxuICAgICAgICAgICAgXSk7XHJcblxyXG4gICAgICAgICAgICBicmVhaztcclxuXHJcbiAgICAgICAgICAvLyBIb3Jpem9udGFsIGxpbmUgKCdIJykgY29tbWFuZHMgb25seSBoYXZlIFgsIHVzaW5nIHByZXZpb3VzIGNvbW1hbmQncyBZXHJcbiAgICAgICAgICBjYXNlIFNWR1BhdGhEYXRhLkhPUklaX0xJTkVfVE86XHJcbiAgICAgICAgICAgIGN1cnJlbnRQYXRoLnBvaW50cy5wdXNoKFtcclxuICAgICAgICAgICAgICBjb21tYW5kLngsXHJcbiAgICAgICAgICAgICAgcHJldmlvdXNDb29yZHMueVxyXG4gICAgICAgICAgICBdKTtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgICAgIC8vIFZlcnRpY2FsIGxpbmUgKCdWJykgY29tbWFuZHMgb25seSBoYXZlIFksIHVzaW5nIHByZXZpb3VzIGNvbW1hbmQncyBYXHJcbiAgICAgICAgICBjYXNlIFNWR1BhdGhEYXRhLlZFUlRfTElORV9UTzpcclxuICAgICAgICAgICAgY3VycmVudFBhdGgucG9pbnRzLnB1c2goW1xyXG4gICAgICAgICAgICAgIHByZXZpb3VzQ29vcmRzLngsXHJcbiAgICAgICAgICAgICAgY29tbWFuZC55XHJcbiAgICAgICAgICAgIF0pO1xyXG4gICAgICAgICAgICBcclxuICAgICAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICAgICAgLy8gQ2xvc2VQYXRoICgnWicpIGNvbW1hbmRzIGFyZSBhIG5haXZlIGluZGljYXRpb24gdGhhdCB0aGUgY3VycmVudCBwYXRoIGNhbiBiZSBwcm9jZXNzZWQgYW5kIGFkZGVkIHRvIHRoZSB3b3JsZFxyXG4gICAgICAgICAgY2FzZSBTVkdQYXRoRGF0YS5DTE9TRV9QQVRIOlxyXG4gICAgICAgICAgICBjdXJyZW50UGF0aC5jbG9zZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICBwYXRocy5wdXNoKGN1cnJlbnRQYXRoKTtcclxuICAgICAgICAgICAgY3VycmVudFBhdGggPSB7fTtcclxuICAgICAgICAgICAgY3VycmVudFBhdGgucG9pbnRzID0gW107XHJcbiAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gVW5jbG9zZWQgcGF0aHMgbmV2ZXIgaGF2ZSBDTE9TRV9QQVRIIGNvbW1hbmRzLCBzbyB3cmFwIHVwIHRoZSBjdXJyZW50IHBhdGggd2hlbiB3ZSdyZSBhdCB0aGUgZW5kIG9mIHRoZSBwYXRoIGFuZCBoYXZlIG5vdCBmb3VuZCB0aGUgY29tbWFuZFxyXG4gICAgICAgIGlmKGluZGV4ID09IHBhdGhEYXRhLmNvbW1hbmRzLmxlbmd0aCAtIDEgJiYgY29tbWFuZC50eXBlICE9IFNWR1BhdGhEYXRhLkNMT1NFX1BBVEgpIHtcclxuICAgICAgICAgIGxldCBmaXJzdFBvaW50ID0gY3VycmVudFBhdGgucG9pbnRzWzBdLFxyXG4gICAgICAgICAgICAgIGxhc3RQb2ludCA9IGN1cnJlbnRQYXRoLnBvaW50c1sgY3VycmVudFBhdGgucG9pbnRzLmxlbmd0aCAtIDEgXTtcclxuXHJcbiAgICAgICAgICAvLyBBdXRvbWF0aWNhbGx5IGNsb3NlIHRoZSBwYXRoIGlmIHRoZSBmaXJzdCBhbmQgbGFzdCBub2RlcyBhcmUgZWZmZWN0aXZlbHkgdGhlIHNhbWUsIGV2ZW4gaWYgYSBDTE9TRV9QQVRIIGNvbW1hbmQgZG9lc24ndCBleGlzdFxyXG4gICAgICAgICAgaWYoTWF0aC5oeXBvdChsYXN0UG9pbnQueCAtIGZpcnN0UG9pbnQueCwgbGFzdFBvaW50LnkgLSBmaXJzdFBvaW50LnkpIDwgLjEpIHtcclxuICAgICAgICAgICAgY3VycmVudFBhdGguY2xvc2VkID0gdHJ1ZTtcclxuICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGN1cnJlbnRQYXRoLmNsb3NlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIHBhdGhzLnB1c2goY3VycmVudFBhdGgpO1xyXG4gICAgICAgICAgY3VycmVudFBhdGggPSB7fTtcclxuICAgICAgICAgIGN1cnJlbnRQYXRoLnBvaW50cyA9IFtdO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gQ2FwdHVyZSBYIGNvb3JkaW5hdGUsIGlmIHRoZXJlIHdhcyBvbmVcclxuICAgICAgICBpZihjb21tYW5kLmhhc093blByb3BlcnR5KCd4JykpIHtcclxuICAgICAgICAgIHByZXZpb3VzQ29vcmRzLnggPSBjb21tYW5kLng7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBDYXB0dXJlIFkgY29vcmRpbmF0ZSwgaWYgdGhlcmUgd2FzIG9uZVxyXG4gICAgICAgIGlmKGNvbW1hbmQuaGFzT3duUHJvcGVydHkoJ3knKSkge1xyXG4gICAgICAgICAgcHJldmlvdXNDb29yZHMueSA9IGNvbW1hbmQueTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBNYWtlIGFsbCBjb29yZGluYXRlcyByZWxhdGl2ZSB0byB0aGUgZmlyc3QgcG9pbnRcclxuICAgIGZvcihsZXQgcGF0aCBvZiBwYXRocykge1xyXG4gICAgICBwYXRoLnggPSBwYXRoLnBvaW50c1swXVswXTtcclxuICAgICAgcGF0aC55ID0gcGF0aC5wb2ludHNbMF1bMV07XHJcblxyXG4gICAgICBwYXRoLnBvaW50cy5wdXNoKFtwYXRoLngsIHBhdGgueV0pO1xyXG5cclxuICAgICAgZm9yKGxldCBwb2ludCBvZiBwYXRoLnBvaW50cykge1xyXG4gICAgICAgIHBvaW50WzBdIC09IHBhdGgueDtcclxuICAgICAgICBwb2ludFsxXSAtPSBwYXRoLnk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZXR1cm4gcGF0aHM7XHJcbiAgfVxyXG59IiwibW9kdWxlLmV4cG9ydHMgPSBcIjxzdmcgeG1sbnM6ZGM9XFxcImh0dHA6Ly9wdXJsLm9yZy9kYy9lbGVtZW50cy8xLjEvXFxcIiB4bWxuczpjYz1cXFwiaHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbnMjXFxcIiB4bWxuczpyZGY9XFxcImh0dHA6Ly93d3cudzMub3JnLzE5OTkvMDIvMjItcmRmLXN5bnRheC1ucyNcXFwiIHhtbG5zOnN2Zz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHhtbG5zPVxcXCJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2Z1xcXCIgeG1sbnM6c29kaXBvZGk9XFxcImh0dHA6Ly9zb2RpcG9kaS5zb3VyY2Vmb3JnZS5uZXQvRFREL3NvZGlwb2RpLTAuZHRkXFxcIiB4bWxuczppbmtzY2FwZT1cXFwiaHR0cDovL3d3dy5pbmtzY2FwZS5vcmcvbmFtZXNwYWNlcy9pbmtzY2FwZVxcXCIgdmlld0JveD1cXFwiMCAwIDkwMCA5MDBcXFwiIHZlcnNpb249XFxcIjEuMVxcXCIgaWQ9XFxcInN2ZzhcXFwiIHNvZGlwb2RpOmRvY25hbWU9XFxcImRsYS5zdmdcXFwiIGlua3NjYXBlOnZlcnNpb249XFxcIjAuOTIuMyAoMjQwNTU0NiwgMjAxOC0wMy0xMSlcXFwiPjxwYXRoIHN0eWxlPVxcXCJmb250LXN0eWxlOm5vcm1hbDtmb250LXZhcmlhbnQ6bm9ybWFsO2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zdHJldGNoOm5vcm1hbDtmb250LXNpemU6bWVkaXVtO2xpbmUtaGVpZ2h0OjEuMjU7Zm9udC1mYW1pbHk6c2Fucy1zZXJpZjstaW5rc2NhcGUtZm9udC1zcGVjaWZpY2F0aW9uOiYjeDI3O3NhbnMtc2VyaWYgQm9sZCYjeDI3OztsZXR0ZXItc3BhY2luZzowLjgxNTU5OTE0cHg7d29yZC1zcGFjaW5nOjBweDtmaWxsOm5vbmU7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE7c3Ryb2tlLW9wYWNpdHk6MTtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1kYXNoYXJyYXk6bm9uZVxcXCIgZD1cXFwiTSAzNjAuMDk3Miw0MzAuNzIyMTQgMzU2Ljk2ODEyLDQ1Ni43MSAzNDcuNTgwODcsNDc5Ljg2NTIxIDMzMy40MTc2NSw0OTguOTY5MDYgMzE1Ljk2MDY2LDUxMy4wNjY0MSAzMDAuOTA4MTMsNTIwLjQ0NDQ3IDI4NC40NzIyMSw1MjUuMTg3NDcgMjY1Ljc2MzU5LDUyNy43NTY2MiAyNDMuODkyOTUsNTI4LjYxMzAyIEggMjA5LjMwODM1IDE3NC43MjM3NiBWIDQzMC41MjQ1MSAzMzIuNDM1OTkgSCAyMTAuMjk2NDkgMjQ1Ljg2OTIyIEwgMjY4LjIwMDk5LDMzMy40NTcwNyAyODcuMjM4OTgsMzM2LjUyMDI3IDMwMy4yNDY3MSwzNDEuMzI5MTcgMzE2LjQ4NzY3LDM0Ny44NTA4NCAzMzQuNjAzNDEsMzYyLjQwOTMyIDM0OC4zNzEzNywzODEuMzE1NTYgMzU3LjE2NTc1LDQwNC4xNDE0MiAzNjAuMDk3Miw0MzAuNzIyMTRcXFwiIGlkPVxcXCJwYXRoODIwXFxcIj48L3BhdGg+PHBhdGggc3R5bGU9XFxcImZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtdmFyaWFudDpub3JtYWw7Zm9udC13ZWlnaHQ6Ym9sZDtmb250LXN0cmV0Y2g6bm9ybWFsO2ZvbnQtc2l6ZTptZWRpdW07bGluZS1oZWlnaHQ6MS4yNTtmb250LWZhbWlseTpzYW5zLXNlcmlmOy1pbmtzY2FwZS1mb250LXNwZWNpZmljYXRpb246JiN4Mjc7c2Fucy1zZXJpZiBCb2xkJiN4Mjc7O2xldHRlci1zcGFjaW5nOjAuODE1NTk5MTRweDt3b3JkLXNwYWNpbmc6MHB4O2ZpbGw6bm9uZTtmaWxsLW9wYWNpdHk6MTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLWRhc2hhcnJheTpub25lXFxcIiBkPVxcXCJNIDMwNy43OTIxMiw0MzAuMzI2ODcgMzA2LjAxMzQ4LDQxMi4zNzU4MyAzMDAuNjc3NTYsMzk3LjI1NzQxIDI5MS42MTk2OSwzODQuOTM4NzEgMjc4LjQxMTY3LDM3NS42NTAyNiAyNzAuNTM5NTYsMzcyLjQ1NTMgMjYyLjQ2OTgyLDM3MC41MTIgMjUyLjM1Nzk0LDM2OS40MjUwNiAyMzguMDk1OTIsMzY5LjA2Mjc0IEggMjMxLjcwNiAyMjUuMzE2MDkgViA0MzAuNDU4NjQgNDkxLjg1NDUgSCAyMzEuNzA2IDIzOC4wOTU5MiBMIDI1My43NDEzMyw0OTEuNDU5MjMgMjY0LjU3NzgzLDQ5MC4yNzM1MSAyNzIuOTExMDgsNDg3LjkwMTk5IDI4MS4wNDY2OSw0ODQuMjEyOTggMjkzLjAzNjAyLDQ3NC45OTA0NCAzMDEuMzM2MzIsNDYzLjEzMjg0IDMwNi4xNzgxNyw0NDguMjc3OTIgMzA3Ljc5MjEyLDQzMC4zMjY4N1xcXCIgaWQ9XFxcInBhdGg4MTlcXFwiPjwvcGF0aD48cGF0aCBpbmtzY2FwZTpjb25uZWN0b3ItY3VydmF0dXJlPVxcXCIwXFxcIiBpZD1cXFwicGF0aDgyMVxcXCIgc3R5bGU9XFxcImZvbnQtc3R5bGU6bm9ybWFsO2ZvbnQtdmFyaWFudDpub3JtYWw7Zm9udC13ZWlnaHQ6Ym9sZDtmb250LXN0cmV0Y2g6bm9ybWFsO2ZvbnQtc2l6ZTptZWRpdW07bGluZS1oZWlnaHQ6MS4yNTtmb250LWZhbWlseTpzYW5zLXNlcmlmOy1pbmtzY2FwZS1mb250LXNwZWNpZmljYXRpb246JiN4Mjc7c2Fucy1zZXJpZiBCb2xkJiN4Mjc7O2xldHRlci1zcGFjaW5nOjAuODE1NTk5MTRweDt3b3JkLXNwYWNpbmc6MHB4O2ZpbGw6bm9uZTtmaWxsLW9wYWNpdHk6MTtzdHJva2U6IzAwMDAwMDtzdHJva2Utd2lkdGg6MTtzdHJva2Utb3BhY2l0eToxO3N0cm9rZS1taXRlcmxpbWl0OjQ7c3Ryb2tlLWRhc2hhcnJheTpub25lXFxcIiBkPVxcXCJNIDUxNy4xNTM4NSw1MjguNjEzMDIgSCAzNzUuNjUzNDcgViAzMzIuNDM1OTkgSCA0MjYuMjQ1NzYgViA0OTAuNjY4NzggSCA1MTcuMTUzODUgViA1MjguNjEzMDJcXFwiIHNvZGlwb2RpOm5vZGV0eXBlcz1cXFwiY2NjY2NjY1xcXCI+PC9wYXRoPjxwYXRoIHN0eWxlPVxcXCJmb250LXN0eWxlOm5vcm1hbDtmb250LXZhcmlhbnQ6bm9ybWFsO2ZvbnQtd2VpZ2h0OmJvbGQ7Zm9udC1zdHJldGNoOm5vcm1hbDtmb250LXNpemU6bWVkaXVtO2xpbmUtaGVpZ2h0OjEuMjU7Zm9udC1mYW1pbHk6c2Fucy1zZXJpZjstaW5rc2NhcGUtZm9udC1zcGVjaWZpY2F0aW9uOiYjeDI3O3NhbnMtc2VyaWYgQm9sZCYjeDI3OztsZXR0ZXItc3BhY2luZzowLjgxNTU5OTE0cHg7d29yZC1zcGFjaW5nOjBweDtmaWxsOm5vbmU7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE7c3Ryb2tlLW9wYWNpdHk6MTtzdHJva2UtbWl0ZXJsaW1pdDo0O3N0cm9rZS1kYXNoYXJyYXk6bm9uZVxcXCIgZD1cXFwiTSA3MzEuNjk4OTgsNTI4LjYxMzAyIEggNjc5LjM5Mzg5IEwgNjY1LjgyMzU4LDQ4OC45NTU5OSBIIDU5My4wOTcwOCBMIDU3OS41MjY3Niw1MjguNjEzMDIgSCA1MjguNTM5MTcgTCA2MDEuMDAyMTMsMzMyLjQzNTk5IEggNjU5LjIzNjAxIEwgNzMxLjY5ODk4LDUyOC42MTMwMlxcXCIgaWQ9XFxcInBhdGg4MjRcXFwiPjwvcGF0aD48cGF0aCBzdHlsZT1cXFwiZm9udC1zdHlsZTpub3JtYWw7Zm9udC12YXJpYW50Om5vcm1hbDtmb250LXdlaWdodDpib2xkO2ZvbnQtc3RyZXRjaDpub3JtYWw7Zm9udC1zaXplOm1lZGl1bTtsaW5lLWhlaWdodDoxLjI1O2ZvbnQtZmFtaWx5OnNhbnMtc2VyaWY7LWlua3NjYXBlLWZvbnQtc3BlY2lmaWNhdGlvbjomI3gyNztzYW5zLXNlcmlmIEJvbGQmI3gyNzs7bGV0dGVyLXNwYWNpbmc6MC44MTU1OTkxNHB4O3dvcmQtc3BhY2luZzowcHg7ZmlsbDpub25lO2ZpbGwtb3BhY2l0eToxO3N0cm9rZTojMDAwMDAwO3N0cm9rZS13aWR0aDoxO3N0cm9rZS1vcGFjaXR5OjE7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmVcXFwiIGQ9XFxcIk0gNjUzLjU3MDc1LDQ1Mi45ODggNjI5LjQ2MDMzLDM4Mi42MzMwNiA2MDUuMzQ5OTQsNDUyLjk4OCBIIDY1My41NzA3NVxcXCIgaWQ9XFxcInBhdGg4MjNcXFwiPjwvcGF0aD48L3N2Zz5cIiIsIm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHhtbG5zOmRjPVxcXCJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xL1xcXCIgeG1sbnM6Y2M9XFxcImh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL25zI1xcXCIgeG1sbnM6cmRmPVxcXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjXFxcIiB4bWxuczpzdmc9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHhtbG5zOnNvZGlwb2RpPVxcXCJodHRwOi8vc29kaXBvZGkuc291cmNlZm9yZ2UubmV0L0RURC9zb2RpcG9kaS0wLmR0ZFxcXCIgeG1sbnM6aW5rc2NhcGU9XFxcImh0dHA6Ly93d3cuaW5rc2NhcGUub3JnL25hbWVzcGFjZXMvaW5rc2NhcGVcXFwiIGlkPVxcXCJzdmc4MzJcXFwiIHZlcnNpb249XFxcIjEuMVxcXCIgdmlld0JveD1cXFwiMCAwIDkwMCA5MDBcXFwiIHNvZGlwb2RpOmRvY25hbWU9XFxcInBvbHlnb25zLnN2Z1xcXCIgaW5rc2NhcGU6dmVyc2lvbj1cXFwiMC45Mi4zICgyNDA1NTQ2LCAyMDE4LTAzLTExKVxcXCI+PHBhdGggaWQ9XFxcInBhdGgxMzc3XFxcIiBzdHlsZT1cXFwib3BhY2l0eToxO3ZlY3Rvci1lZmZlY3Q6bm9uZTtmaWxsOm5vbmU7ZmlsbC1vcGFjaXR5OjE7c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjE7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6NDtzdHJva2UtZGFzaGFycmF5Om5vbmU7c3Ryb2tlLWRhc2hvZmZzZXQ6MDtzdHJva2Utb3BhY2l0eToxXFxcIiBkPVxcXCJNIDYzNy45NTcxOCw0NjQuMjIxMDMgNTg0LjMzNTcxLDM4Mi4xNDA5OCA1MzAuNzE0MjMsMzAwLjA2MDkyIDQ4Ni40NDIxNiwzODcuNTM4MjQgNDY1LjMwMzg0LDQyOS4zMDM2NCA0MzcuNDg4ODIsNDMwLjQ1NjE2IDQwMy4xNzUyOSwzODQuNzcwMzEgNDI3LjY0NDcxLDM2NS4xODQ5OSA0MTQuMzUxODgsMjc4LjAzNTI0IDMzMi4yMzM2MywyNDUuOTczNjUgMjYzLjQwNTU2LDMwMS4wNTkyMSAyNzYuNjk4ODksMzg4LjIwNzM5IDM1OC44MTgyMiw0MjAuMjcxMDcgMzYyLjcxNDE2LDQxNy4xNTE3MiAzNTQuNjM5MzcsNDQ2LjAyNDE0IDI2NC41NDE1Niw0NzYuODg4MjIgMzQzLjg0NDEsNTI5LjYyOTU2IDM0NS4zNTU5Miw2MjQuODU1NjEgNDIwLjAyMDAyLDU2NS43MzIxOSA1MTEuMDU0MjUsNTkzLjcyMTI0IDQ3Ny44OTY3OCw1MDQuNDQwMTMgNTAwLjg0MTksNDcxLjc3OTYzIDU0MC4wNjIwNyw0NjkuNjE3ODEgNjM3Ljk1NzE4LDQ2NC4yMjEwM1xcXCIgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT1cXFwiMFxcXCIgc29kaXBvZGk6bm9kZXR5cGVzPVxcXCJjY2NjY2NjY2NjY2NjY2NjY2NjY2NjY2NcXFwiPjwvcGF0aD48L3N2Zz5cIiIsIm1vZHVsZS5leHBvcnRzID0gXCI8c3ZnIHhtbG5zOmRjPVxcXCJodHRwOi8vcHVybC5vcmcvZGMvZWxlbWVudHMvMS4xL1xcXCIgeG1sbnM6Y2M9XFxcImh0dHA6Ly9jcmVhdGl2ZWNvbW1vbnMub3JnL25zI1xcXCIgeG1sbnM6cmRmPVxcXCJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjXFxcIiB4bWxuczpzdmc9XFxcImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXFxcIiB4bWxucz1cXFwiaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmdcXFwiIHhtbG5zOnNvZGlwb2RpPVxcXCJodHRwOi8vc29kaXBvZGkuc291cmNlZm9yZ2UubmV0L0RURC9zb2RpcG9kaS0wLmR0ZFxcXCIgeG1sbnM6aW5rc2NhcGU9XFxcImh0dHA6Ly93d3cuaW5rc2NhcGUub3JnL25hbWVzcGFjZXMvaW5rc2NhcGVcXFwiIGlkPVxcXCJzdmc4MzJcXFwiIHZlcnNpb249XFxcIjEuMVxcXCIgdmlld0JveD1cXFwiMCAwIDkwMCA5MDBcXFwiIHNvZGlwb2RpOmRvY25hbWU9XFxcInN1cGVyZm9ybXVsYS5zdmdcXFwiIGlua3NjYXBlOnZlcnNpb249XFxcIjAuOTIuMiAoNWMzZTgwZCwgMjAxNy0wOC0wNilcXFwiPjxwYXRoIHN0eWxlPVxcXCJmb250LWZhbWlseTpub25lO21peC1ibGVuZC1tb2RlOm5vcm1hbDtmaWxsOm5vbmU7ZmlsbC1ydWxlOm5vbnplcm87c3Ryb2tlOiMwMDAwMDA7c3Ryb2tlLXdpZHRoOjAuODk4NjQ0NTc7c3Ryb2tlLWxpbmVjYXA6YnV0dDtzdHJva2UtbGluZWpvaW46bWl0ZXI7c3Ryb2tlLW1pdGVybGltaXQ6MTA7c3Ryb2tlLWRhc2hhcnJheTpub25lO3N0cm9rZS1kYXNob2Zmc2V0OjA7c3Ryb2tlLW9wYWNpdHk6MC42XFxcIiBkPVxcXCJNIDc1My45MjIyNiw0NDguMTg5MDUgNzQyLjcwNTY2LDQ1MS4zOTc5IDY5MS4zODUyNiw0NTMuNzExNDMgNjY0LjAzODk2LDQ1NS43NTc1OSA2NDYuMDUyMzYsNDU3LjY1NDExIDYzMi44NDYyNiw0NTkuNDQ2NDkgNjIyLjUwNjQ2LDQ2MS4xNTk4NiA2MTQuMDYwMjYsNDYyLjgxMDA4IDYwNi45NDk2Niw0NjQuNDA3OTUgNjAwLjgyNjI2LDQ2NS45NjEyOCA1OTUuNDU5MTYsNDY3LjQ3NTk4IDU5MC42ODc4Niw0NjguOTU2NTkgNTg2LjM5NjM2LDQ3MC40MDY3OSA1ODIuNDk4NDYsNDcxLjgyOTUyIDU3OC45Mjg1Niw0NzMuMjI3MjYgNTc1LjYzNTM2LDQ3NC42MDIwNSA1NzIuNTc4NDYsNDc1Ljk1NTY1IDU2OS43MjQ5Niw0NzcuMjg5NTkgNTY3LjA0ODM2LDQ3OC42MDUxNCA1NjQuNTI2NDYsNDc5LjkwMzQ1IDU2Mi4xNDEwNiw0ODEuMTg1NTMgNTU5Ljg3NjQ2LDQ4Mi40NTIyNiA1NTcuNzE5NTYsNDgzLjcwNDQzIDU1NS42NTg5Niw0ODQuOTQyNzUgNTUzLjY4NTA2LDQ4Ni4xNjc4NiA1NTEuNzg5MjYsNDg3LjM4MDM0IDU0OS45NjQyNiw0ODguNTgwNyA1NDguMjAzNDYsNDg5Ljc2OTQyIDU0Ni41MDExNiw0OTAuOTQ2OTIgNTQ0Ljg1MjQ2LDQ5Mi4xMTM2MSA1NDMuMjUyNTYsNDkzLjI2OTg0IDU0MS42OTc1Niw0OTQuNDE1OTUgNTQwLjE4Mzg2LDQ5NS41NTIyNiA1MzguNzA4MjYsNDk2LjY3OTA0IDUzNy4yNjc2Niw0OTcuNzk2NTYgNTM1Ljg1OTM2LDQ5OC45MDUwNSA1MzQuNDgxMDYsNTAwLjAwNDc2IDUzMy4xMzA2Niw1MDEuMDk1ODkgNTMxLjgwNTc2LDUwMi4xNzg2MyA1MzAuNTA1MDYsNTAzLjI1MzE3IDUyOS4yMjYzNiw1MDQuMzE5NjggNTI3Ljk2ODQ2LDUwNS4zNzgzMyA1MjYuNzI5NzYsNTA2LjQyOTI3IDUyNS41MDg4Niw1MDcuNDcyNjMgNTI0LjMwNDc2LDUwOC41MDg1NSA1MjMuMTE2MTYsNTA5LjUzNzE2IDUyMS45NDIxNiw1MTAuNTU4NTcgNTIwLjc4MTU2LDUxMS41NzI4OSA1MTkuNjMzNjYsNTEyLjU4MDIzIDUxOC40OTc1Niw1MTMuNTgwNyA1MTcuMzcyNDYsNTE0LjU3NDM2IDUxNi4yNTc2Niw1MTUuNTYxMzMgNTE1LjE1MjQ2LDUxNi41NDE2NyA1MTQuMDU2MDYsNTE3LjUxNTQ4IDUxMi45NjgwNiw1MTguNDgyODMgNTExLjg4Nzc2LDUxOS40NDM3NyA1MTAuODE0ODYsNTIwLjM5ODM5IDUwOS43NDg1Niw1MjEuMzQ2NzYgNTA4LjY4ODQ2LDUyMi4yODg5MyA1MDcuNjM0MjYsNTIzLjIyNDk1IDUwNi41ODU0Niw1MjQuMTU0ODggNTA1LjU0MTY2LDUyNS4wNzg3NyA1MDQuNTAyMzYsNTI1Ljk5NjY3IDUwMy40Njc1Niw1MjYuOTA4NjMgNTAyLjQzNjQ2LDUyNy44MTQ3IDUwMS40MDkwNiw1MjguNzE0OTIgNTAwLjM4NTA2LDUyOS42MDkzMyA0OTkuMzY0MDYsNTMwLjQ5Nzk3IDQ5OC4zNDU4Niw1MzEuMzgwODcgNDk3LjMzMDA2LDUzMi4yNTgwNyA0OTYuMzE2NTYsNTMzLjEyOTYxIDQ5NS4zMDUwNiw1MzMuOTk1NTIgNDk0LjI5NTQ2LDUzNC44NTU4MiA0OTMuMjg3MzYsNTM1LjcxMDU3IDQ5Mi4yODA3Niw1MzYuNTU5NzcgNDkxLjI3NTM2LDUzNy40MDM0NyA0OTAuMjcwOTYsNTM4LjI0MTY3IDQ4OS4yNjczNiw1MzkuMDc0NDEgNDg4LjI2NDU2LDUzOS45MDE3MiA0ODcuMjYyMjYsNTQwLjcyMzYyIDQ4Ni4yNjAzNiw1NDEuNTQwMTQgNDg1LjI1ODY2LDU0Mi4zNTEzIDQ4NC4yNTcwNiw1NDMuMTU3MSA0ODMuMjU1NDYsNTQzLjk1NzU5IDQ4Mi4yNTM3Niw1NDQuNzUyNzcgNDgxLjI1MTc2LDU0NS41NDI2OCA0ODAuMjQ5MjYsNTQ2LjMyNzMyIDQ3OS4yNDYzNiw1NDcuMTA2NzMgNDc4LjI0Mjc2LDU0Ny44ODA5IDQ3Ny4yMzg1Niw1NDguNjQ5ODcgNDc2LjIzMzQ2LDU0OS40MTM2NSA0NzUuMjI3NDYsNTUwLjE3MjI3IDQ3NC4yMjA1Niw1NTAuOTI1NzIgNDczLjIxMjQ2LDU1MS42NzQwNCA0NzIuMjAzMjYsNTUyLjQxNzI1IDQ3MS4xOTI4Niw1NTMuMTU1MzUgNDcwLjE4MDg2LDU1My44ODgzNyA0NjkuMTY3NzYsNTU0LjYxNjMxIDQ2OC4xNTI5Niw1NTUuMzM5MTkgNDY3LjEzNjg2LDU1Ni4wNTcwNCA0NjYuMTE4OTYsNTU2Ljc2OTg3IDQ2NS4wOTk0Niw1NTcuNDc3NjkgNDY0LjA3ODI2LDU1OC4xODA1MiA0NjMuMDU1MTYsNTU4Ljg3ODM5IDQ2Mi4wMzAxNiw1NTkuNTcxMjggNDYxLjAwMzM2LDU2MC4yNTkyNCA0NTkuOTc0NDYsNTYwLjk0MjI5IDQ1OC45NDM2Niw1NjEuNjIwNDIgNDU3LjkxMDc2LDU2Mi4yOTM2NiA0NTYuODc1NTYsNTYyLjk2MjAyIDQ1NS44MzgzNiw1NjMuNjI1NTQgNDU0Ljc5ODg2LDU2NC4yODQyMiA0NTMuNzU3MTYsNTY0LjkzODA4IDQ1Mi43MTI5Niw1NjUuNTg3MTQgNDUxLjY2NjQ2LDU2Ni4yMzE0MyA0NTAuNjE3NjYsNTY2Ljg3MDk1IDQ0OS41NjYxNiw1NjcuNTA1NzMgNDQ4LjUxMjM2LDU2OC4xMzU3OSA0NDcuNDU1ODYsNTY4Ljc2MTE2IDQ0Ni4zOTY4Niw1NjkuMzgxODQgNDQ1LjMzNTE2LDU2OS45OTc4NyA0NDQuMjcwODYsNTcwLjYwOTI3IDQ0My4yMDM4Niw1NzEuMjE2MDYgNDQyLjEzNDA2LDU3MS44MTgyNyA0NDEuMDYxNDYsNTcyLjQxNTkzIDQzOS45ODU5Niw1NzMuMDA5MDUgNDM4LjkwNzc2LDU3My41OTc2NyA0MzcuODI2NTYsNTc0LjE4MTgyIDQzNi43NDIzNiw1NzQuNzYxNTEgNDM1LjY1NTI2LDU3NS4zMzY4IDQzNC41NjUwNiw1NzUuOTA3NyA0MzMuNDcxODYsNTc2LjQ3NDI0IDQzMi4zNzU0Niw1NzcuMDM2NDYgNDMxLjI3NTg2LDU3Ny41OTQ0IDQzMC4xNzMxNiw1NzguMTQ4MDkgNDI5LjA2NzI2LDU3OC42OTc1NiA0MjcuOTU3OTYsNTc5LjI0Mjg2IDQyNi44NDU1Niw1NzkuNzg0MDIgNDI1LjcyOTY2LDU4MC4zMjExIDQyNC42MTAyNiw1ODAuODU0MTIgNDIzLjQ4NzQ2LDU4MS4zODMxNCA0MjIuMzYxMzYsNTgxLjkwODIgNDIxLjIzMTQ2LDU4Mi40MjkzNSA0MjAuMDk4MDYsNTgyLjk0NjY1IDQxOC45NjExNiw1ODMuNDYwMTUgNDE3LjgyMDQ2LDU4My45Njk4OCA0MTYuNjc1OTYsNTg0LjQ3NTkzIDQxNS41Mjc2Niw1ODQuOTc4MzQgNDE0LjM3NTU2LDU4NS40NzcxOCA0MTMuMjE5NjYsNTg1Ljk3MjUxIDQxMi4wNTk2Niw1ODYuNDY0NCA0MTAuODk1NjYsNTg2Ljk1MjkyIDQwOS43Mjc1Niw1ODcuNDM4MTQgNDA4LjU1NTM2LDU4Ny45MjAxNSA0MDcuMzc4ODYsNTg4LjM5OTAyIDQwNi4xOTgxNiw1ODguODc0ODMgNDA1LjAxMzE2LDU4OS4zNDc2NyA0MDMuODIzNTYsNTg5LjgxNzYyIDQwMi42Mjk0Niw1OTAuMjg0NzkgNDAxLjQzMDc2LDU5MC43NDkyNyA0MDAuMjI3NTYsNTkxLjIxMTE4IDM5OS4wMTk0Niw1OTEuNjcwNjEgMzk3LjgwNjQ2LDU5Mi4xMjc2OCAzOTYuNTg4NTYsNTkyLjU4MjUxIDM5NS4zNjU2Niw1OTMuMDM1MjIgMzk0LjEzNzU2LDU5My40ODU5NCAzOTIuOTA0MjYsNTkzLjkzNDgyIDM5MS42NjU0Niw1OTQuMzgxOTkgMzkwLjQyMTE2LDU5NC44Mjc2MSAzODkuMTcxMzYsNTk1LjI3MTgzIDM4Ny45MTU2Niw1OTUuNzE0ODIgMzg2LjY1NDE2LDU5Ni4xNTY3NiAzODUuMzg2NTYsNTk2LjU5NzgyIDM4NC4xMTI4Niw1OTcuMDM4MjIgMzgyLjgzMjc2LDU5Ny40NzgxMyAzODEuNTQ2MTYsNTk3LjkxNzggMzgwLjI1Mjg2LDU5OC4zNTc0MyAzNzguOTUyNjYsNTk4Ljc5NzI3IDM3Ny42NDUzNiw1OTkuMjM3NTcgMzc2LjMzMDg2LDU5OS42Nzg1OSAzNzUuMDA4ODYsNjAwLjEyMDYyIDM3My42NzkxNiw2MDAuNTYzOTggMzcyLjM0MTQ2LDYwMS4wMDg5NCAzNzAuOTk1NDYsNjAxLjQ1NTg4IDM2OS42NDEwNiw2MDEuOTA1MTMgMzY4LjI3Nzc2LDYwMi4zNTcwOCAzNjYuOTA1NDYsNjAyLjgxMjEyIDM2NS41MjM2Niw2MDMuMjcwNjkgMzY0LjEzMjE2LDYwMy43MzMyNCAzNjIuNzMwNTYsNjA0LjIwMDI2IDM2MS4zMTgzNiw2MDQuNjcyMjUgMzU5Ljg5NTI2LDYwNS4xNDk3OSAzNTguNDYwNzYsNjA1LjYzMzQ2IDM1Ny4wMTQ1Niw2MDYuMTIzOSAzNTUuNTU1ODYsNjA2LjYyMTc4IDM1NC4wODQyLDYwNy4xMjc4NSAzNTIuNTk5MTIsNjA3LjY0Mjg3IDM1MS4wOTk5Miw2MDguMTY3NzIgMzQ5LjU4NTkzLDYwOC43MDMzIDM0OC4wNTY0Myw2MDkuMjUwNjEgMzQ2LjUxMDYzLDYwOS44MTA3MSAzNDQuOTQ3NjksNjEwLjM4NDc4IDM0My4zNjY2OSw2MTAuOTc0MDYgMzQxLjc2NjYzLDYxMS41Nzk5NiAzNDAuMTQ2NDQsNjEyLjIwMzk1IDMzOC41MDQ5NCw2MTIuODQ3NzEgMzM2Ljg0MDg0LDYxMy41MTMwMiAzMzUuMTUyNzMsNjE0LjIwMTg4IDMzMy40MzkwNyw2MTQuOTE2NDcgMzMxLjY5ODE1LDYxNS42NTkyMSAzMjkuOTI4MTEsNjE2LjQzMjc5IDMyOC4xMjY4Niw2MTcuMjQwMTggMzI2LjI5MjA5LDYxOC4wODQ3MyAzMjQuNDIxMjIsNjE4Ljk3MDE2IDMyMi41MTEzNyw2MTkuOTAwNjcgMzIwLjU1OTMyLDYyMC44ODEwMiAzMTguNTYxMzksNjIxLjkxNjU4IDMxNi41MTM0NSw2MjMuMDEzNSAzMTQuNDEwNzUsNjI0LjE3ODgzIDMxMi4yNDc4OCw2MjUuNDIwNjkgMzEwLjAxODU2LDYyNi43NDg1MiAzMDcuNzE1NTIsNjI4LjE3MzM1IDMwNS4zMzAyNCw2MjkuNzA4MTYgMzAyLjg1MjYyLDYzMS4zNjg0IDMwMC4yNzA2OSw2MzMuMTcyNiAyOTcuNTY5OTQsNjM1LjE0MzIxIDI5NC43MzI3Niw2MzcuMzA3NzYgMjkxLjczNzMzLDYzOS43MDA1NSAyODguNTU2MjcsNjQyLjM2NDg0IDI4NS4xNTQ2LDY0NS4zNTYzMyAyODEuNDg2NjcsNjQ4Ljc0ODEzIDI3Ny40OTEzNyw2NTIuNjM4NzkgMjczLjA4NDQ3LDY1Ny4xNjUxIDI2OC4xNDUzNiw2NjIuNTI0MTYgMjYyLjQ5MzE1LDY2OS4wMTM2MyAyNTUuODM5NCw2NzcuMTExNTEgMjQ3LjY4NDA2LDY4Ny42NTIyMyAyMzcuMDQ4MzQsNzAyLjI4MDc4IDIyMS42MDMxOSw3MjQuOTQwMjcgMTkzLjkzOTQyLDc2OC4yMjgyNyAxODUuNTUyMTYsNzc2LjMzNzc1IDE4OC4zODE1NCw3NjUuMDE5NDMgMjEyLjAzODE3LDcxOS40MTc5MSAyMjMuOTM5MjcsNjk0LjcxMjI4IDIzMS4yOTAxMSw2NzguMTg3MiAyMzYuMzQwOTcsNjY1Ljg1NDEgMjQwLjAyNzA2LDY1Ni4wNDI4NSAyNDIuODIxMDEsNjQ3LjkwMzE2IDI0NC45OTI1Myw2NDAuOTQ2MjQgMjQ2LjcwODk4LDYzNC44NjY1OSAyNDguMDgwNzUsNjI5LjQ2MTI0IDI0OS4xODQxOCw2MjQuNTg4ODIgMjUwLjA3NDAzLDYyMC4xNDcxNSAyNTAuNzkwODQsNjE2LjA2MDEyIDI1MS4zNjUzNCw2MTIuMjY5NiAyNTEuODIxMzEsNjA4LjczMDI1IDI1Mi4xNzc1NCw2MDUuNDA2MDMgMjUyLjQ0OTA1LDYwMi4yNjc5IDI1Mi42NDgwNSw1OTkuMjkyMTEgMjUyLjc4NDYxLDU5Ni40NTg5NyAyNTIuODY3MDIsNTkzLjc1MjA2IDI1Mi45MDIyOSw1OTEuMTU3NTEgMjUyLjg5NjM0LDU4OC42NjM0NyAyNTIuODU0MTksNTg2LjI1OTgzIDI1Mi43ODAxOCw1ODMuOTM3NzkgMjUyLjY3ODA0LDU4MS42ODk3NSAyNTIuNTUxMDEsNTc5LjUwOTA1IDI1Mi40MDE5NCw1NzcuMzg5ODEgMjUyLjIzMzMsNTc1LjMyNjg4IDI1Mi4wNDczMSw1NzMuMzE1NjUgMjUxLjg0NTkxLDU3MS4zNTIwMiAyNTEuNjMwODIsNTY5LjQzMjMzIDI1MS40MDM2LDU2Ny41NTMyOCAyNTEuMTY1NjIsNTY1LjcxMTkxIDI1MC45MTgxMyw1NjMuOTA1NTQgMjUwLjY2MjI2LDU2Mi4xMzE3MyAyNTAuMzk5MDIsNTYwLjM4ODI3IDI1MC4xMjkzMyw1NTguNjczMTQgMjQ5Ljg1NDAyLDU1Ni45ODQ1MSAyNDkuNTczODYsNTU1LjMyMDY4IDI0OS4yODk1NCw1NTMuNjgwMSAyNDkuMDAxNzEsNTUyLjA2MTM1IDI0OC43MTA5NCw1NTAuNDYzMSAyNDguNDE3NzgsNTQ4Ljg4NDE2IDI0OC4xMjI3LDU0Ny4zMjM0IDI0Ny44MjYxOSw1NDUuNzc5NzYgMjQ3LjUyODY2LDU0NC4yNTIyOSAyNDcuMjMwNDksNTQyLjc0MDA4IDI0Ni45MzIwNSw1NDEuMjQyMzIgMjQ2LjYzMzY4LDUzOS43NTgxOSAyNDYuMzM1NjksNTM4LjI4Njk5IDI0Ni4wMzgzNyw1MzYuODI4MDIgMjQ1Ljc0Miw1MzUuMzgwNjUgMjQ1LjQ0NjgyLDUzMy45NDQyOSAyNDUuMTUzMDgsNTMyLjUxODM4IDI0NC44NjEsNTMxLjEwMjM5IDI0NC41NzA3Nyw1MjkuNjk1ODIgMjQ0LjI4MjYxLDUyOC4yOTgyIDI0My45OTY2OSw1MjYuOTA5MSAyNDMuNzEzMTgsNTI1LjUyODExIDI0My40MzIyNiw1MjQuMTU0ODQgMjQzLjE1NDA2LDUyMi43ODg5MSAyNDIuODc4NzMsNTIxLjQyOTk4IDI0Mi42MDY0MSw1MjAuMDc3NzEgMjQyLjMzNzIzLDUxOC43MzE4MSAyNDIuMDcxMzEsNTE3LjM5MTk1IDI0MS44MDg3Nyw1MTYuMDU3ODkgMjQxLjU0OTcsNTE0LjcyOTMzIDI0MS4yOTQyMSw1MTMuNDA2MDUgMjQxLjA0MjQxLDUxMi4wODc3NyAyNDAuNzk0MzcsNTEwLjc3NDI5IDI0MC41NTAyMSw1MDkuNDY1MzggMjQwLjMwOTk4LDUwOC4xNjA4NSAyNDAuMDczNzcsNTA2Ljg2MDUgMjM5Ljg0MTY2LDUwNS41NjQxMiAyMzkuNjEzNzEsNTA0LjI3MTU1IDIzOS4zOSw1MDIuOTgyNjIgMjM5LjE3MDU5LDUwMS42OTcxNiAyMzguOTU1NTQsNTAwLjQxNTAyIDIzOC43NDQ5LDQ5OS4xMzYwNSAyMzguNTM4NzQsNDk3Ljg2MDExIDIzOC4zMzcxLDQ5Ni41ODcwNSAyMzguMTQwMDMsNDk1LjMxNjc2IDIzNy45NDc2LDQ5NC4wNDkxIDIzNy43NTk4Miw0OTIuNzgzOTYgMjM3LjU3Njc2LDQ5MS41MjEyMiAyMzcuMzk4NDUsNDkwLjI2MDc3IDIzNy4yMjQ5NCw0ODkuMDAyNTEgMjM3LjA1NjI1LDQ4Ny43NDYzMyAyMzYuODkyNDQsNDg2LjQ5MjEzIDIzNi43MzM1MSw0ODUuMjM5ODIgMjM2LjU3OTUyLDQ4My45ODkzMSAyMzYuNDMwNDksNDgyLjc0MDUyIDIzNi4yODY0NSw0ODEuNDkzMzYgMjM2LjE0NzQzLDQ4MC4yNDc3MyAyMzYuMDEzNDUsNDc5LjAwMzU5IDIzNS44ODQ1NSw0NzcuNzYwODMgMjM1Ljc2MDc0LDQ3Ni41MTk0IDIzNS42NDIwMyw0NzUuMjc5MjIgMjM1LjUyODQ3LDQ3NC4wNDAyMSAyMzUuNDIwMDcsNDcyLjgwMjMyIDIzNS4zMTY4NCw0NzEuNTY1NDggMjM1LjIxODgsNDcwLjMyOTYyIDIzNS4xMjU5Nyw0NjkuMDk0NjggMjM1LjAzODM2LDQ2Ny44NjA2MiAyMzQuOTU1OTksNDY2LjYyNzM2IDIzNC44Nzg4OCw0NjUuMzk0ODUgMjM0LjgwNzAzLDQ2NC4xNjMwMyAyMzQuNzQwNDYsNDYyLjkzMTg1IDIzNC42NzkxNyw0NjEuNzAxMjYgMjM0LjYyMzE5LDQ2MC40NzEyIDIzNC41NzI1LDQ1OS4yNDE2MyAyMzQuNTI3MTQsNDU4LjAxMjQ5IDIzNC40ODcwOSw0NTYuNzgzNzMgMjM0LjQ1MjM4LDQ1NS41NTUzIDIzNC40MjI5OCw0NTQuMzI3MTYgMjM0LjM5ODk0LDQ1My4wOTkyNSAyMzQuMzgwMjMsNDUxLjg3MTUzIDIzNC4zNjY4Nyw0NTAuNjQzOTUgMjM0LjM1ODg0LDQ0OS40MTY0NyAyMzQuMzU2MTcsNDQ4LjE4OTA0IDIzNC4zNTg4NCw0NDYuOTYxNjEgMjM0LjM2Njg3LDQ0NS43MzQxMiAyMzQuMzgwMjMsNDQ0LjUwNjU0IDIzNC4zOTg5NCw0NDMuMjc4ODMgMjM0LjQyMjk4LDQ0Mi4wNTA5MiAyMzQuNDUyMzgsNDQwLjgyMjc4IDIzNC40ODcwOSw0MzkuNTk0MzUgMjM0LjUyNzE0LDQzOC4zNjU1OSAyMzQuNTcyNSw0MzcuMTM2NDUgMjM0LjYyMzE5LDQzNS45MDY4NyAyMzQuNjc5MTcsNDM0LjY3NjgyIDIzNC43NDA0Niw0MzMuNDQ2MjMgMjM0LjgwNzAzLDQzMi4yMTUwNSAyMzQuODc4ODgsNDMwLjk4MzIzIDIzNC45NTU5OSw0MjkuNzUwNzIgMjM1LjAzODM2LDQyOC41MTc0NiAyMzUuMTI1OTcsNDI3LjI4MzM5IDIzNS4yMTg4LDQyNi4wNDg0NSAyMzUuMzE2ODQsNDI0LjgxMjYgMjM1LjQyMDA3LDQyMy41NzU3NiAyMzUuNTI4NDcsNDIyLjMzNzg3IDIzNS42NDIwMyw0MjEuMDk4ODUgMjM1Ljc2MDc0LDQxOS44NTg2OCAyMzUuODg0NTUsNDE4LjYxNzI1IDIzNi4wMTM0NSw0MTcuMzc0NDkgMjM2LjE0NzQzLDQxNi4xMzAzNSAyMzYuMjg2NDUsNDE0Ljg4NDcyIDIzNi40MzA0OSw0MTMuNjM3NTYgMjM2LjU3OTUyLDQxMi4zODg3NyAyMzYuNzMzNTEsNDExLjEzODI2IDIzNi44OTI0NCw0MDkuODg1OTQgMjM3LjA1NjI1LDQwOC42MzE3NCAyMzcuMjI0OTQsNDA3LjM3NTU3IDIzNy4zOTg0NSw0MDYuMTE3MyAyMzcuNTc2NzYsNDA0Ljg1Njg2IDIzNy43NTk4Miw0MDMuNTk0MTIgMjM3Ljk0NzYsNDAyLjMyODk4IDIzOC4xNDAwMyw0MDEuMDYxMzIgMjM4LjMzNzEsMzk5Ljc5MTAyIDIzOC41Mzg3NCwzOTguNTE3OTcgMjM4Ljc0NDksMzk3LjI0MjAzIDIzOC45NTU1NCwzOTUuOTYzMDYgMjM5LjE3MDU5LDM5NC42ODA5MiAyMzkuMzksMzkzLjM5NTQ2IDIzOS42MTM3MSwzOTIuMTA2NTMgMjM5Ljg0MTY2LDM5MC44MTM5NiAyNDAuMDczNzcsMzg5LjUxNzU4IDI0MC4zMDk5OCwzODguMjE3MjMgMjQwLjU1MDIxLDM4Ni45MTI3IDI0MC43OTQzNywzODUuNjAzNzkgMjQxLjA0MjQxLDM4NC4yOTAzMSAyNDEuMjk0MjEsMzgyLjk3MjAzIDI0MS41NDk3LDM4MS42NDg3NCAyNDEuODA4NzcsMzgwLjMyMDE5IDI0Mi4wNzEzMSwzNzguOTg2MTIgMjQyLjMzNzIzLDM3Ny42NDYyNyAyNDIuNjA2NDEsMzc2LjMwMDM3IDI0Mi44Nzg3MywzNzQuOTQ4MSAyNDMuMTU0MDYsMzczLjU4OTE3IDI0My40MzIyNiwzNzIuMjIzMjQgMjQzLjcxMzE4LDM3MC44NDk5NyAyNDMuOTk2NjksMzY5LjQ2ODk4IDI0NC4yODI2MSwzNjguMDc5ODggMjQ0LjU3MDc3LDM2Ni42ODIyNiAyNDQuODYxLDM2NS4yNzU2OSAyNDUuMTUzMDgsMzYzLjg1OTcgMjQ1LjQ0NjgyLDM2Mi40MzM3OSAyNDUuNzQyLDM2MC45OTc0MyAyNDYuMDM4MzcsMzU5LjU1MDA2IDI0Ni4zMzU2OSwzNTguMDkxMDkgMjQ2LjYzMzY4LDM1Ni42MTk4OSAyNDYuOTMyMDUsMzU1LjEzNTc2IDI0Ny4yMzA0OSwzNTMuNjM3OTkgMjQ3LjUyODY2LDM1Mi4xMjU3OSAyNDcuODI2MTksMzUwLjU5ODMyIDI0OC4xMjI3LDM0OS4wNTQ2OCAyNDguNDE3NzgsMzQ3LjQ5MzkyIDI0OC43MTA5NCwzNDUuOTE0OTcgMjQ5LjAwMTcxLDM0NC4zMTY3MyAyNDkuMjg5NTQsMzQyLjY5Nzk4IDI0OS41NzM4NiwzNDEuMDU3NCAyNDkuODU0MDIsMzM5LjM5MzU3IDI1MC4xMjkzMywzMzcuNzA0OTQgMjUwLjM5OTAyLDMzNS45ODk4MSAyNTAuNjYyMjYsMzM0LjI0NjM1IDI1MC45MTgxMywzMzIuNDcyNTQgMjUxLjE2NTYyLDMzMC42NjYxNiAyNTEuNDAzNiwzMjguODI0OCAyNTEuNjMwODIsMzI2Ljk0NTc1IDI1MS44NDU5MSwzMjUuMDI2MDYgMjUyLjA0NzMxLDMyMy4wNjI0MyAyNTIuMjMzMywzMjEuMDUxMiAyNTIuNDAxOTQsMzE4Ljk4ODI2IDI1Mi41NTEwMSwzMTYuODY5MDMgMjUyLjY3ODA0LDMxNC42ODgzMyAyNTIuNzgwMTgsMzEyLjQ0MDI5IDI1Mi44NTQxOSwzMTAuMTE4MjYgMjUyLjg5NjM0LDMwNy43MTQ2IDI1Mi45MDIyOSwzMDUuMjIwNTcgMjUyLjg2NzAyLDMwMi42MjYwMSAyNTIuNzg0NjEsMjk5LjkxOTEgMjUyLjY0ODA1LDI5Ny4wODU5NyAyNTIuNDQ5MDUsMjk0LjExMDE3IDI1Mi4xNzc1NCwyOTAuOTcyMDQgMjUxLjgyMTMxLDI4Ny42NDc4MyAyNTEuMzY1MzQsMjg0LjEwODQ3IDI1MC43OTA4NCwyODAuMzE3OTYgMjUwLjA3NDAzLDI3Ni4yMzA5MyAyNDkuMTg0MTgsMjcxLjc4OTI3IDI0OC4wODA3NSwyNjYuOTE2ODQgMjQ2LjcwODk4LDI2MS41MTE0OCAyNDQuOTkyNTMsMjU1LjQzMTg0IDI0Mi44MjEwMSwyNDguNDc0OTIgMjQwLjAyNzA2LDI0MC4zMzUyMyAyMzYuMzQwOTcsMjMwLjUyMzk4IDIzMS4yOTAxMSwyMTguMTkwODggMjIzLjkzOTI3LDIwMS42NjU4MSAyMTIuMDM4MTcsMTc2Ljk2MDE3IDE4OC4zODE1NCwxMzEuMzU4NjUgMTg1LjU1MjE2LDEyMC4wNDAzMyAxOTMuOTM5NDIsMTI4LjE0OTgxIDIyMS42MDMxOSwxNzEuNDM3ODEgMjM3LjA0ODM0LDE5NC4wOTcyOSAyNDcuNjg0MDYsMjA4LjcyNTg1IDI1NS44Mzk0LDIxOS4yNjY1NyAyNjIuNDkzMTUsMjI3LjM2NDQ0IDI2OC4xNDUzNiwyMzMuODUzOTIgMjczLjA4NDQ3LDIzOS4yMTI5OCAyNzcuNDkxMzcsMjQzLjczOTI4IDI4MS40ODY2NywyNDcuNjI5OTUgMjg1LjE1NDYsMjUxLjAyMTc2IDI4OC41NTYyNywyNTQuMDEzMjMgMjkxLjczNzMzLDI1Ni42Nzc1MyAyOTQuNzMyNzYsMjU5LjA3MDMyIDI5Ny41Njk5NCwyNjEuMjM0ODcgMzAwLjI3MDY5LDI2My4yMDU0NyAzMDIuODUyNjIsMjY1LjAwOTY4IDMwNS4zMzAyNCwyNjYuNjY5OTIgMzA3LjcxNTUyLDI2OC4yMDQ3MyAzMTAuMDE4NTYsMjY5LjYyOTU2IDMxMi4yNDc4OCwyNzAuOTU3MzkgMzE0LjQxMDc1LDI3Mi4xOTkyNSAzMTYuNTEzNDUsMjczLjM2NDU4IDMxOC41NjEzOSwyNzQuNDYxNSAzMjAuNTU5MzIsMjc1LjQ5NzA2IDMyMi41MTEzNywyNzYuNDc3NDEgMzI0LjQyMTIyLDI3Ny40MDc5MiAzMjYuMjkyMDksMjc4LjI5MzM1IDMyOC4xMjY4NiwyNzkuMTM3OSAzMjkuOTI4MTEsMjc5Ljk0NTI5IDMzMS42OTgxNSwyODAuNzE4ODcgMzMzLjQzOTA3LDI4MS40NjE2MSAzMzUuMTUyNzMsMjgyLjE3NjIgMzM2Ljg0MDg0LDI4Mi44NjUwNiAzMzguNTA0OTQsMjgzLjUzMDM3IDM0MC4xNDY0NCwyODQuMTc0MTMgMzQxLjc2NjYzLDI4NC43OTgxMiAzNDMuMzY2NjksMjg1LjQwNDAxIDM0NC45NDc2OSwyODUuOTkzMzEgMzQ2LjUxMDYzLDI4Ni41NjczNiAzNDguMDU2NDMsMjg3LjEyNzQ3IDM0OS41ODU5MywyODcuNjc0NzcgMzUxLjA5OTkyLDI4OC4yMTAzNiAzNTIuNTk5MTIsMjg4LjczNTIxIDM1NC4wODQyLDI4OS4yNTAyMyAzNTUuNTU1ODYsMjg5Ljc1NjMgMzU3LjAxNDU2LDI5MC4yNTQxOSAzNTguNDYwNzYsMjkwLjc0NDYyIDM1OS44OTUyNiwyOTEuMjI4MjggMzYxLjMxODM2LDI5MS43MDU4MyAzNjIuNzMwNTYsMjkyLjE3NzgyIDM2NC4xMzIxNiwyOTIuNjQ0ODQgMzY1LjUyMzY2LDI5My4xMDczOSAzNjYuOTA1NDYsMjkzLjU2NTk2IDM2OC4yNzc3NiwyOTQuMDIxIDM2OS42NDEwNiwyOTQuNDcyOTUgMzcwLjk5NTQ2LDI5NC45MjIyIDM3Mi4zNDE0NiwyOTUuMzY5MTMgMzczLjY3OTE2LDI5NS44MTQxMSAzNzUuMDA4ODYsMjk2LjI1NzQ1IDM3Ni4zMzA4NiwyOTYuNjk5NDggMzc3LjY0NTM2LDI5Ny4xNDA1MSAzNzguOTUyNjYsMjk3LjU4MDgxIDM4MC4yNTI4NiwyOTguMDIwNjUgMzgxLjU0NjE2LDI5OC40NjAyOCAzODIuODMyNzYsMjk4Ljg5OTk1IDM4NC4xMTI4NiwyOTkuMzM5ODcgMzg1LjM4NjU2LDI5OS43ODAyNiAzODYuNjU0MTYsMzAwLjIyMTMyIDM4Ny45MTU2NiwzMDAuNjYzMjYgMzg5LjE3MTM2LDMwMS4xMDYyNSAzOTAuNDIxMTYsMzAxLjU1MDQ3IDM5MS42NjU0NiwzMDEuOTk2MDkgMzkyLjkwNDI2LDMwMi40NDMyNiAzOTQuMTM3NTYsMzAyLjg5MjE0IDM5NS4zNjU2NiwzMDMuMzQyODYgMzk2LjU4ODU2LDMwMy43OTU1NyAzOTcuODA2NDYsMzA0LjI1MDQgMzk5LjAxOTQ2LDMwNC43MDc0NyA0MDAuMjI3NTYsMzA1LjE2NjkgNDAxLjQzMDc2LDMwNS42Mjg4MSA0MDIuNjI5NDYsMzA2LjA5MzI5IDQwMy44MjM1NiwzMDYuNTYwNDYgNDA1LjAxMzE2LDMwNy4wMzA0MSA0MDYuMTk4MTYsMzA3LjUwMzI1IDQwNy4zNzg4NiwzMDcuOTc5MDUgNDA4LjU1NTM2LDMwOC40NTc5MyA0MDkuNzI3NTYsMzA4LjkzOTk0IDQxMC44OTU2NiwzMDkuNDI1MTYgNDEyLjA1OTY2LDMwOS45MTM2OCA0MTMuMjE5NjYsMzEwLjQwNTU3IDQxNC4zNzU1NiwzMTAuOTAwOSA0MTUuNTI3NjYsMzExLjM5OTc0IDQxNi42NzU5NiwzMTEuOTAyMTUgNDE3LjgyMDQ2LDMxMi40MDgyIDQxOC45NjExNiwzMTIuOTE3OTQgNDIwLjA5ODA2LDMxMy40MzE0MyA0MjEuMjMxNDYsMzEzLjk0ODcyIDQyMi4zNjEzNiwzMTQuNDY5ODggNDIzLjQ4NzQ2LDMxNC45OTQ5NCA0MjQuNjEwMjYsMzE1LjUyMzk2IDQyNS43Mjk2NiwzMTYuMDU2OTggNDI2Ljg0NTU2LDMxNi41OTQwNSA0MjcuOTU3OTYsMzE3LjEzNTIyIDQyOS4wNjcyNiwzMTcuNjgwNTIgNDMwLjE3MzE2LDMxOC4yMjk5OSA0MzEuMjc1ODYsMzE4Ljc4MzY4IDQzMi4zNzU0NiwzMTkuMzQxNjIgNDMzLjQ3MTg2LDMxOS45MDM4NCA0MzQuNTY1MDYsMzIwLjQ3MDM4IDQzNS42NTUyNiwzMjEuMDQxMjggNDM2Ljc0MjM2LDMyMS42MTY1NyA0MzcuODI2NTYsMzIyLjE5NjI2IDQzOC45MDc3NiwzMjIuNzgwNDEgNDM5Ljk4NTk2LDMyMy4zNjkwMyA0NDEuMDYxNDYsMzIzLjk2MjE1IDQ0Mi4xMzQwNiwzMjQuNTU5ODEgNDQzLjIwMzg2LDMyNS4xNjIwMSA0NDQuMjcwODYsMzI1Ljc2ODggNDQ1LjMzNTE2LDMyNi4zODAyIDQ0Ni4zOTY4NiwzMjYuOTk2MjQgNDQ3LjQ1NTg2LDMyNy42MTY5MiA0NDguNTEyMzYsMzI4LjI0MjI5IDQ0OS41NjYxNiwzMjguODcyMzUgNDUwLjYxNzY2LDMyOS41MDcxMyA0NTEuNjY2NDYsMzMwLjE0NjY1IDQ1Mi43MTI5NiwzMzAuNzkwOTQgNDUzLjc1NzE2LDMzMS40NCA0NTQuNzk4ODYsMzMyLjA5Mzg2IDQ1NS44MzgzNiwzMzIuNzUyNTQgNDU2Ljg3NTU2LDMzMy40MTYwNiA0NTcuOTEwNzYsMzM0LjA4NDQzIDQ1OC45NDM2NiwzMzQuNzU3NjYgNDU5Ljk3NDQ2LDMzNS40MzU3OSA0NjEuMDAzMzYsMzM2LjExODg0IDQ2Mi4wMzAxNiwzMzYuODA2NzkgNDYzLjA1NTE2LDMzNy40OTk2OSA0NjQuMDc4MjYsMzM4LjE5NzU2IDQ2NS4wOTk0NiwzMzguOTAwMzggNDY2LjExODk2LDMzOS42MDgyMSA0NjcuMTM2ODYsMzQwLjMyMTA0IDQ2OC4xNTI5NiwzNDEuMDM4ODkgNDY5LjE2Nzc2LDM0MS43NjE3NyA0NzAuMTgwODYsMzQyLjQ4OTcxIDQ3MS4xOTI4NiwzNDMuMjIyNzMgNDcyLjIwMzI2LDM0My45NjA4MyA0NzMuMjEyNDYsMzQ0LjcwNDA0IDQ3NC4yMjA1NiwzNDUuNDUyMzYgNDc1LjIyNzQ2LDM0Ni4yMDU4MiA0NzYuMjMzNDYsMzQ2Ljk2NDQzIDQ3Ny4yMzg1NiwzNDcuNzI4MjEgNDc4LjI0Mjc2LDM0OC40OTcxOCA0NzkuMjQ2MzYsMzQ5LjI3MTM2IDQ4MC4yNDkyNiwzNTAuMDUwNzYgNDgxLjI1MTc2LDM1MC44MzU0IDQ4Mi4yNTM3NiwzNTEuNjI1MzEgNDgzLjI1NTQ2LDM1Mi40MjA0OSA0ODQuMjU3MDYsMzUzLjIyMDk4IDQ4NS4yNTg2NiwzNTQuMDI2NzggNDg2LjI2MDM2LDM1NC44Mzc5NCA0ODcuMjYyMjYsMzU1LjY1NDQ2IDQ4OC4yNjQ1NiwzNTYuNDc2MzYgNDg5LjI2NzM2LDM1Ny4zMDM2NiA0OTAuMjcwOTYsMzU4LjEzNjQxIDQ5MS4yNzUzNiwzNTguOTc0NjEgNDkyLjI4MDc2LDM1OS44MTgzIDQ5My4yODczNiwzNjAuNjY3NSA0OTQuMjk1NDYsMzYxLjUyMjI1IDQ5NS4zMDUwNiwzNjIuMzgyNTYgNDk2LjMxNjU2LDM2My4yNDg0NyA0OTcuMzMwMDYsMzY0LjEyMDAxIDQ5OC4zNDU4NiwzNjQuOTk3MjEgNDk5LjM2NDA2LDM2NS44ODAxMSA1MDAuMzg1MDYsMzY2Ljc2ODc0IDUwMS40MDkwNiwzNjcuNjYzMTYgNTAyLjQzNjQ2LDM2OC41NjMzNyA1MDMuNDY3NTYsMzY5LjQ2OTQ1IDUwNC41MDIzNiwzNzAuMzgxNCA1MDUuNTQxNjYsMzcxLjI5OTMxIDUwNi41ODU0NiwzNzIuMjIzMiA1MDcuNjM0MjYsMzczLjE1MzEzIDUwOC42ODg0NiwzNzQuMDg5MTUgNTA5Ljc0ODU2LDM3NS4wMzEzMiA1MTAuODE0ODYsMzc1Ljk3OTY5IDUxMS44ODc3NiwzNzYuOTM0MzEgNTEyLjk2ODA2LDM3Ny44OTUyNiA1MTQuMDU2MDYsMzc4Ljg2MjYgNTE1LjE1MjQ2LDM3OS44MzY0MSA1MTYuMjU3NjYsMzgwLjgxNjc1IDUxNy4zNzI0NiwzODEuODAzNzIgNTE4LjQ5NzU2LDM4Mi43OTczOCA1MTkuNjMzNjYsMzgzLjc5Nzg1IDUyMC43ODE1NiwzODQuODA1MTkgNTIxLjk0MjE2LDM4NS44MTk1MSA1MjMuMTE2MTYsMzg2Ljg0MDkyIDUyNC4zMDQ3NiwzODcuODY5NTMgNTI1LjUwODg2LDM4OC45MDU0NCA1MjYuNzI5NzYsMzg5Ljk0ODgxIDUyNy45Njg0NiwzOTAuOTk5NzQgNTI5LjIyNjM2LDM5Mi4wNTg0IDUzMC41MDUwNiwzOTMuMTI0OTEgNTMxLjgwNTc2LDM5NC4xOTk0NSA1MzMuMTMwNjYsMzk1LjI4MjE5IDUzNC40ODEwNiwzOTYuMzczMzIgNTM1Ljg1OTM2LDM5Ny40NzMwMiA1MzcuMjY3NjYsMzk4LjU4MTUyIDUzOC43MDgyNiwzOTkuNjk5MDQgNTQwLjE4Mzg2LDQwMC44MjU4MSA1NDEuNjk3NTYsNDAxLjk2MjEyIDU0My4yNTI1Niw0MDMuMTA4MjQgNTQ0Ljg1MjQ2LDQwNC4yNjQ0NiA1NDYuNTAxMTYsNDA1LjQzMTE2IDU0OC4yMDM0Niw0MDYuNjA4NjYgNTQ5Ljk2NDI2LDQwNy43OTczOCA1NTEuNzg5MjYsNDA4Ljk5Nzc0IDU1My42ODUwNiw0MTAuMjEwMjIgNTU1LjY1ODk2LDQxMS40MzUzMyA1NTcuNzE5NTYsNDEyLjY3MzY1IDU1OS44NzY0Niw0MTMuOTI1ODMgNTYyLjE0MTA2LDQxNS4xOTI1NSA1NjQuNTI2NDYsNDE2LjQ3NDYzIDU2Ny4wNDgzNiw0MTcuNzcyOTQgNTY5LjcyNDk2LDQxOS4wODg0OSA1NzIuNTc4NDYsNDIwLjQyMjQyIDU3NS42MzUzNiw0MjEuNzc2MDMgNTc4LjkyODU2LDQyMy4xNTA4MiA1ODIuNDk4NDYsNDI0LjU0ODU2IDU4Ni4zOTYzNiw0MjUuOTcxMjkgNTkwLjY4Nzg2LDQyNy40MjE0OSA1OTUuNDU5MTYsNDI4LjkwMjEgNjAwLjgyNjI2LDQzMC40MTY3OSA2MDYuOTQ5NjYsNDMxLjk3MDEzIDYxNC4wNjAyNiw0MzMuNTY4IDYyMi41MDY0Niw0MzUuMjE4MjIgNjMyLjg0NjI2LDQzNi45MzE1OSA2NDYuMDUyMzYsNDM4LjcyMzk3IDY2NC4wMzg5Niw0NDAuNjIwNDkgNjkxLjM4NTI2LDQ0Mi42NjY2NCA3NDIuNzA1NjYsNDQ0Ljk4MDE4IDc1My45MjIyNiw0NDguMTg5MDJcXFwiIGlkPVxcXCJwYXRoNFxcXCIgaW5rc2NhcGU6Y29ubmVjdG9yLWN1cnZhdHVyZT1cXFwiMFxcXCI+PC9wYXRoPjwvc3ZnPlwiIiwiZXhwb3J0IGRlZmF1bHQge1xyXG4gIENpcmNsZURpYW1ldGVyOiA0LFxyXG4gIEJpYXNUb3dhcmRzOiAnQ2VudGVyJyxcclxuICBNYXhXYWxrZXJzOiA0MDAwLFxyXG4gIFNob3dXYWxrZXJzOiBmYWxzZSxcclxuICBXYWxrZXJTb3VyY2U6ICdFZGdlcycsXHJcbiAgRWRnZU1hcmdpbjogMjAwXHJcbn07IiwiaW1wb3J0IFNldHRpbmdzIGZyb20gJy4vU2V0dGluZ3MnO1xyXG5pbXBvcnQgRExBIGZyb20gJy4uLy4uLy4uL2NvcmUvRExBJztcclxuaW1wb3J0IFNWR0xvYWRlciBmcm9tICcuLi8uLi8uLi9jb3JlL1NWR0xvYWRlcic7XHJcblxyXG5sZXQgc3ZnRmlsZXMgPSB7XHJcbiAgZGxhOiByZXF1aXJlKFwiLi4vc3ZnL2RsYS5zdmdcIiksXHJcbiAgcG9seWdvbnM6IHJlcXVpcmUoJy4uL3N2Zy9wb2x5Z29ucy5zdmcnKSxcclxuICBzdXBlcnNoYXBlOiByZXF1aXJlKCcuLi9zdmcvc3VwZXJzaGFwZS5zdmcnKVxyXG59XHJcblxyXG5sZXQgZGxhLFxyXG4gICAgY3VycmVudFNWR0ZpbGUgPSBzdmdGaWxlcy5zdXBlcnNoYXBlLFxyXG4gICAgc2hvd1RleHQgPSB0cnVlO1xyXG5cclxuY29uc3Qgc2tldGNoID0gZnVuY3Rpb24gKHA1KSB7XHJcbiAgLy8gU2V0dXAgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgcDUuc2V0dXAgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBwNS5jcmVhdGVDYW52YXMod2luZG93LmlubmVyV2lkdGgsIHdpbmRvdy5pbm5lckhlaWdodCk7XHJcbiAgICBwNS5jb2xvck1vZGUocDUuSFNCLCAyNTUpO1xyXG4gICAgcDUuZWxsaXBzZU1vZGUocDUuQ0VOVEVSKTtcclxuXHJcbiAgICAvLyBTZXQgdXAgdGhlIHNpbXVsYXRpb24gZW52aXJvbm1lbnRcclxuICAgIGRsYSA9IG5ldyBETEEocDUsIFNldHRpbmdzKTtcclxuXHJcbiAgICAvLyBTcGF3biB3YWxrZXJzIGFuZCBjcmVhdGUgY2x1c3RlciBzZWVkIHNoYXBlIGZyb20gU1ZHXHJcbiAgICByZXNldCgpO1xyXG4gIH1cclxuXHJcbiAgLy8gRHJhdyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgcDUuZHJhdyA9IGZ1bmN0aW9uICgpIHtcclxuICAgIGRsYS5pdGVyYXRlKCk7XHJcbiAgICBkbGEuZHJhdygpO1xyXG4gICAgZHJhd1RleHQoKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHJlc2V0KCkge1xyXG4gICAgZGxhLnJlbW92ZUFsbCgpO1xyXG4gICAgY3JlYXRlQ3VzdG9tU2hhcGVzRnJvbVNWRyhjdXJyZW50U1ZHRmlsZSk7XHJcbiAgICBkbGEuY3JlYXRlRGVmYXVsdFdhbGtlcnMoKTtcclxuICAgIGRsYS5jcmVhdGVEZWZhdWx0V2Fsa2Vycyh1bmRlZmluZWQsICdPZmZzY3JlZW4nKTtcclxuICB9XHJcblxyXG4gIC8vIERyYXcgaGVscGZ1bCB0ZXh0XHJcbiAgZnVuY3Rpb24gZHJhd1RleHQoKSB7XHJcbiAgICBpZihzaG93VGV4dCkge1xyXG4gICAgICBwNS5maWxsKDApO1xyXG4gICAgICBwNS5ub1N0cm9rZSgpO1xyXG5cclxuICAgICAgcDUudGV4dFNpemUoMjApO1xyXG4gICAgICBwNS50ZXh0U3R5bGUocDUuQk9MRCk7XHJcbiAgICAgIHA1LnRleHQoJzA1IC0gU1ZHIGlucHV0JywgMjAsIDQwKTtcclxuXHJcbiAgICAgIHA1LnRleHRTdHlsZShwNS5OT1JNQUwpO1xyXG4gICAgICBwNS5maWxsKDE1MCk7XHJcbiAgICAgIHA1LnRleHQoYEdyb3d0aCB1c2luZyBzaGFwZXMgZnJvbSBTVkcgZmlsZXNcclxuXHJcbktleSBjb21tYW5kczpcclxuMSAtIFNWRyB0ZXh0XHJcbjIgLSBjb21wb3VuZCBwb2x5Z29uXHJcbjMgLSBzdXBlcnNoYXBlYCwgMjAsIDcwKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIExvYWQgcGF0aHMgZnJvbSBhbiBTVkcgZmlsZSAoZW1iZWRkZWQgaW4gdGhlIGluZGV4Lmh0bWwgZmlsZSkgYW5kIHVzZSB0aGVtIHRvIGNyZWF0ZSBzaGFwZXMgaW4gdGhlIERMQSBzaW11bGF0aW9uXHJcbiAgZnVuY3Rpb24gY3JlYXRlQ3VzdG9tU2hhcGVzRnJvbVNWRyhmaWxlKSB7XHJcbiAgICBsZXQgcGF0aHMgPSBTVkdMb2FkZXIubG9hZEZyb21GaWxlQ29udGVudHMoZmlsZSk7XHJcblxyXG4gICAgZm9yKGxldCBwYXRoIG9mIHBhdGhzKSB7XHJcbiAgICAgIHBhdGguc3R1Y2sgPSB0cnVlO1xyXG4gICAgICBwYXRoLnNvbGlkID0gZmFsc2U7XHJcbiAgICAgIHBhdGgueCArPSB3aW5kb3cuaW5uZXJXaWR0aCAvIDIgLSA5MDAgLyAyO1xyXG4gICAgICBwYXRoLnkgKz0gd2luZG93LmlubmVySGVpZ2h0IC8gMiAtIDkwMCAvIDI7XHJcbiAgICB9XHJcblxyXG4gICAgZGxhLmNyZWF0ZVNoYXBlc0Zyb21QYXRocyhwYXRocyk7XHJcbiAgfVxyXG5cclxuICAvLyBLZXkgaGFuZGxlciAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICBwNS5rZXlSZWxlYXNlZCA9IGZ1bmN0aW9uICgpIHtcclxuICAgIHN3aXRjaCAocDUua2V5KSB7XHJcbiAgICAgIGNhc2UgJyAnOlxyXG4gICAgICAgIGRsYS50b2dnbGVQYXVzZSgpO1xyXG4gICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgY2FzZSAndyc6XHJcbiAgICAgICAgZGxhLnRvZ2dsZVNob3dXYWxrZXJzKCk7XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBjYXNlICdjJzpcclxuICAgICAgICBkbGEudG9nZ2xlU2hvd0NsdXN0ZXJzKCk7XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBjYXNlICdyJzpcclxuICAgICAgICByZXNldCgpO1xyXG4gICAgICAgIGJyZWFrO1xyXG5cclxuICAgICAgY2FzZSAnZic6XHJcbiAgICAgICAgZGxhLnRvZ2dsZVVzZUZyYW1lKCk7XHJcbiAgICAgICAgcmVzZXQoKTtcclxuICAgICAgICBicmVhaztcclxuXHJcbiAgICAgIGNhc2UgJ3MnOlxyXG4gICAgICAgIGRsYS50b2dnbGVTaG93U2hhcGVzKCk7XHJcbiAgICAgICAgcmVzdGFydFdvcmxkKCk7XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBjYXNlICdsJzpcclxuICAgICAgICBkbGEudG9nZ2xlTGluZVJlbmRlcmluZ01vZGUoKTtcclxuICAgICAgICBicmVhaztcclxuXHJcbiAgICAgIGNhc2UgJ2UnOlxyXG4gICAgICAgIGRsYS5leHBvcnQoKTtcclxuICAgICAgICBicmVhaztcclxuXHJcbiAgICAgIGNhc2UgJzEnOlxyXG4gICAgICAgIGN1cnJlbnRTVkdGaWxlID0gc3ZnRmlsZXMuZGxhO1xyXG4gICAgICAgIHJlc2V0KCk7XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBjYXNlICcyJzpcclxuICAgICAgICBjdXJyZW50U1ZHRmlsZSA9IHN2Z0ZpbGVzLnBvbHlnb25zO1xyXG4gICAgICAgIHJlc2V0KCk7XHJcbiAgICAgICAgYnJlYWs7XHJcblxyXG4gICAgICBjYXNlICczJzpcclxuICAgICAgICBjdXJyZW50U1ZHRmlsZSA9IHN2Z0ZpbGVzLnN1cGVyc2hhcGU7XHJcbiAgICAgICAgcmVzZXQoKTtcclxuICAgICAgICBicmVhaztcclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi8vIExhdW5jaCB0aGUgc2tldGNoIHVzaW5nIHA1anMgaW4gaW5zdGFudGlhdGVkIG1vZGVcclxubmV3IHA1KHNrZXRjaCk7Il0sInNvdXJjZVJvb3QiOiIifQ==